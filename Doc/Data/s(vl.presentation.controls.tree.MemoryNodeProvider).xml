<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.tree.MemoryNodeProvider">
    <ClassDecl Access="Public" Name="MemoryNodeProvider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;An in-memory &lt;links&gt;&lt;link cref="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" /&gt;&lt;/links&gt; implementation.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="ChildList" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::ChildList" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::ChildList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ChildListEnumerator" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::ChildListEnumerator" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::ChildListEnumerator">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::IEnumerator" Name="IEnumerator">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::IEnumerator`1@s:vl.collections.IEnumerator`1" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <ClassDecl Access="Public" Name="NodeCollection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection" ClassType="Class">
          <Children>
            <VarDecl Access="Protected" Name="ownerProvider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::ownerProvider" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::ownerProvider" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Protected" Name="OnBeforeChildModified" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnBeforeChildModified" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnBeforeChildModified(vint,vint,vint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnBeforeChildModified::start" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnBeforeChildModified(vint,vint,vint)::start" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnBeforeChildModified::count" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnBeforeChildModified(vint,vint,vint)::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="newCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnBeforeChildModified::newCount" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnBeforeChildModified(vint,vint,vint)::newCount" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="OnAfterChildModified" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnAfterChildModified" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnAfterChildModified(vint,vint,vint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnAfterChildModified::start" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnAfterChildModified(vint,vint,vint)::start" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnAfterChildModified::count" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnAfterChildModified(vint,vint,vint)::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="newCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnAfterChildModified::newCount" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::OnAfterChildModified(vint,vint,vint)::newCount" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="QueryInsert" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryInsert" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryInsert::index" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryInsert::child" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::child" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="QueryRemove" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryRemove" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryRemove(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryRemove::index" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryRemove(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryRemove::child" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::QueryRemove(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::child" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="BeforeInsert" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeInsert" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeInsert::index" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeInsert::child" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::child" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="BeforeRemove" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeRemove" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeRemove(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeRemove::index" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeRemove(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeRemove::child" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::BeforeRemove(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::child" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="AfterInsert" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterInsert" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterInsert::index" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterInsert::child" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterInsert(vint,&amp; const Ptr&lt;MemoryNodeProvider&gt;)::child" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <GenericTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                  <TypeArguments>
                                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </TypeArguments>
                                </GenericTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="AfterRemove" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterRemove" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterRemove(vint,vint)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterRemove::index" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterRemove(vint,vint)::index" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterRemove::count" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::AfterRemove(vint,vint)::count" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::vint@s:vl.vint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Protected" Name="NodeCollection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::NodeCollection" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection::NodeCollection()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::collections::ObservableListBase" Name="ObservableListBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections::ObservableListBase`2@s:vl.collections.ObservableListBase`2" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::collections@ns:vl.collections" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <VarDecl Access="Protected" Name="parent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::parent" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::parent" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="expanding" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::expanding" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::expanding" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="childCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::childCount" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::childCount" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="totalVisibleNodeCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::totalVisibleNodeCount" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::totalVisibleNodeCount" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="offsetBeforeChildModified" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::offsetBeforeChildModified" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::offsetBeforeChildModified" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="data" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::data" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::data" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="children" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::children" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::children" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection" Name="NodeCollection">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection@s:vl.presentation.controls.tree.MemoryNodeProvider" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="GetCallbackProxyInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetCallbackProxyInternal" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetCallbackProxyInternal()" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProviderCallback" Name="INodeProviderCallback">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::INodeProviderCallback@s:vl.presentation.controls.tree.INodeProviderCallback" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnChildTotalVisibleNodesChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::OnChildTotalVisibleNodesChanged" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::OnChildTotalVisibleNodesChanged(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="offset" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::OnChildTotalVisibleNodesChanged::offset" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::OnChildTotalVisibleNodesChanged(vint)::offset" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MemoryNodeProvider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::MemoryNodeProvider" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::MemoryNodeProvider(Ptr&lt;DescriptableObject&gt;)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a node provider with a data object.&lt;/summary&gt;
  &lt;param name="_data"&gt;The data object.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_data" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::MemoryNodeProvider::_data" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::MemoryNodeProvider(Ptr&lt;DescriptableObject&gt;)::_data" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~MemoryNodeProvider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::~MemoryNodeProvider" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::~MemoryNodeProvider()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetData" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetData" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetData()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the data object.&lt;/summary&gt;
  &lt;returns&gt;The data object.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetData" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::SetData" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::SetData(&amp; const Ptr&lt;DescriptableObject&gt;)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the data object.&lt;/summary&gt;
  &lt;param name="value"&gt;The data object.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::SetData::value" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::SetData(&amp; const Ptr&lt;DescriptableObject&gt;)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="NotifyDataModified" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NotifyDataModified" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::NotifyDataModified()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Notify that the state in the binded data object is modified.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Children" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::Children" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::Children()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all sub nodes.&lt;/summary&gt;
  &lt;returns&gt;All sub nodes.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection" Name="NodeCollection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider::NodeCollection@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetExpanding" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetExpanding" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetExpanding()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetExpanding" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::SetExpanding" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::SetExpanding(bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::SetExpanding::value" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::SetExpanding(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CalculateTotalVisibleNodes" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::CalculateTotalVisibleNodes" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::CalculateTotalVisibleNodes()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetChildCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetChildCount" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetChildCount()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetParent" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetParent()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetChild" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetChild" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetChild(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetChild::index" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::GetChild(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Increase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::Increase" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::Increase()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Release" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeProvider::Release" OverloadKey="::vl::presentation::controls::tree::MemoryNodeProvider::Release()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>