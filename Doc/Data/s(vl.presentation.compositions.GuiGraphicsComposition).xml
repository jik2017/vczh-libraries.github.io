<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.compositions.GuiGraphicsComposition">
    <ClassDecl Access="Public" Name="GuiGraphicsComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents a composition for &lt;links&gt;&lt;link cref="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" /&gt;&lt;/links&gt;. A composition is a way to define the size and the position using the information from graphics elements and sub compositions.
When a graphics composition is destroyed, all sub composition will be destroyed. The life cycle of the contained graphics element is partially controlled by the smart pointer to the graphics element inside the composition.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="CompositionList" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::CompositionList" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::CompositionList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <EnumDecl Access="Public" Name="MinSizeLimitation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation" EnumClass="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Minimum size limitation.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <EnumItemDecl Access="Public" Name="NoLimit" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation::NoLimit" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation::NoLimit">
              <Document>&lt;Document&gt;
  &lt;summary&gt;No limitation for the minimum size.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="LimitToElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation::LimitToElement" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation::LimitToElement">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Minimum size of this composition is the minimum size of the contained graphics element.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="LimitToElementAndChildren" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation::LimitToElementAndChildren" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation::LimitToElementAndChildren">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Minimum size of this composition is combiniation of sub compositions and the minimum size of the contained graphics element.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
          </Children>
        </EnumDecl>
        <ClassDecl Access="Protected" Name="GraphicsHostRecord" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="host" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord::host" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord::host" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsHost" Name="GuiGraphicsHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsHost@s:vl.presentation.compositions.GuiGraphicsHost" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="renderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord::renderTarget" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord::renderTarget" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" Name="IGuiGraphicsRenderTarget">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="nativeWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord::nativeWindow" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord::nativeWindow" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <VarDecl Access="Protected" Name="children" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::children" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::children" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition::CompositionList" Name="CompositionList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiGraphicsComposition::CompositionList@s:vl.presentation.compositions.GuiGraphicsComposition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="parent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::parent" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::parent" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ownedElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::ownedElement" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::ownedElement" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsElement" Name="IGuiGraphicsElement">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="visible" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::visible" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::visible" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="transparentToMouse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::transparentToMouse" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::transparentToMouse" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="minSizeLimitation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::minSizeLimitation" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::minSizeLimitation" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation" Name="MinSizeLimitation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation@s:vl.presentation.compositions.GuiGraphicsComposition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="eventReceiver" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::eventReceiver" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::eventReceiver" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsEventReceiver" Name="GuiGraphicsEventReceiver">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiGraphicsEventReceiver@s:vl.presentation.compositions.GuiGraphicsEventReceiver" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="relatedHostRecord" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::relatedHostRecord" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::relatedHostRecord" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord" Name="GraphicsHostRecord">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord@s:vl.presentation.compositions.GuiGraphicsComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="associatedControl" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::associatedControl" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::associatedControl" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="associatedCursor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::associatedCursor" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::associatedCursor" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeCursor" Name="INativeCursor">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeCursor@s:vl.presentation.INativeCursor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="associatedHitTestResult" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::associatedHitTestResult" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::associatedHitTestResult" Static="False">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener::HitTestResult" Name="HitTestResult">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeWindowListener::HitTestResult@s:vl.presentation.INativeWindowListener" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener" Name="INativeWindowListener">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeWindowListener@s:vl.presentation.INativeWindowListener" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="margin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::margin" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::margin" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="internalMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::internalMargin" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::internalMargin" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="preferredMinSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::preferredMinSize" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::preferredMinSize" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="isRendering" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::isRendering" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::isRendering" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="OnControlParentChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnControlParentChanged" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnControlParentChanged(* controls::GuiControl)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnControlParentChanged::control" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnControlParentChanged(* controls::GuiControl)::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnChildInserted" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnChildInserted" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnChildInserted(* GuiGraphicsComposition)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnChildInserted::child" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnChildInserted(* GuiGraphicsComposition)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnChildRemoved" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnChildRemoved" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnChildRemoved(* GuiGraphicsComposition)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnChildRemoved::child" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnChildRemoved(* GuiGraphicsComposition)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnParentChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnParentChanged" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnParentChanged(* GuiGraphicsComposition,* GuiGraphicsComposition)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="oldParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnParentChanged::oldParent" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnParentChanged(* GuiGraphicsComposition,* GuiGraphicsComposition)::oldParent" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="newParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnParentChanged::newParent" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnParentChanged(* GuiGraphicsComposition,* GuiGraphicsComposition)::newParent" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnParentLineChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnParentLineChanged" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnParentLineChanged()" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnRenderContextChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::OnRenderContextChanged" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::OnRenderContextChanged()" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="UpdateRelatedHostRecord" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::UpdateRelatedHostRecord" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::UpdateRelatedHostRecord(* GraphicsHostRecord)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="record" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::UpdateRelatedHostRecord::record" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::UpdateRelatedHostRecord(* GraphicsHostRecord)::record" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord" Name="GraphicsHostRecord">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition::GraphicsHostRecord@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="SetAssociatedControl" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedControl" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedControl(* controls::GuiControl)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedControl::control" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedControl(* controls::GuiControl)::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="InvokeOnCompositionStateChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::InvokeOnCompositionStateChanged" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::InvokeOnCompositionStateChanged()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="SharedPtrDestructorProc" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SharedPtrDestructorProc" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SharedPtrDestructorProc(* DescriptableObject,bool)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="obj" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SharedPtrDestructorProc::obj" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SharedPtrDestructorProc(* DescriptableObject,bool)::obj" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="forceDisposing" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SharedPtrDestructorProc::forceDisposing" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SharedPtrDestructorProc(* DescriptableObject,bool)::forceDisposing" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiGraphicsComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GuiGraphicsComposition" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GuiGraphicsComposition()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiGraphicsComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::~GuiGraphicsComposition" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::~GuiGraphicsComposition()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsRendering" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::IsRendering" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::IsRendering()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetParent" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetParent()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the parent composition.&lt;/summary&gt;
  &lt;returns&gt;The parent composition.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Children" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::Children" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::Children()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all child compositions ordered by z-order from low to high.&lt;/summary&gt;
  &lt;returns&gt;Child compositions.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition::CompositionList" Name="CompositionList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition::CompositionList@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddChild" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::AddChild" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::AddChild(* GuiGraphicsComposition)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a composition as a child.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="child"&gt;The child composition to add.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::AddChild::child" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::AddChild(* GuiGraphicsComposition)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InsertChild" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::InsertChild" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::InsertChild(vint,* GuiGraphicsComposition)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a composition as a child with a specified z-order.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="index"&gt;The z-order. 0 means the lowest position.&lt;/param&gt;
  &lt;param name="child"&gt;The child composition to add.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::InsertChild::index" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::InsertChild(vint,* GuiGraphicsComposition)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::InsertChild::child" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::InsertChild(vint,* GuiGraphicsComposition)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RemoveChild" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::RemoveChild" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::RemoveChild(* GuiGraphicsComposition)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Remove a child composition.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="child"&gt;The child composition to remove.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::RemoveChild::child" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::RemoveChild(* GuiGraphicsComposition)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MoveChild" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::MoveChild" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::MoveChild(* GuiGraphicsComposition,vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Move a child composition to a new z-order.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="child"&gt;The child composition to move.&lt;/param&gt;
  &lt;param name="newIndex"&gt;The new z-order. 0 means the lowest position.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::MoveChild::child" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::MoveChild(* GuiGraphicsComposition,vint)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="newIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::MoveChild::newIndex" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::MoveChild(* GuiGraphicsComposition,vint)::newIndex" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetOwnedElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetOwnedElement" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetOwnedElement()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the contained graphics element.&lt;/summary&gt;
  &lt;returns&gt;The contained graphics element.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsElement" Name="IGuiGraphicsElement">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetOwnedElement" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetOwnedElement" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetOwnedElement(Ptr&lt;elements::IGuiGraphicsElement&gt;)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the contained graphics element.&lt;/summary&gt;
  &lt;param name="element"&gt;The new graphics element to set.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="element" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetOwnedElement::element" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetOwnedElement(Ptr&lt;elements::IGuiGraphicsElement&gt;)::element" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsElement" Name="IGuiGraphicsElement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetVisible" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetVisible" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetVisible()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the visibility of the composition.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the composition is visible.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetVisible" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetVisible" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetVisible(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the visibility of the composition.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to make the composition visible.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetVisible::value" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetVisible(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMinSizeLimitation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetMinSizeLimitation" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetMinSizeLimitation()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the minimum size limitation of the composition.&lt;/summary&gt;
  &lt;returns&gt;The minimum size limitation of the composition.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation" Name="MinSizeLimitation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation@s:vl.presentation.compositions.GuiGraphicsComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetMinSizeLimitation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetMinSizeLimitation" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetMinSizeLimitation(MinSizeLimitation)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the minimum size limitation of the composition.&lt;/summary&gt;
  &lt;param name="value"&gt;The minimum size limitation of the composition.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetMinSizeLimitation::value" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetMinSizeLimitation(MinSizeLimitation)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation" Name="MinSizeLimitation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation@s:vl.presentation.compositions.GuiGraphicsComposition" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRenderTarget" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRenderTarget" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRenderTarget()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the binded render target.&lt;/summary&gt;
  &lt;returns&gt;The binded render target.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsRenderTarget" Name="IGuiGraphicsRenderTarget">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::elements::IGuiGraphicsRenderTarget@s:vl.presentation.elements.IGuiGraphicsRenderTarget" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Render" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::Render" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::Render(Size)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Render the composition using an offset.&lt;/summary&gt;
  &lt;param name="offset"&gt;The offset.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="offset" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::Render::offset" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::Render(Size)::offset" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetEventReceiver" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetEventReceiver" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetEventReceiver()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the event receiver object. All user input events can be found in this object. If an event receiver is never been requested from the composition, the event receiver will not be created, and all route events will not pass through this event receiver(performance will be better).&lt;/summary&gt;
  &lt;returns&gt;The event receiver.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsEventReceiver" Name="GuiGraphicsEventReceiver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsEventReceiver@s:vl.presentation.compositions.GuiGraphicsEventReceiver" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="HasEventReceiver" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::HasEventReceiver" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::HasEventReceiver()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test if any event receiver has already been requested.&lt;/summary&gt;
  &lt;returns&gt;Returns true if any event receiver has already been requested.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FindComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::FindComposition" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::FindComposition(Point,bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Find a deepest composition that under a specified location. If the location is inside a compsition but not hit any sub composition, this function will return this composition.&lt;/summary&gt;
  &lt;returns&gt;The deepest composition that under a specified location.&lt;/returns&gt;
  &lt;param name="location"&gt;The specified location.&lt;/param&gt;
  &lt;param name="forMouseEvent"&gt;Find a composition for mouse event, it will ignore all compositions that are transparent to mouse events.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::FindComposition::location" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::FindComposition(Point,bool)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="forMouseEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::FindComposition::forMouseEvent" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::FindComposition(Point,bool)::forMouseEvent" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTransparentToMouse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetTransparentToMouse" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetTransparentToMouse()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get is this composition transparent to mouse events.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this composition is transparent to mouse events, which means it just passes all mouse events to the composition under it.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetTransparentToMouse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetTransparentToMouse" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetTransparentToMouse(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set is the composition transparent to mouse events.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to make this composition transparent to mouse events.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetTransparentToMouse::value" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetTransparentToMouse(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetGlobalBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetGlobalBounds" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetGlobalBounds()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the bounds in the top composition space.&lt;/summary&gt;
  &lt;returns&gt;The bounds in the top composition space.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAssociatedControl" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetAssociatedControl" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetAssociatedControl()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the associated control. A control is associated to a composition only when the composition represents the bounds of this control. Such a composition usually comes from a control template.&lt;/summary&gt;
  &lt;returns&gt;The associated control.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAssociatedHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetAssociatedHost" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetAssociatedHost()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the associated graphics host. A graphics host is associated to a composition only when the composition becomes the bounds of the graphics host.&lt;/summary&gt;
  &lt;returns&gt;The associated graphics host.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsHost" Name="GuiGraphicsHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsHost@s:vl.presentation.compositions.GuiGraphicsHost" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAssociatedCursor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetAssociatedCursor" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetAssociatedCursor()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the associated cursor.&lt;/summary&gt;
  &lt;returns&gt;The associated cursor.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeCursor" Name="INativeCursor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeCursor@s:vl.presentation.INativeCursor" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetAssociatedCursor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedCursor" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedCursor(* INativeCursor)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the associated cursor.&lt;/summary&gt;
  &lt;param name="cursor"&gt;The associated cursor.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="cursor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedCursor::cursor" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedCursor(* INativeCursor)::cursor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeCursor" Name="INativeCursor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeCursor@s:vl.presentation.INativeCursor" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAssociatedHitTestResult" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetAssociatedHitTestResult" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetAssociatedHitTestResult()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the associated hit test result.&lt;/summary&gt;
  &lt;returns&gt;The associated hit test result.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener::HitTestResult" Name="HitTestResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeWindowListener::HitTestResult@s:vl.presentation.INativeWindowListener" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener" Name="INativeWindowListener">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeWindowListener@s:vl.presentation.INativeWindowListener" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetAssociatedHitTestResult" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedHitTestResult" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedHitTestResult(INativeWindowListener::HitTestResult)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the associated hit test result.&lt;/summary&gt;
  &lt;param name="value"&gt;The associated hit test result.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedHitTestResult::value" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetAssociatedHitTestResult(INativeWindowListener::HitTestResult)::value" Static="False">
                  <Type>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener::HitTestResult" Name="HitTestResult">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeWindowListener::HitTestResult@s:vl.presentation.INativeWindowListener" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener" Name="INativeWindowListener">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindowListener@s:vl.presentation.INativeWindowListener" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRelatedControl" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRelatedControl" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRelatedControl()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the related control. A related control is the deepest control that contains this composition.&lt;/summary&gt;
  &lt;returns&gt;The related control.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRelatedGraphicsHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRelatedGraphicsHost" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRelatedGraphicsHost()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the related graphics host. A related graphics host is the graphics host that contains this composition.&lt;/summary&gt;
  &lt;returns&gt;The related graphics host.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsHost" Name="GuiGraphicsHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsHost@s:vl.presentation.compositions.GuiGraphicsHost" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRelatedControlHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRelatedControlHost" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRelatedControlHost()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the related control host. A related control host is the control host that contains this composition.&lt;/summary&gt;
  &lt;returns&gt;The related control host.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControlHost" Name="GuiControlHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiControlHost@s:vl.presentation.controls.GuiControlHost" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRelatedCursor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRelatedCursor" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetRelatedCursor()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the related cursor. A related cursor is from the deepest composition that contains this composition and associated with a cursor.&lt;/summary&gt;
  &lt;returns&gt;The related cursor.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeCursor" Name="INativeCursor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeCursor@s:vl.presentation.INativeCursor" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetMargin" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetMargin()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the margin.&lt;/summary&gt;
  &lt;returns&gt;The margin.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetMargin" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetMargin(Margin)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the margin.&lt;/summary&gt;
  &lt;param name="value"&gt;The margin.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetMargin::value" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetMargin(Margin)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetInternalMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetInternalMargin" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetInternalMargin()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the internal margin.&lt;/summary&gt;
  &lt;returns&gt;The internal margin.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetInternalMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetInternalMargin" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetInternalMargin(Margin)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the internal margin.&lt;/summary&gt;
  &lt;param name="value"&gt;The internal margin.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetInternalMargin::value" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetInternalMargin(Margin)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetPreferredMinSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetPreferredMinSize" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetPreferredMinSize()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the preferred minimum size.&lt;/summary&gt;
  &lt;returns&gt;The preferred minimum size.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetPreferredMinSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetPreferredMinSize" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetPreferredMinSize(Size)" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the preferred minimum size.&lt;/summary&gt;
  &lt;param name="value"&gt;The preferred minimum size.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::SetPreferredMinSize::value" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::SetPreferredMinSize(Size)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetClientArea" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetClientArea" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetClientArea()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the client area.&lt;/summary&gt;
  &lt;returns&gt;The client area.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ForceCalculateSizeImmediately" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::ForceCalculateSizeImmediately" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::ForceCalculateSizeImmediately()" Virtual="Virtual" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Force to calculate layout and size immediately&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsSizeAffectParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::IsSizeAffectParent" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::IsSizeAffectParent()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the size calculation affected by the parent.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the size calculation is affected by the parent.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMinPreferredClientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetMinPreferredClientSize" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetMinPreferredClientSize()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the preferred minimum client size.&lt;/summary&gt;
  &lt;returns&gt;The preferred minimum client size.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetPreferredBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetPreferredBounds" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetPreferredBounds()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the preferred bounds.&lt;/summary&gt;
  &lt;returns&gt;The preferred bounds.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiGraphicsComposition::GetBounds" OverloadKey="::vl::presentation::compositions::GuiGraphicsComposition::GetBounds()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the bounds.&lt;/summary&gt;
  &lt;returns&gt;The bounds.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>