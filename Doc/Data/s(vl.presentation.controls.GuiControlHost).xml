<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.GuiControlHost">
    <ClassDecl Access="Public" Name="GuiControlHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost" OverloadKey="::vl::presentation::controls::GuiControlHost" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents a control that host by a &lt;links&gt;&lt;link cref="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" /&gt;&lt;/links&gt;.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="host" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::host" OverloadKey="::vl::presentation::controls::GuiControlHost::host" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsHost" Name="GuiGraphicsHost">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiGraphicsHost@s:vl.presentation.compositions.GuiGraphicsHost" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="OnNativeWindowChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::OnNativeWindowChanged" OverloadKey="::vl::presentation::controls::GuiControlHost::OnNativeWindowChanged()" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnVisualStatusChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::OnVisualStatusChanged" OverloadKey="::vl::presentation::controls::GuiControlHost::OnVisualStatusChanged()" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Protected" Name="TooltipDelayOpenTime" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::TooltipDelayOpenTime" OverloadKey="::vl::presentation::controls::GuiControlHost::TooltipDelayOpenTime" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="TooltipDelayCloseTime" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::TooltipDelayCloseTime" OverloadKey="::vl::presentation::controls::GuiControlHost::TooltipDelayCloseTime" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="TooltipDelayLifeTime" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::TooltipDelayLifeTime" OverloadKey="::vl::presentation::controls::GuiControlHost::TooltipDelayLifeTime" Static="True">
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="tooltipOpenDelay" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::tooltipOpenDelay" OverloadKey="::vl::presentation::controls::GuiControlHost::tooltipOpenDelay" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDelay" Name="INativeDelay">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDelay@s:vl.presentation.INativeDelay" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="tooltipCloseDelay" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::tooltipCloseDelay" OverloadKey="::vl::presentation::controls::GuiControlHost::tooltipCloseDelay" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDelay" Name="INativeDelay">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDelay@s:vl.presentation.INativeDelay" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="tooltipLocation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::tooltipLocation" OverloadKey="::vl::presentation::controls::GuiControlHost::tooltipLocation" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="calledDestroyed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::calledDestroyed" OverloadKey="::vl::presentation::controls::GuiControlHost::calledDestroyed" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="deleteWhenDestroyed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::deleteWhenDestroyed" OverloadKey="::vl::presentation::controls::GuiControlHost::deleteWhenDestroyed" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="GetControlHostForInstance" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetControlHostForInstance" OverloadKey="::vl::presentation::controls::GuiControlHost::GetControlHostForInstance()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControlHost" Name="GuiControlHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiControlHost@s:vl.presentation.controls.GuiControlHost" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="GetTooltipOwner" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetTooltipOwner" OverloadKey="::vl::presentation::controls::GuiControlHost::GetTooltipOwner(Point)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetTooltipOwner::location" OverloadKey="::vl::presentation::controls::GuiControlHost::GetTooltipOwner(Point)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="MoveIntoTooltipControl" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::MoveIntoTooltipControl" OverloadKey="::vl::presentation::controls::GuiControlHost::MoveIntoTooltipControl(* GuiControl,Point)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="tooltipControl" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::MoveIntoTooltipControl::tooltipControl" OverloadKey="::vl::presentation::controls::GuiControlHost::MoveIntoTooltipControl(* GuiControl,Point)::tooltipControl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::MoveIntoTooltipControl::location" OverloadKey="::vl::presentation::controls::GuiControlHost::MoveIntoTooltipControl(* GuiControl,Point)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="MouseMoving" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::MouseMoving" OverloadKey="::vl::presentation::controls::GuiControlHost::MouseMoving(&amp; const NativeWindowMouseInfo)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="info" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::MouseMoving::info" OverloadKey="::vl::presentation::controls::GuiControlHost::MouseMoving(&amp; const NativeWindowMouseInfo)::info" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::NativeWindowMouseInfo" Name="NativeWindowMouseInfo">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::NativeWindowMouseInfo@s:vl.presentation.NativeWindowMouseInfo" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="MouseLeaved" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::MouseLeaved" OverloadKey="::vl::presentation::controls::GuiControlHost::MouseLeaved()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Moved" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Moved" OverloadKey="::vl::presentation::controls::GuiControlHost::Moved()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Enabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Enabled" OverloadKey="::vl::presentation::controls::GuiControlHost::Enabled()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Disabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Disabled" OverloadKey="::vl::presentation::controls::GuiControlHost::Disabled()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="GotFocus" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GotFocus" OverloadKey="::vl::presentation::controls::GuiControlHost::GotFocus()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="LostFocus" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::LostFocus" OverloadKey="::vl::presentation::controls::GuiControlHost::LostFocus()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Activated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Activated" OverloadKey="::vl::presentation::controls::GuiControlHost::Activated()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Deactivated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Deactivated" OverloadKey="::vl::presentation::controls::GuiControlHost::Deactivated()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Opened" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Opened" OverloadKey="::vl::presentation::controls::GuiControlHost::Opened()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Closing" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Closing" OverloadKey="::vl::presentation::controls::GuiControlHost::Closing(&amp; bool)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="cancel" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Closing::cancel" OverloadKey="::vl::presentation::controls::GuiControlHost::Closing(&amp; bool)::cancel" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl Name="bool" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Closed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Closed" OverloadKey="::vl::presentation::controls::GuiControlHost::Closed()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="Destroying" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Destroying" OverloadKey="::vl::presentation::controls::GuiControlHost::Destroying()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="UpdateClientSizeAfterRendering" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::UpdateClientSizeAfterRendering" OverloadKey="::vl::presentation::controls::GuiControlHost::UpdateClientSizeAfterRendering(Size)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="clientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::UpdateClientSizeAfterRendering::clientSize" OverloadKey="::vl::presentation::controls::GuiControlHost::UpdateClientSizeAfterRendering(Size)::clientSize" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiControlHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GuiControlHost" OverloadKey="::vl::presentation::controls::GuiControlHost::GuiControlHost(theme::ThemeName)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a control with a specified default theme.&lt;/summary&gt;
  &lt;param name="themeName"&gt;The theme name for retriving a default control template.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="themeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GuiControlHost::themeName" OverloadKey="::vl::presentation::controls::GuiControlHost::GuiControlHost(theme::ThemeName)::themeName" Static="False">
                  <Type>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::theme::ThemeName" Name="ThemeName">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::theme::ThemeName@s:vl.presentation.theme.ThemeName" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::theme" Name="theme">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::theme@ns:vl.presentation.theme" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiControlHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::~GuiControlHost" OverloadKey="::vl::presentation::controls::GuiControlHost::~GuiControlHost()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Public" Name="WindowGotFocus" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::WindowGotFocus" OverloadKey="::vl::presentation::controls::GuiControlHost::WindowGotFocus" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Window got focus event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="WindowLostFocus" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::WindowLostFocus" OverloadKey="::vl::presentation::controls::GuiControlHost::WindowLostFocus" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Window lost focus event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="WindowActivated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::WindowActivated" OverloadKey="::vl::presentation::controls::GuiControlHost::WindowActivated" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Window activated event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="WindowDeactivated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::WindowDeactivated" OverloadKey="::vl::presentation::controls::GuiControlHost::WindowDeactivated" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Window deactivated event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="WindowOpened" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::WindowOpened" OverloadKey="::vl::presentation::controls::GuiControlHost::WindowOpened" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Window opened event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="WindowClosing" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::WindowClosing" OverloadKey="::vl::presentation::controls::GuiControlHost::WindowClosing" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Window closing event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiRequestEvent" Name="GuiRequestEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiRequestEvent@s:vl.presentation.compositions.GuiRequestEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="WindowClosed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::WindowClosed" OverloadKey="::vl::presentation::controls::GuiControlHost::WindowClosed" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Window closed event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="WindowDestroying" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::WindowDestroying" OverloadKey="::vl::presentation::controls::GuiControlHost::WindowDestroying" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Window destroying event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="DeleteAfterProcessingAllEvents" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::DeleteAfterProcessingAllEvents" OverloadKey="::vl::presentation::controls::GuiControlHost::DeleteAfterProcessingAllEvents()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Delete this control host after processing all events.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetGraphicsHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetGraphicsHost" OverloadKey="::vl::presentation::controls::GuiControlHost::GetGraphicsHost()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the internal &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiGraphicsHost@s:vl.presentation.compositions.GuiGraphicsHost" /&gt;&lt;/links&gt; object to host the window content.&lt;/summary&gt;
  &lt;returns&gt;The internal &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiGraphicsHost@s:vl.presentation.compositions.GuiGraphicsHost" /&gt;&lt;/links&gt; object to host the window content.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsHost" Name="GuiGraphicsHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsHost@s:vl.presentation.compositions.GuiGraphicsHost" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMainComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetMainComposition" OverloadKey="::vl::presentation::controls::GuiControlHost::GetMainComposition()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the main composition to host the window content.&lt;/summary&gt;
  &lt;returns&gt;The main composition to host the window content.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetNativeWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetNativeWindow" OverloadKey="::vl::presentation::controls::GuiControlHost::GetNativeWindow()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the internal &lt;links&gt;&lt;link cref="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" /&gt;&lt;/links&gt; object to host the content.&lt;/summary&gt;
  &lt;returns&gt;The the internal &lt;links&gt;&lt;link cref="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" /&gt;&lt;/links&gt; object to host the content.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetNativeWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetNativeWindow" OverloadKey="::vl::presentation::controls::GuiControlHost::SetNativeWindow(* INativeWindow)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the internal &lt;links&gt;&lt;link cref="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" /&gt;&lt;/links&gt; object to host the content.&lt;/summary&gt;
  &lt;param name="window"&gt;The the internal &lt;links&gt;&lt;link cref="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" /&gt;&lt;/links&gt; object to host the content.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="window" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetNativeWindow::window" OverloadKey="::vl::presentation::controls::GuiControlHost::SetNativeWindow(* INativeWindow)::window" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ForceCalculateSizeImmediately" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::ForceCalculateSizeImmediately" OverloadKey="::vl::presentation::controls::GuiControlHost::ForceCalculateSizeImmediately()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Force to calculate layout and size immediately&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetEnabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetEnabled" OverloadKey="::vl::presentation::controls::GuiControlHost::GetEnabled()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the window enabled.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the window is enabled.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetEnabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetEnabled" OverloadKey="::vl::presentation::controls::GuiControlHost::SetEnabled(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Enable or disable the window.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to enable the window.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetEnabled::value" OverloadKey="::vl::presentation::controls::GuiControlHost::SetEnabled(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetFocused" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetFocused" OverloadKey="::vl::presentation::controls::GuiControlHost::GetFocused()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the window focused.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the window is focused.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetFocused" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetFocused" OverloadKey="::vl::presentation::controls::GuiControlHost::SetFocused()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Focus the window.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetActivated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetActivated" OverloadKey="::vl::presentation::controls::GuiControlHost::GetActivated()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the window activated.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the window is activated.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetActivated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetActivated" OverloadKey="::vl::presentation::controls::GuiControlHost::SetActivated()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Activate the window.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetShowInTaskBar" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetShowInTaskBar" OverloadKey="::vl::presentation::controls::GuiControlHost::GetShowInTaskBar()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the window icon shown in the task bar.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the window is icon shown in the task bar.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetShowInTaskBar" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetShowInTaskBar" OverloadKey="::vl::presentation::controls::GuiControlHost::SetShowInTaskBar(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Show or hide the window icon in the task bar.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to show the window icon in the task bar.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetShowInTaskBar::value" OverloadKey="::vl::presentation::controls::GuiControlHost::SetShowInTaskBar(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetEnabledActivate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetEnabledActivate" OverloadKey="::vl::presentation::controls::GuiControlHost::GetEnabledActivate()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the window allowed to be activated.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the window is allowed to be activated.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetEnabledActivate" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetEnabledActivate" OverloadKey="::vl::presentation::controls::GuiControlHost::SetEnabledActivate(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Allow or forbid the window to be activated.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to allow the window to be activated.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetEnabledActivate::value" OverloadKey="::vl::presentation::controls::GuiControlHost::SetEnabledActivate(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTopMost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetTopMost" OverloadKey="::vl::presentation::controls::GuiControlHost::GetTopMost()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Test is the window always on top of the desktop.
&lt;/summary&gt;
  &lt;returns&gt;Returns true if the window is always on top of the desktop.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetTopMost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetTopMost" OverloadKey="::vl::presentation::controls::GuiControlHost::SetTopMost(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Make the window always or never on top of the desktop.
&lt;/summary&gt;
  &lt;param name="topmost"&gt;True to make the window always  on top of the desktop.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="topmost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetTopMost::topmost" OverloadKey="::vl::presentation::controls::GuiControlHost::SetTopMost(bool)::topmost" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetShortcutKeyManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetShortcutKeyManager" OverloadKey="::vl::presentation::controls::GuiControlHost::GetShortcutKeyManager()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the &lt;links&gt;&lt;link cref="::vl::presentation::compositions::IGuiShortcutKeyManager@s:vl.presentation.compositions.IGuiShortcutKeyManager" /&gt;&lt;/links&gt; attached with this control host.&lt;/summary&gt;
  &lt;returns&gt;The shortcut key manager.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiShortcutKeyManager" Name="IGuiShortcutKeyManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::IGuiShortcutKeyManager@s:vl.presentation.compositions.IGuiShortcutKeyManager" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetShortcutKeyManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetShortcutKeyManager" OverloadKey="::vl::presentation::controls::GuiControlHost::SetShortcutKeyManager(* compositions::IGuiShortcutKeyManager)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Attach or detach the &lt;links&gt;&lt;link cref="::vl::presentation::compositions::IGuiShortcutKeyManager@s:vl.presentation.compositions.IGuiShortcutKeyManager" /&gt;&lt;/links&gt; associated with this control host. When this control host is disposing, the associated shortcut key manager will be deleted if exists.&lt;/summary&gt;
  &lt;param name="value"&gt;The shortcut key manager. Set to null to detach the previous shortcut key manager from this control host.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetShortcutKeyManager::value" OverloadKey="::vl::presentation::controls::GuiControlHost::SetShortcutKeyManager(* compositions::IGuiShortcutKeyManager)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiShortcutKeyManager" Name="IGuiShortcutKeyManager">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::IGuiShortcutKeyManager@s:vl.presentation.compositions.IGuiShortcutKeyManager" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetTimerManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetTimerManager" OverloadKey="::vl::presentation::controls::GuiControlHost::GetTimerManager()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the timer manager.&lt;/summary&gt;
  &lt;returns&gt;The timer manager.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsTimerManager" Name="GuiGraphicsTimerManager">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiGraphicsTimerManager@s:vl.presentation.compositions.GuiGraphicsTimerManager" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetClientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetClientSize" OverloadKey="::vl::presentation::controls::GuiControlHost::GetClientSize()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the client size of the window.&lt;/summary&gt;
  &lt;returns&gt;The client size of the window.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetClientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetClientSize" OverloadKey="::vl::presentation::controls::GuiControlHost::SetClientSize(Size)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the client size of the window.&lt;/summary&gt;
  &lt;param name="value"&gt;The client size of the window.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetClientSize::value" OverloadKey="::vl::presentation::controls::GuiControlHost::SetClientSize(Size)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetLocation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetLocation" OverloadKey="::vl::presentation::controls::GuiControlHost::GetLocation()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the location of the window in screen space.&lt;/summary&gt;
  &lt;returns&gt;The location of the window.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::NativePoint" Name="NativePoint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::NativePoint@s:vl.presentation.NativePoint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetLocation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetLocation" OverloadKey="::vl::presentation::controls::GuiControlHost::SetLocation(NativePoint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the location of the window in screen space.&lt;/summary&gt;
  &lt;param name="value"&gt;The location of the window.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetLocation::value" OverloadKey="::vl::presentation::controls::GuiControlHost::SetLocation(NativePoint)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::NativePoint" Name="NativePoint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::NativePoint@s:vl.presentation.NativePoint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetBounds" OverloadKey="::vl::presentation::controls::GuiControlHost::SetBounds(NativePoint,Size)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the location in screen space and the client size of the window.&lt;/summary&gt;
  &lt;param name="location"&gt;The location of the window.&lt;/param&gt;
  &lt;param name="size"&gt;The client size of the window.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetBounds::location" OverloadKey="::vl::presentation::controls::GuiControlHost::SetBounds(NativePoint,Size)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::NativePoint" Name="NativePoint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::NativePoint@s:vl.presentation.NativePoint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetBounds::size" OverloadKey="::vl::presentation::controls::GuiControlHost::SetBounds(NativePoint,Size)::size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRelatedControlHost" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetRelatedControlHost" OverloadKey="::vl::presentation::controls::GuiControlHost::GetRelatedControlHost()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControlHost" Name="GuiControlHost">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::GuiControlHost@s:vl.presentation.controls.GuiControlHost" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetText" OverloadKey="::vl::presentation::controls::GuiControlHost::GetText()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetText" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetText" OverloadKey="::vl::presentation::controls::GuiControlHost::SetText(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::SetText::value" OverloadKey="::vl::presentation::controls::GuiControlHost::SetText(&amp; const WString)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRelatedScreen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetRelatedScreen" OverloadKey="::vl::presentation::controls::GuiControlHost::GetRelatedScreen()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the screen that contains the window.&lt;/summary&gt;
  &lt;returns&gt;The screen that contains the window.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeScreen" Name="INativeScreen">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeScreen@s:vl.presentation.INativeScreen" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Show" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Show" OverloadKey="::vl::presentation::controls::GuiControlHost::Show()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Show the window.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ShowDeactivated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::ShowDeactivated" OverloadKey="::vl::presentation::controls::GuiControlHost::ShowDeactivated()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Show the window without activation.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ShowRestored" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::ShowRestored" OverloadKey="::vl::presentation::controls::GuiControlHost::ShowRestored()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Restore the window.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ShowMaximized" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::ShowMaximized" OverloadKey="::vl::presentation::controls::GuiControlHost::ShowMaximized()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Maximize the window.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ShowMinimized" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::ShowMinimized" OverloadKey="::vl::presentation::controls::GuiControlHost::ShowMinimized()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Minimize the window.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Hide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Hide" OverloadKey="::vl::presentation::controls::GuiControlHost::Hide()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Hide the window.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Close" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::Close" OverloadKey="::vl::presentation::controls::GuiControlHost::Close()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;
Close the window and destroy the internal &lt;links&gt;&lt;link cref="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" /&gt;&lt;/links&gt; object.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetOpening" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiControlHost::GetOpening" OverloadKey="::vl::presentation::controls::GuiControlHost::GetOpening()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the window opened.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the window is opened.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiInstanceRootObject" Name="GuiInstanceRootObject">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiInstanceRootObject@s:vl.presentation.controls.GuiInstanceRootObject" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Protected" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener" Name="INativeWindowListener">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeWindowListener@s:vl.presentation.INativeWindowListener" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControlHost" Name="GuiControlHost">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiControlHost@s:vl.presentation.controls.GuiControlHost" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>