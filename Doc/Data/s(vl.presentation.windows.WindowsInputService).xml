<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.windows.WindowsInputService">
    <ClassDecl Access="Public" Name="WindowsInputService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService" OverloadKey="::vl::presentation::windows::WindowsInputService" ClassType="Class">
      <Children>
        <VarDecl Access="Protected" Name="ownerHandle" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::ownerHandle" OverloadKey="::vl::presentation::windows::WindowsInputService::ownerHandle" Static="False">
          <Type>
            <RefTypeDecl Name="HWND" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="mouseHook" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::mouseHook" OverloadKey="::vl::presentation::windows::WindowsInputService::mouseHook" Static="False">
          <Type>
            <RefTypeDecl Name="HHOOK" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="isTimerEnabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::isTimerEnabled" OverloadKey="::vl::presentation::windows::WindowsInputService::isTimerEnabled" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="mouseProc" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::mouseProc" OverloadKey="::vl::presentation::windows::WindowsInputService::mouseProc" Static="False">
          <Type>
            <RefTypeDecl Name="HOOKPROC" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="keyNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::keyNames" OverloadKey="::vl::presentation::windows::WindowsInputService::keyNames" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="keys" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::keys" OverloadKey="::vl::presentation::windows::WindowsInputService::keys" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="GetKeyNameInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::GetKeyNameInternal" OverloadKey="::vl::presentation::windows::WindowsInputService::GetKeyNameInternal(VKEY)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="code" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::GetKeyNameInternal::code" OverloadKey="::vl::presentation::windows::WindowsInputService::GetKeyNameInternal(VKEY)::code" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="InitializeKeyNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::InitializeKeyNames" OverloadKey="::vl::presentation::windows::WindowsInputService::InitializeKeyNames()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WindowsInputService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::WindowsInputService" OverloadKey="::vl::presentation::windows::WindowsInputService::WindowsInputService(HOOKPROC)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_mouseProc" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::WindowsInputService::_mouseProc" OverloadKey="::vl::presentation::windows::WindowsInputService::WindowsInputService(HOOKPROC)::_mouseProc" Static="False">
                  <Type>
                    <RefTypeDecl Name="HOOKPROC" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetOwnerHandle" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::SetOwnerHandle" OverloadKey="::vl::presentation::windows::WindowsInputService::SetOwnerHandle(HWND)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="handle" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::SetOwnerHandle::handle" OverloadKey="::vl::presentation::windows::WindowsInputService::SetOwnerHandle(HWND)::handle" Static="False">
                  <Type>
                    <RefTypeDecl Name="HWND" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StartHookMouse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::StartHookMouse" OverloadKey="::vl::presentation::windows::WindowsInputService::StartHookMouse()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StopHookMouse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::StopHookMouse" OverloadKey="::vl::presentation::windows::WindowsInputService::StopHookMouse()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsHookingMouse" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::IsHookingMouse" OverloadKey="::vl::presentation::windows::WindowsInputService::IsHookingMouse()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StartTimer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::StartTimer" OverloadKey="::vl::presentation::windows::WindowsInputService::StartTimer()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StopTimer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::StopTimer" OverloadKey="::vl::presentation::windows::WindowsInputService::StopTimer()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsTimerEnabled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::IsTimerEnabled" OverloadKey="::vl::presentation::windows::WindowsInputService::IsTimerEnabled()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsKeyPressing" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::IsKeyPressing" OverloadKey="::vl::presentation::windows::WindowsInputService::IsKeyPressing(VKEY)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="code" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::IsKeyPressing::code" OverloadKey="::vl::presentation::windows::WindowsInputService::IsKeyPressing(VKEY)::code" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsKeyToggled" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::IsKeyToggled" OverloadKey="::vl::presentation::windows::WindowsInputService::IsKeyToggled(VKEY)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="code" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::IsKeyToggled::code" OverloadKey="::vl::presentation::windows::WindowsInputService::IsKeyToggled(VKEY)::code" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetKeyName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::GetKeyName" OverloadKey="::vl::presentation::windows::WindowsInputService::GetKeyName(VKEY)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="code" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::GetKeyName::code" OverloadKey="::vl::presentation::windows::WindowsInputService::GetKeyName(VKEY)::code" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetKey" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::GetKey" OverloadKey="::vl::presentation::windows::WindowsInputService::GetKey(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsInputService::GetKey::name" OverloadKey="::vl::presentation::windows::WindowsInputService::GetKey(&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeInputService" Name="INativeInputService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeInputService@s:vl.presentation.INativeInputService" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>