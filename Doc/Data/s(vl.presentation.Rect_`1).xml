<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.Rect_`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents a bounds in a two dimensions space.
&lt;/summary&gt;
  &lt;typeparam name="T"&gt;Type of the coordinate.&lt;/typeparam&gt;
&lt;/Document&gt;</Document>
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::presentation::T" OverloadKey="::vl::presentation::Rect_`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="Rect_" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_" OverloadKey="::vl::presentation::Rect_`1" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="x1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::x1" OverloadKey="::vl::presentation::Rect_`1::x1" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;
Left.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="y1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::y1" OverloadKey="::vl::presentation::Rect_`1::y1" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;
Top.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="x2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::x2" OverloadKey="::vl::presentation::Rect_`1::x2" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;
Left + Width.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="y2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::y2" OverloadKey="::vl::presentation::Rect_`1::y2" Static="False">
              <Document>&lt;Document&gt;
  &lt;summary&gt;
Top + Height.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="Rect_" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_" OverloadKey="::vl::presentation::Rect_`1::Rect_()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Rect_" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_" OverloadKey="::vl::presentation::Rect_`1::Rect_(T,T,T,T)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="_x1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_::_x1" OverloadKey="::vl::presentation::Rect_`1::Rect_(T,T,T,T)::_x1" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_y1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_::_y1" OverloadKey="::vl::presentation::Rect_`1::Rect_(T,T,T,T)::_y1" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_x2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_::_x2" OverloadKey="::vl::presentation::Rect_`1::Rect_(T,T,T,T)::_x2" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="_y2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_::_y2" OverloadKey="::vl::presentation::Rect_`1::Rect_(T,T,T,T)::_y2" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Rect_" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_" OverloadKey="::vl::presentation::Rect_`1::Rect_(Point_&lt;T&gt;,Size_&lt;T&gt;)" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="p" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_::p" OverloadKey="::vl::presentation::Rect_`1::Rect_(Point_&lt;T&gt;,Size_&lt;T&gt;)::p" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Point_" Name="Point_">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Point_`1@s:vl.presentation.Point_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="s" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Rect_::s" OverloadKey="::vl::presentation::Rect_`1::Rect_(Point_&lt;T&gt;,Size_&lt;T&gt;)::s" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size_" Name="Size_">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Size_`1@s:vl.presentation.Size_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::operator ==" OverloadKey="::vl::presentation::Rect_`1::operator ==(Rect_&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="rect" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::operator ==::rect" OverloadKey="::vl::presentation::Rect_`1::operator ==(Rect_&lt;T&gt;)const::rect" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect_" Name="Rect_">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::operator !=" OverloadKey="::vl::presentation::Rect_`1::operator !=(Rect_&lt;T&gt;)const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="rect" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::operator !=::rect" OverloadKey="::vl::presentation::Rect_`1::operator !=(Rect_&lt;T&gt;)const::rect" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect_" Name="Rect_">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="LeftTop" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::LeftTop" OverloadKey="::vl::presentation::Rect_`1::LeftTop()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::Point_" Name="Point_">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Point_`1@s:vl.presentation.Point_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="RightBottom" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::RightBottom" OverloadKey="::vl::presentation::Rect_`1::RightBottom()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::Point_" Name="Point_">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Point_`1@s:vl.presentation.Point_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="GetSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::GetSize" OverloadKey="::vl::presentation::Rect_`1::GetSize()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::Size_" Name="Size_">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Size_`1@s:vl.presentation.Size_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Left" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Left" OverloadKey="::vl::presentation::Rect_`1::Left()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Right" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Right" OverloadKey="::vl::presentation::Rect_`1::Right()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Width" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Width" OverloadKey="::vl::presentation::Rect_`1::Width()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Top" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Top" OverloadKey="::vl::presentation::Rect_`1::Top()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Bottom" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Bottom" OverloadKey="::vl::presentation::Rect_`1::Bottom()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Height" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Height" OverloadKey="::vl::presentation::Rect_`1::Height()const" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="True">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Expand" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Expand" OverloadKey="::vl::presentation::Rect_`1::Expand(T,T)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="x" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Expand::x" OverloadKey="::vl::presentation::Rect_`1::Expand(T,T)::x" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="y" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Expand::y" OverloadKey="::vl::presentation::Rect_`1::Expand(T,T)::y" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Expand" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Expand" OverloadKey="::vl::presentation::Rect_`1::Expand(Size_&lt;T&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="s" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Expand::s" OverloadKey="::vl::presentation::Rect_`1::Expand(Size_&lt;T&gt;)::s" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size_" Name="Size_">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Size_`1@s:vl.presentation.Size_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Move" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Move" OverloadKey="::vl::presentation::Rect_`1::Move(T,T)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="x" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Move::x" OverloadKey="::vl::presentation::Rect_`1::Move(T,T)::x" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                    <VarDecl Access="Public" Name="y" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Move::y" OverloadKey="::vl::presentation::Rect_`1::Move(T,T)::y" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Move" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Move" OverloadKey="::vl::presentation::Rect_`1::Move(Size_&lt;T&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="s" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Move::s" OverloadKey="::vl::presentation::Rect_`1::Move(Size_&lt;T&gt;)::s" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size_" Name="Size_">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Size_`1@s:vl.presentation.Size_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Contains" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Contains" OverloadKey="::vl::presentation::Rect_`1::Contains(Point_&lt;T&gt;)" Virtual="Normal" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="bool" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="p" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::Rect_::Contains::p" OverloadKey="::vl::presentation::Rect_`1::Contains(Point_&lt;T&gt;)::p" Static="False">
                      <Type>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::Point_" Name="Point_">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Point_`1@s:vl.presentation.Point_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::Rect_`1::T@s:vl.presentation.Rect_`1" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>