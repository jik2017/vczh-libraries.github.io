<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.emitter.WfCodegenFunctionContext">
    <ClassDecl Access="Public" Name="WfCodegenFunctionContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext" ClassType="Class">
      <Children>
        <TypedefDecl Access="Private" Name="VariableIndexMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::VariableIndexMap" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::VariableIndexMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer" Name="analyzer">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer@ns:vl.workflow.analyzer" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ClosureIndexMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::ClosureIndexMap" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::ClosureIndexMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenLambdaContext" Name="WfCodegenLambdaContext">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::emitter::WfCodegenLambdaContext@s:vl.workflow.emitter.WfCodegenLambdaContext" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ScopeContextList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::ScopeContextList" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::ScopeContextList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenScopeContext" Name="WfCodegenScopeContext">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::emitter::WfCodegenScopeContext@s:vl.workflow.emitter.WfCodegenScopeContext" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Public" Name="function" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::function" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::function" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::workflow::runtime::WfAssemblyFunction" Name="WfAssemblyFunction">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::runtime::WfAssemblyFunction@s:vl.workflow.runtime.WfAssemblyFunction" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::runtime" Name="runtime">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::runtime@ns:vl.workflow.runtime" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="capturedVariables" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::capturedVariables" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::capturedVariables" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenFunctionContext::VariableIndexMap" Name="VariableIndexMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::emitter::WfCodegenFunctionContext::VariableIndexMap@s:vl.workflow.emitter.WfCodegenFunctionContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::arguments" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::arguments" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenFunctionContext::VariableIndexMap" Name="VariableIndexMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::emitter::WfCodegenFunctionContext::VariableIndexMap@s:vl.workflow.emitter.WfCodegenFunctionContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="localVariables" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::localVariables" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::localVariables" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenFunctionContext::VariableIndexMap" Name="VariableIndexMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::emitter::WfCodegenFunctionContext::VariableIndexMap@s:vl.workflow.emitter.WfCodegenFunctionContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="closuresToCodegen" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::closuresToCodegen" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::closuresToCodegen" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenFunctionContext::ClosureIndexMap" Name="ClosureIndexMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::emitter::WfCodegenFunctionContext::ClosureIndexMap@s:vl.workflow.emitter.WfCodegenFunctionContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="scopeContextStack" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::scopeContextStack" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::scopeContextStack" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenFunctionContext::ScopeContextList" Name="ScopeContextList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::emitter::WfCodegenFunctionContext::ScopeContextList@s:vl.workflow.emitter.WfCodegenFunctionContext" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="WfCodegenFunctionContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::WfCodegenFunctionContext" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::WfCodegenFunctionContext()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCurrentScopeContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::GetCurrentScopeContext" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::GetCurrentScopeContext()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenScopeContext" Name="WfCodegenScopeContext">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::emitter::WfCodegenScopeContext@s:vl.workflow.emitter.WfCodegenScopeContext" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCurrentScopeContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::GetCurrentScopeContext" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::GetCurrentScopeContext(WfCodegenScopeType,&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenScopeContext" Name="WfCodegenScopeContext">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::emitter::WfCodegenScopeContext@s:vl.workflow.emitter.WfCodegenScopeContext" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::GetCurrentScopeContext::type" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::GetCurrentScopeContext(WfCodegenScopeType,&amp; const WString)::type" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenScopeType" Name="WfCodegenScopeType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::emitter::WfCodegenScopeType@s:vl.workflow.emitter.WfCodegenScopeType" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::GetCurrentScopeContext::name" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::GetCurrentScopeContext(WfCodegenScopeType,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PushScopeContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::PushScopeContext" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::PushScopeContext(WfCodegenScopeType,&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenScopeContext" Name="WfCodegenScopeContext">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::emitter::WfCodegenScopeContext@s:vl.workflow.emitter.WfCodegenScopeContext" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::PushScopeContext::type" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::PushScopeContext(WfCodegenScopeType,&amp; const WString)::type" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::emitter::WfCodegenScopeType" Name="WfCodegenScopeType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::emitter::WfCodegenScopeType@s:vl.workflow.emitter.WfCodegenScopeType" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::PushScopeContext::name" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::PushScopeContext(WfCodegenScopeType,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PopScopeContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::emitter::WfCodegenFunctionContext::PopScopeContext" OverloadKey="::vl::workflow::emitter::WfCodegenFunctionContext::PopScopeContext()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>