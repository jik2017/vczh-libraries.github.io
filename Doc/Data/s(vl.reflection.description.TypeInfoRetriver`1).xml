<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.TypeInfoRetriver`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="TypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="TypeFlag" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver::TypeFlag" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::TypeFlag" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="Hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver::Hint" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::Hint" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::Type">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" Name="Type">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoRetriver`1::T@s:vl.reflection.description.TypeInfoRetriver`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoRetriver::TypeFlag" Name="TypeFlag">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoRetriver`1::TypeFlag@s:vl.reflection.description.TypeInfoRetriver`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoRetriver`1::T@s:vl.reflection.description.TypeInfoRetriver`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoRetriver::TypeFlag" Name="TypeFlag">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoRetriver`1::TypeFlag@s:vl.reflection.description.TypeInfoRetriver`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::ResultReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" Name="ResultReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoRetriver`1::T@s:vl.reflection.description.TypeInfoRetriver`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoRetriver::TypeFlag" Name="TypeFlag">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoRetriver`1::TypeFlag@s:vl.reflection.description.TypeInfoRetriver`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::ResultNonReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" Name="ResultNonReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoRetriver`1::T@s:vl.reflection.description.TypeInfoRetriver`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoRetriver::TypeFlag" Name="TypeFlag">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoRetriver`1::TypeFlag@s:vl.reflection.description.TypeInfoRetriver`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::TypeInfoRetriver`1::CreateTypeInfo()" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>