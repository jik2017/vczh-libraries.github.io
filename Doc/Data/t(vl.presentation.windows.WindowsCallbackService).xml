<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.presentation.windows.WindowsCallbackService">
    <SymbolTree NamespaceUrlName="vl.presentation.windows">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService" DisplayName="WindowsCallbackService class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::listeners" DisplayName="listeners field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::WindowsCallbackService()" DisplayName="WindowsCallbackService constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::InstallListener(* INativeControllerListener)" DisplayName="InstallListener method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::UninstallListener(* INativeControllerListener)" DisplayName="UninstallListener method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::InvokeMouseHook(WPARAM,NativePoint)" DisplayName="InvokeMouseHook method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::InvokeGlobalTimer()" DisplayName="InvokeGlobalTimer method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::InvokeClipboardUpdated()" DisplayName="InvokeClipboardUpdated method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowCreated(* INativeWindow)" DisplayName="InvokeNativeWindowCreated method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowDestroyed(* INativeWindow)" DisplayName="InvokeNativeWindowDestroyed method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>