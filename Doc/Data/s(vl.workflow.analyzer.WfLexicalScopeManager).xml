<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.WfLexicalScopeManager">
    <ClassDecl Access="Public" Name="WfLexicalScopeManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Workflow compiler.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="ITypeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="IMemberInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMemberInfo" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMemberInfo">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IMemberInfo" Name="IMemberInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::IMemberInfo@s:vl.reflection.description.IMemberInfo" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="IMethodInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMethodInfo" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMethodInfo">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IMethodInfo" Name="IMethodInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::IMethodInfo@s:vl.reflection.description.IMethodInfo" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ITypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeInfo" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeInfo">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="Value" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Value" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Value">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ModuleList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfModule" Name="WfModule">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfModule@s:vl.workflow.WfModule" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ModuleCodeList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="AttributeKey" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AttributeKey" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AttributeKey">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="AttributeTypeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AttributeTypeMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AttributeTypeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AttributeKey" Name="AttributeKey">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::AttributeKey@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeInfo" Name="ITypeInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeInfo@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="TypeNameMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::TypeNameMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::TypeNameMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor" Name="ITypeDescriptor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ParsingErrorList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ParsingErrorList" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ParsingErrorList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="NamespaceNameMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::NamespaceNameMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::NamespaceNameMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNamespaceDeclaration" Name="WfNamespaceDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfNamespaceDeclaration@s:vl.workflow.WfNamespaceDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="NodeScopeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::NodeScopeMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::NodeScopeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="AnalyzedScopeList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AnalyzedScopeList" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AnalyzedScopeList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="ExpressionResolvingMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="CoOperatorResolvingMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::CoOperatorResolvingMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::CoOperatorResolvingMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="BaseConstructorCallKey" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallKey" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallKey">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorDeclaration" Name="WfConstructorDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfConstructorDeclaration@s:vl.workflow.WfConstructorDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor" Name="ITypeDescriptor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="BaseConstructorCallValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallValue" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallValue">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Pair" Name="Pair">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Pair`2@s:vl.collections.Pair`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBaseConstructorCall" Name="WfBaseConstructorCall">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfBaseConstructorCall@s:vl.workflow.WfBaseConstructorCall" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMethodInfo" Name="IMethodInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::IMethodInfo@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="BaseConstructorCallResolvingMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallResolvingMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallResolvingMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallKey" Name="BaseConstructorCallKey">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallKey@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallValue" Name="BaseConstructorCallValue">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallValue@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="LambdaCaptureMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::LambdaCaptureMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::LambdaCaptureMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalCapture" Name="WfLexicalCapture">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalCapture@s:vl.workflow.analyzer.WfLexicalCapture" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="InterfaceMethodImplementationMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::InterfaceMethodImplementationMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::InterfaceMethodImplementationMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionDeclaration" Name="WfFunctionDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfFunctionDeclaration@s:vl.workflow.WfFunctionDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMethodInfo" Name="IMethodInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::IMethodInfo@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DeclarationSourceMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationSourceMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationSourceMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DeclarationTypeMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationTypeMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationTypeMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor" Name="ITypeDescriptor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="DeclarationMemberInfoMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationMemberInfoMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationMemberInfoMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::IMemberInfo" Name="IMemberInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::IMemberInfo@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="StateInputMethodMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateInputMethodMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateInputMethodMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateInput" Name="WfStateInput">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfStateInput@s:vl.workflow.WfStateInput" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfClassMethod" Name="WfClassMethod">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfClassMethod@s:vl.workflow.typeimpl.WfClassMethod" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl" Name="typeimpl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::typeimpl@ns:vl.workflow.typeimpl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="StateArgumentFieldMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateArgumentFieldMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateArgumentFieldMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionArgument" Name="WfFunctionArgument">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfFunctionArgument@s:vl.workflow.WfFunctionArgument" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::workflow::typeimpl::WfField" Name="WfField">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::typeimpl::WfField@s:vl.workflow.typeimpl.WfField" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::typeimpl" Name="typeimpl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::typeimpl@ns:vl.workflow.typeimpl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <TypedefDecl Access="Private" Name="StateMachineInfoMap" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateMachineInfoMap" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateMachineInfoMap">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Dictionary" Name="Dictionary">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Dictionary`4@s:vl.collections.Dictionary`4" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateMachineDeclaration" Name="WfStateMachineDeclaration">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfStateMachineDeclaration@s:vl.workflow.WfStateMachineDeclaration" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfStateMachineInfo" Name="WfStateMachineInfo">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfStateMachineInfo@s:vl.workflow.analyzer.WfStateMachineInfo" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <VarDecl Access="Protected" Name="modules" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::modules" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::modules" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList" Name="ModuleList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="moduleCodes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::moduleCodes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::moduleCodes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList" Name="ModuleCodeList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="usedCodeIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::usedCodeIndex" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::usedCodeIndex" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="parsingTable" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::parsingTable" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::parsingTable" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="attributes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::attributes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::attributes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AttributeTypeMap" Name="AttributeTypeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::AttributeTypeMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="globalName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::globalName" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::globalName" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="typeNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::typeNames" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::typeNames" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::TypeNameMap" Name="TypeNameMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::TypeNameMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="usedTempVars" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::usedTempVars" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::usedTempVars" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="errors" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::errors" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::errors" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ParsingErrorList" Name="ParsingErrorList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ParsingErrorList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="namespaceNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::namespaceNames" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::namespaceNames" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::NamespaceNameMap" Name="NamespaceNameMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::NamespaceNameMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="nodeScopes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::nodeScopes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::nodeScopes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::NodeScopeMap" Name="NodeScopeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::NodeScopeMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="checkedScopes_DuplicatedSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::checkedScopes_DuplicatedSymbol" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::checkedScopes_DuplicatedSymbol" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AnalyzedScopeList" Name="AnalyzedScopeList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::AnalyzedScopeList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="checkedScopes_SymbolType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::checkedScopes_SymbolType" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::checkedScopes_SymbolType" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AnalyzedScopeList" Name="AnalyzedScopeList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::AnalyzedScopeList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="expressionResolvings" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::expressionResolvings" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::expressionResolvings" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap" Name="ExpressionResolvingMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="coNewCoroutineResolvings" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::coNewCoroutineResolvings" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::coNewCoroutineResolvings" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap" Name="ExpressionResolvingMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ExpressionResolvingMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="coOperatorResolvings" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::coOperatorResolvings" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::coOperatorResolvings" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::CoOperatorResolvingMap" Name="CoOperatorResolvingMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::CoOperatorResolvingMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="coProviderResolvings" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::coProviderResolvings" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::coProviderResolvings" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::CoOperatorResolvingMap" Name="CoOperatorResolvingMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::CoOperatorResolvingMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="coCastResultResolvings" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::coCastResultResolvings" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::coCastResultResolvings" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::CoOperatorResolvingMap" Name="CoOperatorResolvingMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::CoOperatorResolvingMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="baseConstructorCallResolvings" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::baseConstructorCallResolvings" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::baseConstructorCallResolvings" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallResolvingMap" Name="BaseConstructorCallResolvingMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::BaseConstructorCallResolvingMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="lambdaCaptures" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::lambdaCaptures" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::lambdaCaptures" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::LambdaCaptureMap" Name="LambdaCaptureMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::LambdaCaptureMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="interfaceMethodImpls" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::interfaceMethodImpls" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::interfaceMethodImpls" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::InterfaceMethodImplementationMap" Name="InterfaceMethodImplementationMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::InterfaceMethodImplementationMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="declaractionScopeSources" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::declaractionScopeSources" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::declaractionScopeSources" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationSourceMap" Name="DeclarationSourceMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationSourceMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="declarationTypes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationTypes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationTypes" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationTypeMap" Name="DeclarationTypeMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationTypeMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="declarationMemberInfos" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationMemberInfos" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::declarationMemberInfos" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationMemberInfoMap" Name="DeclarationMemberInfoMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::DeclarationMemberInfoMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="stateInputMethods" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::stateInputMethods" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::stateInputMethods" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateInputMethodMap" Name="StateInputMethodMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::StateInputMethodMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="stateInputArguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::stateInputArguments" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::stateInputArguments" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateArgumentFieldMap" Name="StateArgumentFieldMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::StateArgumentFieldMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="stateDeclArguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::stateDeclArguments" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::stateDeclArguments" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateArgumentFieldMap" Name="StateArgumentFieldMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::StateArgumentFieldMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="stateMachineInfos" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::stateMachineInfos" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::stateMachineInfos" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::StateMachineInfoMap" Name="StateMachineInfoMap">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::StateMachineInfoMap@s:vl.workflow.analyzer.WfLexicalScopeManager" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="WfLexicalScopeManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::WfLexicalScopeManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::WfLexicalScopeManager(Ptr&lt;parsing::tabling::ParsingTable&gt;)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a Workflow compiler.&lt;/summary&gt;
  &lt;param name="_parsingTable"&gt;The workflow parser table. It can be retrived from &lt;links&gt;&lt;link cref="::vl::workflow::WfLoadTable()@s:vl.workflow.WfLoadTable()" /&gt;&lt;/links&gt;.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_parsingTable" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::WfLexicalScopeManager::_parsingTable" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::WfLexicalScopeManager(Ptr&lt;parsing::tabling::ParsingTable&gt;)::_parsingTable" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling::ParsingTable" Name="ParsingTable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::tabling::ParsingTable@s:vl.parsing.tabling.ParsingTable" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing::tabling" Name="tabling">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing::tabling@ns:vl.parsing.tabling" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::parsing@ns:vl.parsing" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~WfLexicalScopeManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::~WfLexicalScopeManager" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::~WfLexicalScopeManager()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddModule" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule(&amp; const WString)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a Workflow module. Syntax errors can be found at &lt;links&gt;&lt;link cref="::vl::workflow::analyzer::WfLexicalScopeManager::errors@s:vl.workflow.analyzer.WfLexicalScopeManager" /&gt;&lt;/links&gt;.&lt;/summary&gt;
  &lt;param name="moduleCode"&gt;The source code of a workflow module.&lt;/param&gt;
  &lt;returns&gt;Returns the code index, which is a number representing a module in data structured used in Workflow compiler, runtime and debugger.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="moduleCode" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule::moduleCode" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule(&amp; const WString)::moduleCode" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AddModule" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule(Ptr&lt;WfModule&gt;)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a Workflow module.&lt;/summary&gt;
  &lt;param name="module"&gt;The syntax tree of a workflow module.&lt;/param&gt;
  &lt;returns&gt;Returns the code index, which is a number representing a module in data structured used in Workflow compiler, runtime and debugger.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="module" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule::module" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::AddModule(Ptr&lt;WfModule&gt;)::module" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfModule" Name="WfModule">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfModule@s:vl.workflow.WfModule" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetModules" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetModules" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetModules()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all added modules.&lt;/summary&gt;
  &lt;returns&gt;All added modules.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList" Name="ModuleList">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetModuleCodes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetModuleCodes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetModuleCodes()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all module codes. If a module is added from a syntax tree, then the source code is empty.&lt;/summary&gt;
  &lt;returns&gt;All module codes.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList" Name="ModuleCodeList">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ModuleCodeList@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Clear" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear(bool,bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Clean compiling results.&lt;/summary&gt;
  &lt;param name="keepTypeDescriptorNames"&gt;Set to false to delete all cache of reflectable C++ types.&lt;/param&gt;
  &lt;param name="deleteModules"&gt;Set to true to delete all added modules.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="keepTypeDescriptorNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear::keepTypeDescriptorNames" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear(bool,bool)::keepTypeDescriptorNames" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="deleteModules" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear::deleteModules" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Clear(bool,bool)::deleteModules" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Rebuild" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild(bool,* IWfCompilerCallback)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Compile.&lt;/summary&gt;
  &lt;param name="keepTypeDescriptorNames"&gt;Set to false to delete all cache of reflectable C++ types before compiling.&lt;/param&gt;
  &lt;param name="callback"&gt;The callback to receive progress information, could be nullptr.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="keepTypeDescriptorNames" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild::keepTypeDescriptorNames" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild(bool,* IWfCompilerCallback)::keepTypeDescriptorNames" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="callback" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild::callback" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::Rebuild(bool,* IWfCompilerCallback)::callback" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::IWfCompilerCallback" Name="IWfCompilerCallback">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::IWfCompilerCallback@s:vl.workflow.IWfCompilerCallback" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ResolveMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember(* ITypeDescriptor,&amp; const WString,bool,&amp; collections::SortedList&lt;* ITypeDescriptor&gt;,&amp; collections::List&lt;ResolveExpressionResult&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember::typeDescriptor" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember(* ITypeDescriptor,&amp; const WString,bool,&amp; collections::SortedList&lt;* ITypeDescriptor&gt;,&amp; collections::List&lt;ResolveExpressionResult&gt;)::typeDescriptor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember::name" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember(* ITypeDescriptor,&amp; const WString,bool,&amp; collections::SortedList&lt;* ITypeDescriptor&gt;,&amp; collections::List&lt;ResolveExpressionResult&gt;)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="preferStatic" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember::preferStatic" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember(* ITypeDescriptor,&amp; const WString,bool,&amp; collections::SortedList&lt;* ITypeDescriptor&gt;,&amp; collections::List&lt;ResolveExpressionResult&gt;)::preferStatic" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="searchedTypes" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember::searchedTypes" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember(* ITypeDescriptor,&amp; const WString,bool,&amp; collections::SortedList&lt;* ITypeDescriptor&gt;,&amp; collections::List&lt;ResolveExpressionResult&gt;)::searchedTypes" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::SortedList" Name="SortedList">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::SortedList`2@s:vl.collections.SortedList`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor" Name="ITypeDescriptor">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::analyzer::WfLexicalScopeManager::ITypeDescriptor@s:vl.workflow.analyzer.WfLexicalScopeManager" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="results" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember::results" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveMember(* ITypeDescriptor,&amp; const WString,bool,&amp; collections::SortedList&lt;* ITypeDescriptor&gt;,&amp; collections::List&lt;ResolveExpressionResult&gt;)::results" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ResolveName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveName" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveName(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;ResolveExpressionResult&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveName::scope" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveName(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;ResolveExpressionResult&gt;)::scope" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveName::name" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveName(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;ResolveExpressionResult&gt;)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="results" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveName::results" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::ResolveName(* WfLexicalScope,&amp; const WString,&amp; collections::List&lt;ResolveExpressionResult&gt;)::results" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetDeclarationSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol(* WfLexicalScope,* WfDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="scope" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol::scope" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol(* WfLexicalScope,* WfDeclaration)::scope" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScope" Name="WfLexicalScope">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScope@s:vl.workflow.analyzer.WfLexicalScope" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol::node" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::GetDeclarationSymbol(* WfLexicalScope,* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CreateLambdaCapture" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::CreateLambdaCapture" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::CreateLambdaCapture(* parsing::ParsingTreeCustomBase,Ptr&lt;WfLexicalCapture&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::CreateLambdaCapture::node" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::CreateLambdaCapture(* parsing::ParsingTreeCustomBase,Ptr&lt;WfLexicalCapture&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="capture" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfLexicalScopeManager::CreateLambdaCapture::capture" OverloadKey="::vl::workflow::analyzer::WfLexicalScopeManager::CreateLambdaCapture(* parsing::ParsingTreeCustomBase,Ptr&lt;WfLexicalCapture&gt;)::capture" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalCapture" Name="WfLexicalCapture">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalCapture@s:vl.workflow.analyzer.WfLexicalCapture" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>