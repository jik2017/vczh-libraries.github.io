<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.presentation.Rect_`1">
    <SymbolTree NamespaceUrlName="vl.presentation">
      <SymbolParentMapping>
        <Map From="::vl::presentation::Rect_`1::T" To="::vl::presentation::Rect_`1" />
      </SymbolParentMapping>
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1" DisplayName="Rect_ struct" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::x1" DisplayName="x1 field" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::y1" DisplayName="y1 field" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::x2" DisplayName="x2 field" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::y2" DisplayName="y2 field" Doc="true" />
        <Overloads DisplayName="Rect_ constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Rect_()" DisplayName="Rect_ constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Rect_(T,T,T,T)" DisplayName="Rect_ constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Rect_(Point_&lt;T&gt;,Size_&lt;T&gt;)" DisplayName="Rect_ constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::operator ==(Rect_&lt;T&gt;)const" DisplayName="operator == method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::operator !=(Rect_&lt;T&gt;)const" DisplayName="operator != method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::LeftTop()const" DisplayName="LeftTop method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::RightBottom()const" DisplayName="RightBottom method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::GetSize()const" DisplayName="GetSize method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Left()const" DisplayName="Left method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Right()const" DisplayName="Right method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Width()const" DisplayName="Width method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Top()const" DisplayName="Top method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Bottom()const" DisplayName="Bottom method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Height()const" DisplayName="Height method" Doc="false" />
        <Overloads DisplayName="Expand method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Expand(T,T)" DisplayName="Expand method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Expand(Size_&lt;T&gt;)" DisplayName="Expand method" Doc="false" />
        </Overloads>
        <Overloads DisplayName="Move method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Move(T,T)" DisplayName="Move method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Move(Size_&lt;T&gt;)" DisplayName="Move method" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::Rect_`1::Contains(Point_&lt;T&gt;)" DisplayName="Contains method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>