<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.operator +(Point,Size)">
    <FuncDecl Access="Public" Name="operator +" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +" OverloadKey="::vl::presentation::operator +(Point,Size)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="p" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +::p" OverloadKey="::vl::presentation::operator +(Point,Size)::p" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="s" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +::s" OverloadKey="::vl::presentation::operator +(Point,Size)::s" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator +(Size,Point)">
    <FuncDecl Access="Public" Name="operator +" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +" OverloadKey="::vl::presentation::operator +(Size,Point)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +::s" OverloadKey="::vl::presentation::operator +(Size,Point)::s" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="p" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +::p" OverloadKey="::vl::presentation::operator +(Size,Point)::p" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator -(Point,Size)">
    <FuncDecl Access="Public" Name="operator -" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -" OverloadKey="::vl::presentation::operator -(Point,Size)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="p" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -::p" OverloadKey="::vl::presentation::operator -(Point,Size)::p" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="s" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -::s" OverloadKey="::vl::presentation::operator -(Point,Size)::s" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator -(Point,Point)">
    <FuncDecl Access="Public" Name="operator -" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -" OverloadKey="::vl::presentation::operator -(Point,Point)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="p1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -::p1" OverloadKey="::vl::presentation::operator -(Point,Point)::p1" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="p2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -::p2" OverloadKey="::vl::presentation::operator -(Point,Point)::p2" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator +(Size,Size)">
    <FuncDecl Access="Public" Name="operator +" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +" OverloadKey="::vl::presentation::operator +(Size,Size)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +::s1" OverloadKey="::vl::presentation::operator +(Size,Size)::s1" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +::s2" OverloadKey="::vl::presentation::operator +(Size,Size)::s2" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator -(Size,Size)">
    <FuncDecl Access="Public" Name="operator -" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -" OverloadKey="::vl::presentation::operator -(Size,Size)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -::s1" OverloadKey="::vl::presentation::operator -(Size,Size)::s1" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -::s2" OverloadKey="::vl::presentation::operator -(Size,Size)::s2" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator ^(Size,vint)">
    <FuncDecl Access="Public" Name="operator *" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator *" OverloadKey="::vl::presentation::operator *(Size,vint)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator *::s" OverloadKey="::vl::presentation::operator *(Size,vint)::s" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="i" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator *::i" OverloadKey="::vl::presentation::operator *(Size,vint)::i" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator %(Size,vint)">
    <FuncDecl Access="Public" Name="operator /" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator /" OverloadKey="::vl::presentation::operator /(Size,vint)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator /::s" OverloadKey="::vl::presentation::operator /(Size,vint)::s" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="i" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator /::i" OverloadKey="::vl::presentation::operator /(Size,vint)::i" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator +=(&amp; Point,Size)">
    <FuncDecl Access="Public" Name="operator +=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +=" OverloadKey="::vl::presentation::operator +=(&amp; Point,Size)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +=::s1" OverloadKey="::vl::presentation::operator +=(&amp; Point,Size)::s1" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +=::s2" OverloadKey="::vl::presentation::operator +=(&amp; Point,Size)::s2" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator -=(&amp; Point,Size)">
    <FuncDecl Access="Public" Name="operator -=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -=" OverloadKey="::vl::presentation::operator -=(&amp; Point,Size)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -=::s1" OverloadKey="::vl::presentation::operator -=(&amp; Point,Size)::s1" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -=::s2" OverloadKey="::vl::presentation::operator -=(&amp; Point,Size)::s2" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator +=(&amp; Size,Size)">
    <FuncDecl Access="Public" Name="operator +=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +=" OverloadKey="::vl::presentation::operator +=(&amp; Size,Size)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +=::s1" OverloadKey="::vl::presentation::operator +=(&amp; Size,Size)::s1" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator +=::s2" OverloadKey="::vl::presentation::operator +=(&amp; Size,Size)::s2" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator -=(&amp; Size,Size)">
    <FuncDecl Access="Public" Name="operator -=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -=" OverloadKey="::vl::presentation::operator -=(&amp; Size,Size)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -=::s1" OverloadKey="::vl::presentation::operator -=(&amp; Size,Size)::s1" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator -=::s2" OverloadKey="::vl::presentation::operator -=(&amp; Size,Size)::s2" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator ==(VKEY,VKEY)">
    <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator ==" OverloadKey="::vl::presentation::operator ==(VKEY,VKEY)" Virtual="Static" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="bool" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator ==::a" OverloadKey="::vl::presentation::operator ==(VKEY,VKEY)::a" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator ==::b" OverloadKey="::vl::presentation::operator ==(VKEY,VKEY)::b" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator !=(VKEY,VKEY)">
    <FuncDecl Access="Public" Name="operator !=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator !=" OverloadKey="::vl::presentation::operator !=(VKEY,VKEY)" Virtual="Static" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="bool" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator !=::a" OverloadKey="::vl::presentation::operator !=(VKEY,VKEY)::a" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator !=::b" OverloadKey="::vl::presentation::operator !=(VKEY,VKEY)::b" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator {(VKEY,VKEY)">
    <FuncDecl Access="Public" Name="operator &lt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &lt;" OverloadKey="::vl::presentation::operator &lt;(VKEY,VKEY)" Virtual="Static" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="bool" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &lt;::a" OverloadKey="::vl::presentation::operator &lt;(VKEY,VKEY)::a" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &lt;::b" OverloadKey="::vl::presentation::operator &lt;(VKEY,VKEY)::b" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator {=(VKEY,VKEY)">
    <FuncDecl Access="Public" Name="operator &lt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &lt;=" OverloadKey="::vl::presentation::operator &lt;=(VKEY,VKEY)" Virtual="Static" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="bool" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &lt;=::a" OverloadKey="::vl::presentation::operator &lt;=(VKEY,VKEY)::a" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &lt;=::b" OverloadKey="::vl::presentation::operator &lt;=(VKEY,VKEY)::b" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator }(VKEY,VKEY)">
    <FuncDecl Access="Public" Name="operator &gt;" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &gt;" OverloadKey="::vl::presentation::operator &gt;(VKEY,VKEY)" Virtual="Static" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="bool" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &gt;::a" OverloadKey="::vl::presentation::operator &gt;(VKEY,VKEY)::a" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &gt;::b" OverloadKey="::vl::presentation::operator &gt;(VKEY,VKEY)::b" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator }=(VKEY,VKEY)">
    <FuncDecl Access="Public" Name="operator &gt;=" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &gt;=" OverloadKey="::vl::presentation::operator &gt;=(VKEY,VKEY)" Virtual="Static" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="bool" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &gt;=::a" OverloadKey="::vl::presentation::operator &gt;=(VKEY,VKEY)::a" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &gt;=::b" OverloadKey="::vl::presentation::operator &gt;=(VKEY,VKEY)::b" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator &amp;(VKEY,VKEY)">
    <FuncDecl Access="Public" Name="operator &amp;" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &amp;" OverloadKey="::vl::presentation::operator &amp;(VKEY,VKEY)" Virtual="Static" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &amp;::a" OverloadKey="::vl::presentation::operator &amp;(VKEY,VKEY)::a" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &amp;::b" OverloadKey="::vl::presentation::operator &amp;(VKEY,VKEY)::b" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator $(VKEY,VKEY)">
    <FuncDecl Access="Public" Name="operator |" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator |" OverloadKey="::vl::presentation::operator |(VKEY,VKEY)" Virtual="Static" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator |::a" OverloadKey="::vl::presentation::operator |(VKEY,VKEY)::a" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator |::b" OverloadKey="::vl::presentation::operator |(VKEY,VKEY)::b" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::VKEY" Name="VKEY">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::VKEY@s:vl.presentation.VKEY" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator $(INativeDialogService.FileDialogOptions,INativeDialogService.FileDialogOptions)">
    <FuncDecl Access="Public" Name="operator |" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator |" OverloadKey="::vl::presentation::operator |(INativeDialogService::FileDialogOptions,INativeDialogService::FileDialogOptions)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::FileDialogOptions" Name="FileDialogOptions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService::FileDialogOptions@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator |::a" OverloadKey="::vl::presentation::operator |(INativeDialogService::FileDialogOptions,INativeDialogService::FileDialogOptions)::a" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::FileDialogOptions" Name="FileDialogOptions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDialogService::FileDialogOptions@s:vl.presentation.INativeDialogService" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator |::b" OverloadKey="::vl::presentation::operator |(INativeDialogService::FileDialogOptions,INativeDialogService::FileDialogOptions)::b" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::FileDialogOptions" Name="FileDialogOptions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDialogService::FileDialogOptions@s:vl.presentation.INativeDialogService" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
  <Symbols Key="vl.presentation.operator &amp;(INativeDialogService.FileDialogOptions,INativeDialogService.FileDialogOptions)">
    <FuncDecl Access="Public" Name="operator &amp;" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &amp;" OverloadKey="::vl::presentation::operator &amp;(INativeDialogService::FileDialogOptions,INativeDialogService::FileDialogOptions)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::FileDialogOptions" Name="FileDialogOptions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService::FileDialogOptions@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &amp;::a" OverloadKey="::vl::presentation::operator &amp;(INativeDialogService::FileDialogOptions,INativeDialogService::FileDialogOptions)::a" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::FileDialogOptions" Name="FileDialogOptions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDialogService::FileDialogOptions@s:vl.presentation.INativeDialogService" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::operator &amp;::b" OverloadKey="::vl::presentation::operator &amp;(INativeDialogService::FileDialogOptions,INativeDialogService::FileDialogOptions)::b" Static="False">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::FileDialogOptions" Name="FileDialogOptions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::INativeDialogService::FileDialogOptions@s:vl.presentation.INativeDialogService" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>