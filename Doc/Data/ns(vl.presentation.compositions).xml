<?xml version="1.0" encoding="utf-8"?>
<Namespace DisplayName="::vl::presentation::compositions">
  <Overloads DisplayName="ControlSignal enum">
    <Symbol Key="::vl::presentation::compositions::ControlSignal" UrlName="vl.presentation.compositions.ControlSignal" Doc="true" />
  </Overloads>
  <Overloads DisplayName="FlowAlignment enum">
    <Symbol Key="::vl::presentation::compositions::FlowAlignment" UrlName="vl.presentation.compositions.FlowAlignment" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiAltActionHostBase class">
    <Symbol Key="::vl::presentation::compositions::GuiAltActionHostBase" UrlName="vl.presentation.compositions.GuiAltActionHostBase" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiAltActionManager class">
    <Symbol Key="::vl::presentation::compositions::GuiAltActionManager" UrlName="vl.presentation.compositions.GuiAltActionManager" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiAxis class">
    <Symbol Key="::vl::presentation::compositions::GuiAxis" UrlName="vl.presentation.compositions.GuiAxis" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiBoundsComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiBoundsComposition" UrlName="vl.presentation.compositions.GuiBoundsComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiCellComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiCellComposition" UrlName="vl.presentation.compositions.GuiCellComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiCellOption struct">
    <Symbol Key="::vl::presentation::compositions::GuiCellOption" UrlName="vl.presentation.compositions.GuiCellOption" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiCharEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiCharEvent" UrlName="vl.presentation.compositions.GuiCharEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiCharEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiCharEventArgs" UrlName="vl.presentation.compositions.GuiCharEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiColumnSplitterComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiColumnSplitterComposition" UrlName="vl.presentation.compositions.GuiColumnSplitterComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiControlSignalEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiControlSignalEvent" UrlName="vl.presentation.compositions.GuiControlSignalEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiControlSignalEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiControlSignalEventArgs" UrlName="vl.presentation.compositions.GuiControlSignalEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiDefaultAxis class">
    <Symbol Key="::vl::presentation::compositions::GuiDefaultAxis" UrlName="vl.presentation.compositions.GuiDefaultAxis" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiEventArgs" UrlName="vl.presentation.compositions.GuiEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiFlowComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiFlowComposition" UrlName="vl.presentation.compositions.GuiFlowComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiFlowItemComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiFlowItemComposition" UrlName="vl.presentation.compositions.GuiFlowItemComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiFlowOption struct">
    <Symbol Key="::vl::presentation::compositions::GuiFlowOption" UrlName="vl.presentation.compositions.GuiFlowOption" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiGraphicsComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiGraphicsComposition" UrlName="vl.presentation.compositions.GuiGraphicsComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiGraphicsEvent class">
    <Symbol Key="::vl::presentation::compositions::GuiGraphicsEvent`1" UrlName="vl.presentation.compositions.GuiGraphicsEvent`1" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiGraphicsEventReceiver class">
    <Symbol Key="::vl::presentation::compositions::GuiGraphicsEventReceiver" UrlName="vl.presentation.compositions.GuiGraphicsEventReceiver" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiGraphicsHost class">
    <Symbol Key="::vl::presentation::compositions::GuiGraphicsHost" UrlName="vl.presentation.compositions.GuiGraphicsHost" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiGraphicsSite class">
    <Symbol Key="::vl::presentation::compositions::GuiGraphicsSite" UrlName="vl.presentation.compositions.GuiGraphicsSite" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiGraphicsTimerManager class">
    <Symbol Key="::vl::presentation::compositions::GuiGraphicsTimerManager" UrlName="vl.presentation.compositions.GuiGraphicsTimerManager" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiItemEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiItemEventArgs" UrlName="vl.presentation.compositions.GuiItemEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiItemMouseEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiItemMouseEvent" UrlName="vl.presentation.compositions.GuiItemMouseEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiItemMouseEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiItemMouseEventArgs" UrlName="vl.presentation.compositions.GuiItemMouseEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiItemNotifyEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiItemNotifyEvent" UrlName="vl.presentation.compositions.GuiItemNotifyEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiKeyEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiKeyEvent" UrlName="vl.presentation.compositions.GuiKeyEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiKeyEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiKeyEventArgs" UrlName="vl.presentation.compositions.GuiKeyEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiMouseEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiMouseEvent" UrlName="vl.presentation.compositions.GuiMouseEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiMouseEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiMouseEventArgs" UrlName="vl.presentation.compositions.GuiMouseEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiNodeEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiNodeEventArgs" UrlName="vl.presentation.compositions.GuiNodeEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiNodeMouseEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiNodeMouseEvent" UrlName="vl.presentation.compositions.GuiNodeMouseEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiNodeMouseEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiNodeMouseEventArgs" UrlName="vl.presentation.compositions.GuiNodeMouseEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiNodeNotifyEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiNodeNotifyEvent" UrlName="vl.presentation.compositions.GuiNodeNotifyEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiNotifyEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiNotifyEvent" UrlName="vl.presentation.compositions.GuiNotifyEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiPartialViewComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiPartialViewComposition" UrlName="vl.presentation.compositions.GuiPartialViewComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiRepeatCompositionBase class">
    <Symbol Key="::vl::presentation::compositions::GuiRepeatCompositionBase" UrlName="vl.presentation.compositions.GuiRepeatCompositionBase" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiRepeatFlowComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiRepeatFlowComposition" UrlName="vl.presentation.compositions.GuiRepeatFlowComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiRepeatStackComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiRepeatStackComposition" UrlName="vl.presentation.compositions.GuiRepeatStackComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiRequestEvent typedecl">
    <Symbol Key="::vl::presentation::compositions::GuiRequestEvent" UrlName="vl.presentation.compositions.GuiRequestEvent" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiRequestEventArgs struct">
    <Symbol Key="::vl::presentation::compositions::GuiRequestEventArgs" UrlName="vl.presentation.compositions.GuiRequestEventArgs" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveCompositionBase class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveCompositionBase" UrlName="vl.presentation.compositions.GuiResponsiveCompositionBase" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveContainerComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveContainerComposition" UrlName="vl.presentation.compositions.GuiResponsiveContainerComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveFixedComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveFixedComposition" UrlName="vl.presentation.compositions.GuiResponsiveFixedComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveGroupComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveGroupComposition" UrlName="vl.presentation.compositions.GuiResponsiveGroupComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveSharedCollection class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveSharedCollection" UrlName="vl.presentation.compositions.GuiResponsiveSharedCollection" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveSharedComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveSharedComposition" UrlName="vl.presentation.compositions.GuiResponsiveSharedComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveStackComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveStackComposition" UrlName="vl.presentation.compositions.GuiResponsiveStackComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveViewCollection class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveViewCollection" UrlName="vl.presentation.compositions.GuiResponsiveViewCollection" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiResponsiveViewComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiResponsiveViewComposition" UrlName="vl.presentation.compositions.GuiResponsiveViewComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiRowSplitterComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiRowSplitterComposition" UrlName="vl.presentation.compositions.GuiRowSplitterComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiSharedSizeItemComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiSharedSizeItemComposition" UrlName="vl.presentation.compositions.GuiSharedSizeItemComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiSharedSizeRootComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiSharedSizeRootComposition" UrlName="vl.presentation.compositions.GuiSharedSizeRootComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiShortcutKeyItem class">
    <Symbol Key="::vl::presentation::compositions::GuiShortcutKeyItem" UrlName="vl.presentation.compositions.GuiShortcutKeyItem" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiShortcutKeyManager class">
    <Symbol Key="::vl::presentation::compositions::GuiShortcutKeyManager" UrlName="vl.presentation.compositions.GuiShortcutKeyManager" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiSideAlignedComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiSideAlignedComposition" UrlName="vl.presentation.compositions.GuiSideAlignedComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiStackComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiStackComposition" UrlName="vl.presentation.compositions.GuiStackComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiStackItemComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiStackItemComposition" UrlName="vl.presentation.compositions.GuiStackItemComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiTabActionManager class">
    <Symbol Key="::vl::presentation::compositions::GuiTabActionManager" UrlName="vl.presentation.compositions.GuiTabActionManager" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiTableComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiTableComposition" UrlName="vl.presentation.compositions.GuiTableComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiTableSplitterCompositionBase class">
    <Symbol Key="::vl::presentation::compositions::GuiTableSplitterCompositionBase" UrlName="vl.presentation.compositions.GuiTableSplitterCompositionBase" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiWindowComposition class">
    <Symbol Key="::vl::presentation::compositions::GuiWindowComposition" UrlName="vl.presentation.compositions.GuiWindowComposition" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiAltAction class">
    <Symbol Key="::vl::presentation::compositions::IGuiAltAction" UrlName="vl.presentation.compositions.IGuiAltAction" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiAltActionContainer class">
    <Symbol Key="::vl::presentation::compositions::IGuiAltActionContainer" UrlName="vl.presentation.compositions.IGuiAltActionContainer" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiAltActionHost class">
    <Symbol Key="::vl::presentation::compositions::IGuiAltActionHost" UrlName="vl.presentation.compositions.IGuiAltActionHost" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiAxis class">
    <Symbol Key="::vl::presentation::compositions::IGuiAxis" UrlName="vl.presentation.compositions.IGuiAxis" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiGraphicsEventHandler class">
    <Symbol Key="::vl::presentation::compositions::IGuiGraphicsEventHandler" UrlName="vl.presentation.compositions.IGuiGraphicsEventHandler" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiGraphicsTimerCallback class">
    <Symbol Key="::vl::presentation::compositions::IGuiGraphicsTimerCallback" UrlName="vl.presentation.compositions.IGuiGraphicsTimerCallback" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiShortcutKeyItem class">
    <Symbol Key="::vl::presentation::compositions::IGuiShortcutKeyItem" UrlName="vl.presentation.compositions.IGuiShortcutKeyItem" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiShortcutKeyManager class">
    <Symbol Key="::vl::presentation::compositions::IGuiShortcutKeyManager" UrlName="vl.presentation.compositions.IGuiShortcutKeyManager" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiTabAction class">
    <Symbol Key="::vl::presentation::compositions::IGuiTabAction" UrlName="vl.presentation.compositions.IGuiTabAction" Doc="true" />
  </Overloads>
  <Overloads DisplayName="InvokeOnCompositionStateChanged function">
    <Symbol Key="::vl::presentation::compositions::InvokeOnCompositionStateChanged(* compositions::GuiGraphicsComposition)" UrlName="vl.presentation.compositions.InvokeOnCompositionStateChanged(^ compositions.GuiGraphicsComposition)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="KeyDirection enum">
    <Symbol Key="::vl::presentation::compositions::KeyDirection" UrlName="vl.presentation.compositions.KeyDirection" Doc="true" />
  </Overloads>
  <Overloads DisplayName="NotifyFinalizeInstance function">
    <Symbol Key="::vl::presentation::compositions::NotifyFinalizeInstance(* controls::GuiControl)" UrlName="vl.presentation.compositions.NotifyFinalizeInstance(^ controls.GuiControl)" Doc="true" />
    <Symbol Key="::vl::presentation::compositions::NotifyFinalizeInstance(* GuiGraphicsComposition)" UrlName="vl.presentation.compositions.NotifyFinalizeInstance(^ GuiGraphicsComposition)" Doc="true" />
  </Overloads>
  <Overloads DisplayName="ResponsiveDirection enum">
    <Symbol Key="::vl::presentation::compositions::ResponsiveDirection" UrlName="vl.presentation.compositions.ResponsiveDirection" Doc="false" />
  </Overloads>
  <Overloads DisplayName="SafeDeleteComposition function">
    <Symbol Key="::vl::presentation::compositions::SafeDeleteComposition(* GuiGraphicsComposition)" UrlName="vl.presentation.compositions.SafeDeleteComposition(^ GuiGraphicsComposition)" Doc="true" />
  </Overloads>
  <Overloads DisplayName="SafeDeleteControl function">
    <Symbol Key="::vl::presentation::compositions::SafeDeleteControl(* controls::GuiControl)" UrlName="vl.presentation.compositions.SafeDeleteControl(^ controls.GuiControl)" Doc="true" />
  </Overloads>
</Namespace>