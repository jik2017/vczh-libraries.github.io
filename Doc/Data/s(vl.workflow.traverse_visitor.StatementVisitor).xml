<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.traverse_visitor.StatementVisitor">
    <ClassDecl Access="Public" Name="StatementVisitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor" ClassType="Class">
      <Children>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(&amp; vl::parsing::ParsingToken)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="token" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::token" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(&amp; vl::parsing::ParsingToken)::token" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingToken" Name="ParsingToken">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingToken@s:vl.parsing.ParsingToken" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl@ns:vl" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* vl::parsing::ParsingTreeCustomBase)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* vl::parsing::ParsingTreeCustomBase)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl@ns:vl" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfBreakStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfBreakStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBreakStatement" Name="WfBreakStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBreakStatement@s:vl.workflow.WfBreakStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfContinueStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfContinueStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfContinueStatement" Name="WfContinueStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfContinueStatement@s:vl.workflow.WfContinueStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfReturnStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfReturnStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfReturnStatement" Name="WfReturnStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfReturnStatement@s:vl.workflow.WfReturnStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfDeleteStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfDeleteStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeleteStatement" Name="WfDeleteStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeleteStatement@s:vl.workflow.WfDeleteStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfRaiseExceptionStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfRaiseExceptionStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfRaiseExceptionStatement" Name="WfRaiseExceptionStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfRaiseExceptionStatement@s:vl.workflow.WfRaiseExceptionStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfIfStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfIfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfIfStatement" Name="WfIfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfIfStatement@s:vl.workflow.WfIfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfWhileStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfWhileStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfWhileStatement" Name="WfWhileStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfWhileStatement@s:vl.workflow.WfWhileStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfTryStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfTryStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTryStatement" Name="WfTryStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfTryStatement@s:vl.workflow.WfTryStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfBlockStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfBlockStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBlockStatement" Name="WfBlockStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBlockStatement@s:vl.workflow.WfBlockStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfGotoStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfGotoStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfGotoStatement" Name="WfGotoStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfGotoStatement@s:vl.workflow.WfGotoStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfVariableStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfVariableStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVariableStatement" Name="WfVariableStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVariableStatement@s:vl.workflow.WfVariableStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfVariableDeclaration)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfVariableDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVariableDeclaration" Name="WfVariableDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVariableDeclaration@s:vl.workflow.WfVariableDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfDeclaration)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfAttribute)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfAttribute)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAttribute" Name="WfAttribute">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAttribute@s:vl.workflow.WfAttribute" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfClassMember)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfClassMember)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassMember" Name="WfClassMember">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassMember@s:vl.workflow.WfClassMember" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Traverse" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfExpressionStatement)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Traverse(* WfExpressionStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpressionStatement" Name="WfExpressionStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpressionStatement@s:vl.workflow.WfExpressionStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="VisitField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfVariableDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfVariableDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVariableDeclaration" Name="WfVariableDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVariableDeclaration@s:vl.workflow.WfVariableDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="VisitField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfAttribute)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfAttribute)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAttribute" Name="WfAttribute">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAttribute@s:vl.workflow.WfAttribute" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="VisitField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfClassMember)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfClassMember)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassMember" Name="WfClassMember">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassMember@s:vl.workflow.WfClassMember" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="VisitField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfExpression)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="VisitField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfType)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfType)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="VisitField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfStatement)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::VisitField(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch(* WfVirtualCseStatement)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch(* WfVirtualCseStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseStatement" Name="WfVirtualCseStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCseStatement@s:vl.workflow.WfVirtualCseStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch(* WfCoroutineStatement)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch(* WfCoroutineStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCoroutineStatement" Name="WfCoroutineStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCoroutineStatement@s:vl.workflow.WfCoroutineStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch(* WfStateMachineStatement)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Dispatch(* WfStateMachineStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateMachineStatement" Name="WfStateMachineStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateMachineStatement@s:vl.workflow.WfStateMachineStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfBreakStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfBreakStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBreakStatement" Name="WfBreakStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBreakStatement@s:vl.workflow.WfBreakStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfContinueStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfContinueStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfContinueStatement" Name="WfContinueStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfContinueStatement@s:vl.workflow.WfContinueStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfReturnStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfReturnStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfReturnStatement" Name="WfReturnStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfReturnStatement@s:vl.workflow.WfReturnStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfDeleteStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfDeleteStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeleteStatement" Name="WfDeleteStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeleteStatement@s:vl.workflow.WfDeleteStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfRaiseExceptionStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfRaiseExceptionStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfRaiseExceptionStatement" Name="WfRaiseExceptionStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfRaiseExceptionStatement@s:vl.workflow.WfRaiseExceptionStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfIfStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfIfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfIfStatement" Name="WfIfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfIfStatement@s:vl.workflow.WfIfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfWhileStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfWhileStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfWhileStatement" Name="WfWhileStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfWhileStatement@s:vl.workflow.WfWhileStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfTryStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfTryStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTryStatement" Name="WfTryStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfTryStatement@s:vl.workflow.WfTryStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfBlockStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfBlockStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBlockStatement" Name="WfBlockStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBlockStatement@s:vl.workflow.WfBlockStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfGotoStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfGotoStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfGotoStatement" Name="WfGotoStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfGotoStatement@s:vl.workflow.WfGotoStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfVariableStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfVariableStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVariableStatement" Name="WfVariableStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVariableStatement@s:vl.workflow.WfVariableStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfExpressionStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfExpressionStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpressionStatement" Name="WfExpressionStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpressionStatement@s:vl.workflow.WfExpressionStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfVirtualCseStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfVirtualCseStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseStatement" Name="WfVirtualCseStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCseStatement@s:vl.workflow.WfVirtualCseStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfCoroutineStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfCoroutineStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCoroutineStatement" Name="WfCoroutineStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCoroutineStatement@s:vl.workflow.WfCoroutineStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfStateMachineStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit::node" OverloadKey="::vl::workflow::traverse_visitor::StatementVisitor::Visit(* WfStateMachineStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateMachineStatement" Name="WfStateMachineStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateMachineStatement@s:vl.workflow.WfStateMachineStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfStatement::IVisitor" Name="IVisitor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfStatement::IVisitor@s:vl.workflow.WfStatement" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>