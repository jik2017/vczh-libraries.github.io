<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.WfErrors">
    <ClassDecl Access="Public" Name="WfErrors" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors" OverloadKey="::vl::workflow::analyzer::WfErrors" ClassType="Struct">
      <Children>
        <FuncDecl Access="Public" Name="WrongFormatStringSyntax" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongFormatStringSyntax" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongFormatStringSyntax(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongFormatStringSyntax::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongFormatStringSyntax(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongSimpleObserveExpression" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongSimpleObserveExpression" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongSimpleObserveExpression(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongSimpleObserveExpression::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongSimpleObserveExpression(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongSimpleObserveEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongSimpleObserveEvent" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongSimpleObserveEvent(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongSimpleObserveEvent::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongSimpleObserveEvent(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EmptyObserveEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EmptyObserveEvent" OverloadKey="::vl::workflow::analyzer::WfErrors::EmptyObserveEvent(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EmptyObserveEvent::node" OverloadKey="::vl::workflow::analyzer::WfErrors::EmptyObserveEvent(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ObserveNotInBind" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ObserveNotInBind" OverloadKey="::vl::workflow::analyzer::WfErrors::ObserveNotInBind(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ObserveNotInBind::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ObserveNotInBind(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ObserveInObserveEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ObserveInObserveEvent" OverloadKey="::vl::workflow::analyzer::WfErrors::ObserveInObserveEvent(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ObserveInObserveEvent::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ObserveInObserveEvent(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="BindInBind" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::BindInBind" OverloadKey="::vl::workflow::analyzer::WfErrors::BindInBind(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::BindInBind::node" OverloadKey="::vl::workflow::analyzer::WfErrors::BindInBind(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AttachInBind" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AttachInBind" OverloadKey="::vl::workflow::analyzer::WfErrors::AttachInBind(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AttachInBind::node" OverloadKey="::vl::workflow::analyzer::WfErrors::AttachInBind(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DetachInBind" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DetachInBind" OverloadKey="::vl::workflow::analyzer::WfErrors::DetachInBind(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DetachInBind::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DetachInBind(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ConstructorMixMapAndList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorMixMapAndList" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorMixMapAndList(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorMixMapAndList::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorMixMapAndList(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ConstructorMixStructAndList" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorMixStructAndList" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorMixStructAndList(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorMixStructAndList::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorMixStructAndList(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedConstructorField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedConstructorField" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedConstructorField(* WfReferenceExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedConstructorField::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedConstructorField(* WfReferenceExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfReferenceExpression" Name="WfReferenceExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfReferenceExpression@s:vl.workflow.WfReferenceExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ConstructorMixClassAndInterface" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorMixClassAndInterface" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorMixClassAndInterface(* WfNewClassExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorMixClassAndInterface::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorMixClassAndInterface(* WfNewClassExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewClassExpression" Name="WfNewClassExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewClassExpression@s:vl.workflow.WfNewClassExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ConstructorMixClassAndInterface" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorMixClassAndInterface" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorMixClassAndInterface(* WfNewInterfaceExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorMixClassAndInterface::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorMixClassAndInterface(* WfNewInterfaceExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewInterfaceExpression" Name="WfNewInterfaceExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewInterfaceExpression@s:vl.workflow.WfNewInterfaceExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ScopeNameIsNotExpression" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ScopeNameIsNotExpression" OverloadKey="::vl::workflow::analyzer::WfErrors::ScopeNameIsNotExpression(* WfExpression,Ptr&lt;WfLexicalScopeName&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ScopeNameIsNotExpression::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ScopeNameIsNotExpression(* WfExpression,Ptr&lt;WfLexicalScopeName&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="scopeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ScopeNameIsNotExpression::scopeName" OverloadKey="::vl::workflow::analyzer::WfErrors::ScopeNameIsNotExpression(* WfExpression,Ptr&lt;WfLexicalScopeName&gt;)::scopeName" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EventIsNotExpression" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EventIsNotExpression" OverloadKey="::vl::workflow::analyzer::WfErrors::EventIsNotExpression(* WfExpression,* reflection::description::IEventInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EventIsNotExpression::node" OverloadKey="::vl::workflow::analyzer::WfErrors::EventIsNotExpression(* WfExpression,* reflection::description::IEventInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="eventInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EventIsNotExpression::eventInfo" OverloadKey="::vl::workflow::analyzer::WfErrors::EventIsNotExpression(* WfExpression,* reflection::description::IEventInfo)::eventInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo" Name="IEventInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IEventInfo@s:vl.reflection.description.IEventInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionIsNotScopeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotScopeName" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotScopeName(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotScopeName::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotScopeName(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionIsNotEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotEvent" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotEvent(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotEvent::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotEvent(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionCannotResolveType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotResolveType" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotResolveType(* WfExpression,Ptr&lt;WfLexicalSymbol&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotResolveType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotResolveType(* WfExpression,Ptr&lt;WfLexicalSymbol&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotResolveType::symbol" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotResolveType(* WfExpression,Ptr&lt;WfLexicalSymbol&gt;)::symbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="NullCannotResolveType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::NullCannotResolveType" OverloadKey="::vl::workflow::analyzer::WfErrors::NullCannotResolveType(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::NullCannotResolveType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::NullCannotResolveType(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ConstructorCannotResolveType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotResolveType" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotResolveType(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotResolveType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotResolveType(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="OrderedLambdaCannotResolveType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotResolveType" OverloadKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotResolveType(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotResolveType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotResolveType(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="NullCannotImplicitlyConvertToType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::NullCannotImplicitlyConvertToType" OverloadKey="::vl::workflow::analyzer::WfErrors::NullCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::NullCannotImplicitlyConvertToType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::NullCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::NullCannotImplicitlyConvertToType::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::NullCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ConstructorCannotImplicitlyConvertToType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotImplicitlyConvertToType" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotImplicitlyConvertToType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotImplicitlyConvertToType::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="OrderedLambdaCannotImplicitlyConvertToType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotImplicitlyConvertToType" OverloadKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotImplicitlyConvertToType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotImplicitlyConvertToType::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::OrderedLambdaCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionCannotImplicitlyConvertToType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotImplicitlyConvertToType" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotImplicitlyConvertToType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="fromType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotImplicitlyConvertToType::fromType" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::fromType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotImplicitlyConvertToType::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotImplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionCannotExplicitlyConvertToType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotExplicitlyConvertToType" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotExplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotExplicitlyConvertToType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotExplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="fromType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotExplicitlyConvertToType::fromType" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotExplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::fromType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotExplicitlyConvertToType::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionCannotExplicitlyConvertToType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CannotWeakCastToType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotWeakCastToType" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotWeakCastToType(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotWeakCastToType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotWeakCastToType(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotWeakCastToType::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotWeakCastToType(* WfExpression,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IntegerLiteralOutOfRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IntegerLiteralOutOfRange" OverloadKey="::vl::workflow::analyzer::WfErrors::IntegerLiteralOutOfRange(* WfIntegerExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IntegerLiteralOutOfRange::node" OverloadKey="::vl::workflow::analyzer::WfErrors::IntegerLiteralOutOfRange(* WfIntegerExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfIntegerExpression" Name="WfIntegerExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfIntegerExpression@s:vl.workflow.WfIntegerExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FloatingLiteralOutOfRange" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FloatingLiteralOutOfRange" OverloadKey="::vl::workflow::analyzer::WfErrors::FloatingLiteralOutOfRange(* WfFloatingExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FloatingLiteralOutOfRange::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FloatingLiteralOutOfRange(* WfFloatingExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFloatingExpression" Name="WfFloatingExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFloatingExpression@s:vl.workflow.WfFloatingExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CannotMergeTwoType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotMergeTwoType" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotMergeTwoType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotMergeTwoType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotMergeTwoType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="firstType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotMergeTwoType::firstType" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotMergeTwoType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::firstType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="secondType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotMergeTwoType::secondType" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotMergeTwoType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::secondType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RangeShouldBeInteger" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::RangeShouldBeInteger" OverloadKey="::vl::workflow::analyzer::WfErrors::RangeShouldBeInteger(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::RangeShouldBeInteger::node" OverloadKey="::vl::workflow::analyzer::WfErrors::RangeShouldBeInteger(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::RangeShouldBeInteger::type" OverloadKey="::vl::workflow::analyzer::WfErrors::RangeShouldBeInteger(* WfExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="UnaryOperatorOnWrongType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::UnaryOperatorOnWrongType" OverloadKey="::vl::workflow::analyzer::WfErrors::UnaryOperatorOnWrongType(* WfUnaryExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::UnaryOperatorOnWrongType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::UnaryOperatorOnWrongType(* WfUnaryExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfUnaryExpression" Name="WfUnaryExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfUnaryExpression@s:vl.workflow.WfUnaryExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::UnaryOperatorOnWrongType::type" OverloadKey="::vl::workflow::analyzer::WfErrors::UnaryOperatorOnWrongType(* WfUnaryExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="BinaryOperatorOnWrongType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::BinaryOperatorOnWrongType" OverloadKey="::vl::workflow::analyzer::WfErrors::BinaryOperatorOnWrongType(* WfBinaryExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::BinaryOperatorOnWrongType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::BinaryOperatorOnWrongType(* WfBinaryExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBinaryExpression" Name="WfBinaryExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBinaryExpression@s:vl.workflow.WfBinaryExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::BinaryOperatorOnWrongType::type" OverloadKey="::vl::workflow::analyzer::WfErrors::BinaryOperatorOnWrongType(* WfBinaryExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IndexOperatorOnWrongType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IndexOperatorOnWrongType" OverloadKey="::vl::workflow::analyzer::WfErrors::IndexOperatorOnWrongType(* WfBinaryExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IndexOperatorOnWrongType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::IndexOperatorOnWrongType(* WfBinaryExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBinaryExpression" Name="WfBinaryExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBinaryExpression@s:vl.workflow.WfBinaryExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="containerType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IndexOperatorOnWrongType::containerType" OverloadKey="::vl::workflow::analyzer::WfErrors::IndexOperatorOnWrongType(* WfBinaryExpression,* reflection::description::ITypeInfo)::containerType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionIsNotCollection" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotCollection" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotCollection(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotCollection::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotCollection(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotCollection::type" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotCollection(* WfExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionIsNotFunction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotFunction" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotFunction(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotFunction::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotFunction(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotFunction::type" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotFunction(* WfExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FunctionArgumentCountMismatched" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentCountMismatched" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentCountMismatched(* parsing::ParsingTreeCustomBase,vint,&amp; const ResolveExpressionResult)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentCountMismatched::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentCountMismatched(* parsing::ParsingTreeCustomBase,vint,&amp; const ResolveExpressionResult)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="expectedCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentCountMismatched::expectedCount" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentCountMismatched(* parsing::ParsingTreeCustomBase,vint,&amp; const ResolveExpressionResult)::expectedCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="function" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentCountMismatched::function" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentCountMismatched(* parsing::ParsingTreeCustomBase,vint,&amp; const ResolveExpressionResult)::function" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FunctionArgumentTypeMismatched" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched(* parsing::ParsingTreeCustomBase,&amp; const ResolveExpressionResult,vint,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched(* parsing::ParsingTreeCustomBase,&amp; const ResolveExpressionResult,vint,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="function" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched::function" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched(* parsing::ParsingTreeCustomBase,&amp; const ResolveExpressionResult,vint,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::function" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched::index" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched(* parsing::ParsingTreeCustomBase,&amp; const ResolveExpressionResult,vint,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="fromType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched::fromType" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched(* parsing::ParsingTreeCustomBase,&amp; const ResolveExpressionResult,vint,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::fromType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionArgumentTypeMismatched(* parsing::ParsingTreeCustomBase,&amp; const ResolveExpressionResult,vint,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CannotPickOverloadedFunctions" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedFunctions" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedFunctions(* parsing::ParsingTreeCustomBase,&amp; collections::List&lt;ResolveExpressionResult&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedFunctions::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedFunctions(* parsing::ParsingTreeCustomBase,&amp; collections::List&lt;ResolveExpressionResult&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="results" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedFunctions::results" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedFunctions(* parsing::ParsingTreeCustomBase,&amp; collections::List&lt;ResolveExpressionResult&gt;)::results" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ClassContainsNoConstructor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ClassContainsNoConstructor" OverloadKey="::vl::workflow::analyzer::WfErrors::ClassContainsNoConstructor(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ClassContainsNoConstructor::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ClassContainsNoConstructor(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ClassContainsNoConstructor::type" OverloadKey="::vl::workflow::analyzer::WfErrors::ClassContainsNoConstructor(* WfExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InterfaceContainsNoConstructor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceContainsNoConstructor" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceContainsNoConstructor(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceContainsNoConstructor::node" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceContainsNoConstructor(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceContainsNoConstructor::type" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceContainsNoConstructor(* WfExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ConstructorReturnTypeMismatched" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched(* WfExpression,&amp; const ResolveExpressionResult,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched(* WfExpression,&amp; const ResolveExpressionResult,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="function" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched::function" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched(* WfExpression,&amp; const ResolveExpressionResult,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::function" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="fromType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched::fromType" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched(* WfExpression,&amp; const ResolveExpressionResult,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::fromType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::ConstructorReturnTypeMismatched(* WfExpression,&amp; const ResolveExpressionResult,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionIsNotLeftValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotLeftValue" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotLeftValue(* WfExpression,&amp; const ResolveExpressionResult)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotLeftValue::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotLeftValue(* WfExpression,&amp; const ResolveExpressionResult)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotLeftValue::result" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotLeftValue(* WfExpression,&amp; const ResolveExpressionResult)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CannotCallMemberOutsideOfClass" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberOutsideOfClass" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberOutsideOfClass(* WfExpression,&amp; const ResolveExpressionResult)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberOutsideOfClass::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberOutsideOfClass(* WfExpression,&amp; const ResolveExpressionResult)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberOutsideOfClass::result" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberOutsideOfClass(* WfExpression,&amp; const ResolveExpressionResult)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CannotCallMemberInStaticFunction" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberInStaticFunction" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberInStaticFunction(* WfExpression,&amp; const ResolveExpressionResult)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberInStaticFunction::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberInStaticFunction(* WfExpression,&amp; const ResolveExpressionResult)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberInStaticFunction::result" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotCallMemberInStaticFunction(* WfExpression,&amp; const ResolveExpressionResult)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FieldCannotInitializeUsingEachOther" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FieldCannotInitializeUsingEachOther" OverloadKey="::vl::workflow::analyzer::WfErrors::FieldCannotInitializeUsingEachOther(* WfExpression,&amp; const ResolveExpressionResult)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FieldCannotInitializeUsingEachOther::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FieldCannotInitializeUsingEachOther(* WfExpression,&amp; const ResolveExpressionResult)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FieldCannotInitializeUsingEachOther::result" OverloadKey="::vl::workflow::analyzer::WfErrors::FieldCannotInitializeUsingEachOther(* WfExpression,&amp; const ResolveExpressionResult)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongThisExpression" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongThisExpression" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongThisExpression(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongThisExpression::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongThisExpression(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IncorrectTypeForUnion" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForUnion" OverloadKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForUnion(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForUnion::node" OverloadKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForUnion(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForUnion::type" OverloadKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForUnion(* WfExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IncorrectTypeForIntersect" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForIntersect" OverloadKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForIntersect(* WfExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForIntersect::node" OverloadKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForIntersect(* WfExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForIntersect::type" OverloadKey="::vl::workflow::analyzer::WfErrors::IncorrectTypeForIntersect(* WfExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpressionIsNotConstant" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotConstant" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotConstant(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotConstant::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpressionIsNotConstant(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongMixinTargetType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongMixinTargetType" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongMixinTargetType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongMixinTargetType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongMixinTargetType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="fromType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongMixinTargetType::fromType" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongMixinTargetType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::fromType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="toType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongMixinTargetType::toType" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongMixinTargetType(* WfExpression,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::toType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ExpectedTypeCastCannotResolveType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpectedTypeCastCannotResolveType" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpectedTypeCastCannotResolveType(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ExpectedTypeCastCannotResolveType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ExpectedTypeCastCannotResolveType(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongVoidType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongVoidType" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongVoidType(* WfType)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongVoidType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongVoidType(* WfType)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongInterfaceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceType" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceType(* WfType)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceType(* WfType)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RawPointerToNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::RawPointerToNonReferenceType" OverloadKey="::vl::workflow::analyzer::WfErrors::RawPointerToNonReferenceType(* WfType,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::RawPointerToNonReferenceType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::RawPointerToNonReferenceType(* WfType,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="typeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::RawPointerToNonReferenceType::typeInfo" OverloadKey="::vl::workflow::analyzer::WfErrors::RawPointerToNonReferenceType(* WfType,* reflection::description::ITypeInfo)::typeInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SharedPointerToNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::SharedPointerToNonReferenceType" OverloadKey="::vl::workflow::analyzer::WfErrors::SharedPointerToNonReferenceType(* WfType,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::SharedPointerToNonReferenceType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::SharedPointerToNonReferenceType(* WfType,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="typeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::SharedPointerToNonReferenceType::typeInfo" OverloadKey="::vl::workflow::analyzer::WfErrors::SharedPointerToNonReferenceType(* WfType,* reflection::description::ITypeInfo)::typeInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="NullableToNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::NullableToNonReferenceType" OverloadKey="::vl::workflow::analyzer::WfErrors::NullableToNonReferenceType(* WfType,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::NullableToNonReferenceType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::NullableToNonReferenceType(* WfType,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="typeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::NullableToNonReferenceType::typeInfo" OverloadKey="::vl::workflow::analyzer::WfErrors::NullableToNonReferenceType(* WfType,* reflection::description::ITypeInfo)::typeInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ChildOfNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ChildOfNonReferenceType" OverloadKey="::vl::workflow::analyzer::WfErrors::ChildOfNonReferenceType(* WfType)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ChildOfNonReferenceType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ChildOfNonReferenceType(* WfType)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TypeNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotExists(* WfType,Ptr&lt;WfLexicalScopeName&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotExists(* WfType,Ptr&lt;WfLexicalScopeName&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="scopeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotExists::scopeName" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotExists(* WfType,Ptr&lt;WfLexicalScopeName&gt;)::scopeName" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TypeNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotExists(* WfType,&amp; const ResolveExpressionResult)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotExists(* WfType,&amp; const ResolveExpressionResult)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="result" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotExists::result" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotExists(* WfType,&amp; const ResolveExpressionResult)::result" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TypeNotForValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotForValue" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotForValue(* WfType,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotForValue::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotForValue(* WfType,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="typeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TypeNotForValue::typeInfo" OverloadKey="::vl::workflow::analyzer::WfErrors::TypeNotForValue(* WfType,* reflection::description::ITypeInfo)::typeInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="BreakNotInLoop" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::BreakNotInLoop" OverloadKey="::vl::workflow::analyzer::WfErrors::BreakNotInLoop(* WfStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::BreakNotInLoop::node" OverloadKey="::vl::workflow::analyzer::WfErrors::BreakNotInLoop(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ContinueNotInLoop" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ContinueNotInLoop" OverloadKey="::vl::workflow::analyzer::WfErrors::ContinueNotInLoop(* WfStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ContinueNotInLoop::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ContinueNotInLoop(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RethrowNotInCatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::RethrowNotInCatch" OverloadKey="::vl::workflow::analyzer::WfErrors::RethrowNotInCatch(* WfStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::RethrowNotInCatch::node" OverloadKey="::vl::workflow::analyzer::WfErrors::RethrowNotInCatch(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TryMissCatchAndFinally" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TryMissCatchAndFinally" OverloadKey="::vl::workflow::analyzer::WfErrors::TryMissCatchAndFinally(* WfStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TryMissCatchAndFinally::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TryMissCatchAndFinally(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReturnMissExpression" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ReturnMissExpression" OverloadKey="::vl::workflow::analyzer::WfErrors::ReturnMissExpression(* WfStatement,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ReturnMissExpression::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ReturnMissExpression(* WfStatement,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ReturnMissExpression::type" OverloadKey="::vl::workflow::analyzer::WfErrors::ReturnMissExpression(* WfStatement,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DeleteNonRawPointer" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DeleteNonRawPointer" OverloadKey="::vl::workflow::analyzer::WfErrors::DeleteNonRawPointer(* WfStatement,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DeleteNonRawPointer::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DeleteNonRawPointer(* WfStatement,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DeleteNonRawPointer::type" OverloadKey="::vl::workflow::analyzer::WfErrors::DeleteNonRawPointer(* WfStatement,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CannotReturnExpression" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotReturnExpression" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotReturnExpression(* WfStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotReturnExpression::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotReturnExpression(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongCoPause" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongCoPause" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongCoPause(* WfStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongCoPause::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongCoPause(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongCoOperator" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongCoOperator" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongCoOperator(* WfStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongCoOperator::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongCoOperator(* WfStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongCoOperator" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongCoOperator" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongCoOperator(* WfExpression)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongCoOperator::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongCoOperator(* WfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CoProviderNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderNotExists(* WfCoProviderStatement,&amp; collections::List&lt;WString&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderNotExists(* WfCoProviderStatement,&amp; collections::List&lt;WString&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCoProviderStatement" Name="WfCoProviderStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCoProviderStatement@s:vl.workflow.WfCoProviderStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="candidates" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderNotExists::candidates" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderNotExists(* WfCoProviderStatement,&amp; collections::List&lt;WString&gt;)::candidates" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CoOperatorNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfReturnStatement,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfReturnStatement,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfReturnStatement" Name="WfReturnStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfReturnStatement@s:vl.workflow.WfReturnStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists::type" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfReturnStatement,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CoOperatorNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfCoOperatorStatement,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfCoOperatorStatement,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCoOperatorStatement" Name="WfCoOperatorStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCoOperatorStatement@s:vl.workflow.WfCoOperatorStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists::type" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfCoOperatorStatement,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CoOperatorNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfCoOperatorExpression,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfCoOperatorExpression,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCoOperatorExpression" Name="WfCoOperatorExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCoOperatorExpression@s:vl.workflow.WfCoOperatorExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists::type" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorNotExists(* WfCoOperatorExpression,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CoOperatorCannotResolveResultType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorCannotResolveResultType" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorCannotResolveResultType(* WfCoOperatorStatement,&amp; collections::List&lt;* reflection::description::ITypeInfo&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorCannotResolveResultType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorCannotResolveResultType(* WfCoOperatorStatement,&amp; collections::List&lt;* reflection::description::ITypeInfo&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCoOperatorStatement" Name="WfCoOperatorStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCoOperatorStatement@s:vl.workflow.WfCoOperatorStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="types" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoOperatorCannotResolveResultType::types" OverloadKey="::vl::workflow::analyzer::WfErrors::CoOperatorCannotResolveResultType(* WfCoOperatorStatement,&amp; collections::List&lt;* reflection::description::ITypeInfo&gt;)::types" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection@ns:vl.reflection" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CoProviderCreateNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateNotExists(* WfCoProviderStatement,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateNotExists(* WfCoProviderStatement,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCoProviderStatement" Name="WfCoProviderStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCoProviderStatement@s:vl.workflow.WfCoProviderStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateNotExists::type" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateNotExists(* WfCoProviderStatement,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CoProviderCreateAndRunNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateAndRunNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateAndRunNotExists(* WfCoProviderStatement,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateAndRunNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateAndRunNotExists(* WfCoProviderStatement,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCoProviderStatement" Name="WfCoProviderStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCoProviderStatement@s:vl.workflow.WfCoProviderStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateAndRunNotExists::type" OverloadKey="::vl::workflow::analyzer::WfErrors::CoProviderCreateAndRunNotExists(* WfCoProviderStatement,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GotoLabelNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::GotoLabelNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::GotoLabelNotExists(* WfGotoStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::GotoLabelNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::GotoLabelNotExists(* WfGotoStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfGotoStatement" Name="WfGotoStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfGotoStatement@s:vl.workflow.WfGotoStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TooManyGotoLabel" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyGotoLabel" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyGotoLabel(* WfGotoStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyGotoLabel::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyGotoLabel(* WfGotoStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfGotoStatement" Name="WfGotoStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfGotoStatement@s:vl.workflow.WfGotoStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongStateSwitchStatement" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongStateSwitchStatement" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongStateSwitchStatement(* WfStateSwitchStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongStateSwitchStatement::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongStateSwitchStatement(* WfStateSwitchStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateSwitchStatement" Name="WfStateSwitchStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateSwitchStatement@s:vl.workflow.WfStateSwitchStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongStateInvokeStatement" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongStateInvokeStatement" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongStateInvokeStatement(* WfStateInvokeStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongStateInvokeStatement::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongStateInvokeStatement(* WfStateInvokeStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateInvokeStatement" Name="WfStateInvokeStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateInvokeStatement@s:vl.workflow.WfStateInvokeStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StateInputNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateInputNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::StateInputNotExists(* WfStateSwitchCase)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateInputNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::StateInputNotExists(* WfStateSwitchCase)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateSwitchCase" Name="WfStateSwitchCase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateSwitchCase@s:vl.workflow.WfStateSwitchCase" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StateSwitchArgumentCountNotMatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateSwitchArgumentCountNotMatch" OverloadKey="::vl::workflow::analyzer::WfErrors::StateSwitchArgumentCountNotMatch(* WfStateSwitchCase)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateSwitchArgumentCountNotMatch::node" OverloadKey="::vl::workflow::analyzer::WfErrors::StateSwitchArgumentCountNotMatch(* WfStateSwitchCase)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateSwitchCase" Name="WfStateSwitchCase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateSwitchCase@s:vl.workflow.WfStateSwitchCase" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StateNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::StateNotExists(* WfStateInvokeStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::StateNotExists(* WfStateInvokeStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateInvokeStatement" Name="WfStateInvokeStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateInvokeStatement@s:vl.workflow.WfStateInvokeStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StateArgumentCountNotMatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateArgumentCountNotMatch" OverloadKey="::vl::workflow::analyzer::WfErrors::StateArgumentCountNotMatch(* WfStateInvokeStatement)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateArgumentCountNotMatch::node" OverloadKey="::vl::workflow::analyzer::WfErrors::StateArgumentCountNotMatch(* WfStateInvokeStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateInvokeStatement" Name="WfStateInvokeStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateInvokeStatement@s:vl.workflow.WfStateInvokeStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FunctionShouldHaveName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionShouldHaveName" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionShouldHaveName(* WfDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionShouldHaveName::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionShouldHaveName(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FunctionShouldHaveImplementation" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionShouldHaveImplementation" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionShouldHaveImplementation(* WfDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionShouldHaveImplementation::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionShouldHaveImplementation(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InterfaceMethodShouldNotHaveImplementation" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodShouldNotHaveImplementation" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodShouldNotHaveImplementation(* WfDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodShouldNotHaveImplementation::node" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodShouldNotHaveImplementation(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration(* WfDeclaration,&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration(* WfDeclaration,&amp; const WString)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="firstDeclarationCategory" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration::firstDeclarationCategory" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration(* WfDeclaration,&amp; const WString)::firstDeclarationCategory" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration(* WfStateMachineDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedDeclaration(* WfStateMachineDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateMachineDeclaration" Name="WfStateMachineDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateMachineDeclaration@s:vl.workflow.WfStateMachineDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfDeclaration,Ptr&lt;WfLexicalSymbol&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfDeclaration,Ptr&lt;WfLexicalSymbol&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::symbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfDeclaration,Ptr&lt;WfLexicalSymbol&gt;)::symbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfFunctionArgument,Ptr&lt;WfLexicalSymbol&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfFunctionArgument,Ptr&lt;WfLexicalSymbol&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionArgument" Name="WfFunctionArgument">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFunctionArgument@s:vl.workflow.WfFunctionArgument" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::symbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfFunctionArgument,Ptr&lt;WfLexicalSymbol&gt;)::symbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStatement,Ptr&lt;WfLexicalSymbol&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStatement,Ptr&lt;WfLexicalSymbol&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::symbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStatement,Ptr&lt;WfLexicalSymbol&gt;)::symbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfExpression,Ptr&lt;WfLexicalSymbol&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfExpression,Ptr&lt;WfLexicalSymbol&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::symbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfExpression,Ptr&lt;WfLexicalSymbol&gt;)::symbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateInput,Ptr&lt;WfLexicalSymbol&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateInput,Ptr&lt;WfLexicalSymbol&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateInput" Name="WfStateInput">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateInput@s:vl.workflow.WfStateInput" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::symbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateInput,Ptr&lt;WfLexicalSymbol&gt;)::symbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateDeclaration,Ptr&lt;WfLexicalSymbol&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateDeclaration,Ptr&lt;WfLexicalSymbol&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateDeclaration" Name="WfStateDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateDeclaration@s:vl.workflow.WfStateDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::symbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateDeclaration,Ptr&lt;WfLexicalSymbol&gt;)::symbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedSymbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateSwitchArgument,Ptr&lt;WfLexicalSymbol&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateSwitchArgument,Ptr&lt;WfLexicalSymbol&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateSwitchArgument" Name="WfStateSwitchArgument">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateSwitchArgument@s:vl.workflow.WfStateSwitchArgument" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="symbol" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol::symbol" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedSymbol(* WfStateSwitchArgument,Ptr&lt;WfLexicalSymbol&gt;)::symbol" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalSymbol" Name="WfLexicalSymbol">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalSymbol@s:vl.workflow.analyzer.WfLexicalSymbol" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InterfaceMethodNotImplemented" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotImplemented" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotImplemented(* WfNewInterfaceExpression,* reflection::description::IMethodInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotImplemented::node" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotImplemented(* WfNewInterfaceExpression,* reflection::description::IMethodInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewInterfaceExpression" Name="WfNewInterfaceExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewInterfaceExpression@s:vl.workflow.WfNewInterfaceExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="method" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotImplemented::method" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotImplemented(* WfNewInterfaceExpression,* reflection::description::IMethodInfo)::method" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IMethodInfo" Name="IMethodInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::IMethodInfo@s:vl.reflection.description.IMethodInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InterfaceMethodNotFound" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotFound" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotFound(* WfFunctionDeclaration,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotFound::node" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotFound(* WfFunctionDeclaration,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionDeclaration" Name="WfFunctionDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFunctionDeclaration@s:vl.workflow.WfFunctionDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="interfaceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotFound::interfaceType" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotFound(* WfFunctionDeclaration,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::interfaceType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="methodType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotFound::methodType" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceMethodNotFound(* WfFunctionDeclaration,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo)::methodType" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CannotPickOverloadedInterfaceMethods" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedInterfaceMethods" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedInterfaceMethods(* WfExpression,&amp; collections::List&lt;ResolveExpressionResult&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedInterfaceMethods::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedInterfaceMethods(* WfExpression,&amp; collections::List&lt;ResolveExpressionResult&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="results" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedInterfaceMethods::results" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedInterfaceMethods(* WfExpression,&amp; collections::List&lt;ResolveExpressionResult&gt;)::results" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CannotPickOverloadedImplementMethods" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedImplementMethods" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedImplementMethods(* WfFunctionDeclaration,* reflection::description::ITypeInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedImplementMethods::node" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedImplementMethods(* WfFunctionDeclaration,* reflection::description::ITypeInfo)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionDeclaration" Name="WfFunctionDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFunctionDeclaration@s:vl.workflow.WfFunctionDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedImplementMethods::type" OverloadKey="::vl::workflow::analyzer::WfErrors::CannotPickOverloadedImplementMethods(* WfFunctionDeclaration,* reflection::description::ITypeInfo)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfEventDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfEventDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEventDeclaration" Name="WfEventDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEventDeclaration@s:vl.workflow.WfEventDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfPropertyDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfPropertyDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfConstructorDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfConstructorDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorDeclaration" Name="WfConstructorDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfConstructorDeclaration@s:vl.workflow.WfConstructorDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfDestructorDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfDestructorDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDestructorDeclaration" Name="WfDestructorDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDestructorDeclaration@s:vl.workflow.WfDestructorDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfAutoPropertyDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfAutoPropertyDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAutoPropertyDeclaration" Name="WfAutoPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAutoPropertyDeclaration@s:vl.workflow.WfAutoPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongDeclaration" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfStateMachineDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclaration(* WfStateMachineDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateMachineDeclaration" Name="WfStateMachineDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateMachineDeclaration@s:vl.workflow.WfStateMachineDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongDeclarationInInterfaceConstructor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclarationInInterfaceConstructor" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclarationInInterfaceConstructor(* WfDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongDeclarationInInterfaceConstructor::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongDeclarationInInterfaceConstructor(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EnumValuesNotConsecutiveFromZero" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EnumValuesNotConsecutiveFromZero" OverloadKey="::vl::workflow::analyzer::WfErrors::EnumValuesNotConsecutiveFromZero(* WfEnumDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EnumValuesNotConsecutiveFromZero::node" OverloadKey="::vl::workflow::analyzer::WfErrors::EnumValuesNotConsecutiveFromZero(* WfEnumDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEnumDeclaration" Name="WfEnumDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEnumDeclaration@s:vl.workflow.WfEnumDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FlagValuesNotConsecutiveFromZero" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FlagValuesNotConsecutiveFromZero" OverloadKey="::vl::workflow::analyzer::WfErrors::FlagValuesNotConsecutiveFromZero(* WfEnumDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FlagValuesNotConsecutiveFromZero::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FlagValuesNotConsecutiveFromZero(* WfEnumDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEnumDeclaration" Name="WfEnumDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEnumDeclaration@s:vl.workflow.WfEnumDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FlagValueNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FlagValueNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::FlagValueNotExists(* WfEnumItemIntersection,* WfEnumDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FlagValueNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FlagValueNotExists(* WfEnumItemIntersection,* WfEnumDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEnumItemIntersection" Name="WfEnumItemIntersection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEnumItemIntersection@s:vl.workflow.WfEnumItemIntersection" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="owner" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FlagValueNotExists::owner" OverloadKey="::vl::workflow::analyzer::WfErrors::FlagValueNotExists(* WfEnumItemIntersection,* WfEnumDeclaration)::owner" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEnumDeclaration" Name="WfEnumDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEnumDeclaration@s:vl.workflow.WfEnumDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedEnumValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedEnumValue" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedEnumValue(* WfEnumItem,* WfEnumDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedEnumValue::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedEnumValue(* WfEnumItem,* WfEnumDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEnumItem" Name="WfEnumItem">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEnumItem@s:vl.workflow.WfEnumItem" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="owner" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedEnumValue::owner" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedEnumValue(* WfEnumItem,* WfEnumDeclaration)::owner" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEnumDeclaration" Name="WfEnumDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEnumDeclaration@s:vl.workflow.WfEnumDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StructContainsNonValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StructContainsNonValueType" OverloadKey="::vl::workflow::analyzer::WfErrors::StructContainsNonValueType(* WfStructMember,* WfStructDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StructContainsNonValueType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::StructContainsNonValueType(* WfStructMember,* WfStructDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStructMember" Name="WfStructMember">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStructMember@s:vl.workflow.WfStructMember" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="owner" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StructContainsNonValueType::owner" OverloadKey="::vl::workflow::analyzer::WfErrors::StructContainsNonValueType(* WfStructMember,* WfStructDeclaration)::owner" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStructDeclaration" Name="WfStructDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStructDeclaration@s:vl.workflow.WfStructDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StructRecursivelyIncludeItself" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StructRecursivelyIncludeItself" OverloadKey="::vl::workflow::analyzer::WfErrors::StructRecursivelyIncludeItself(* WfStructDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StructRecursivelyIncludeItself::node" OverloadKey="::vl::workflow::analyzer::WfErrors::StructRecursivelyIncludeItself(* WfStructDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStructDeclaration" Name="WfStructDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStructDeclaration@s:vl.workflow.WfStructDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="tds" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StructRecursivelyIncludeItself::tds" OverloadKey="::vl::workflow::analyzer::WfErrors::StructRecursivelyIncludeItself(* WfStructDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)::tds" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection@ns:vl.reflection" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedStructMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedStructMember" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedStructMember(* WfStructMember,* WfStructDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedStructMember::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedStructMember(* WfStructMember,* WfStructDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStructMember" Name="WfStructMember">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStructMember@s:vl.workflow.WfStructMember" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="owner" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedStructMember::owner" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedStructMember(* WfStructMember,* WfStructDeclaration)::owner" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStructDeclaration" Name="WfStructDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStructDeclaration@s:vl.workflow.WfStructDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AttributeNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AttributeNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::AttributeNotExists(* WfAttribute)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AttributeNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::AttributeNotExists(* WfAttribute)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAttribute" Name="WfAttribute">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAttribute@s:vl.workflow.WfAttribute" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AttributeMissValue" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AttributeMissValue" OverloadKey="::vl::workflow::analyzer::WfErrors::AttributeMissValue(* WfAttribute)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AttributeMissValue::node" OverloadKey="::vl::workflow::analyzer::WfErrors::AttributeMissValue(* WfAttribute)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAttribute" Name="WfAttribute">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAttribute@s:vl.workflow.WfAttribute" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StateMachineClassNotInheritFromStateMachine" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateMachineClassNotInheritFromStateMachine" OverloadKey="::vl::workflow::analyzer::WfErrors::StateMachineClassNotInheritFromStateMachine(* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::StateMachineClassNotInheritFromStateMachine::node" OverloadKey="::vl::workflow::analyzer::WfErrors::StateMachineClassNotInheritFromStateMachine(* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MissingDefaultState" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::MissingDefaultState" OverloadKey="::vl::workflow::analyzer::WfErrors::MissingDefaultState(* WfStateMachineDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::MissingDefaultState::node" OverloadKey="::vl::workflow::analyzer::WfErrors::MissingDefaultState(* WfStateMachineDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStateMachineDeclaration" Name="WfStateMachineDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStateMachineDeclaration@s:vl.workflow.WfStateMachineDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongUsingPathWildCard" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongUsingPathWildCard" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongUsingPathWildCard(* WfModuleUsingPath)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongUsingPathWildCard::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongUsingPathWildCard(* WfModuleUsingPath)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfModuleUsingPath" Name="WfModuleUsingPath">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfModuleUsingPath@s:vl.workflow.WfModuleUsingPath" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TopQualifiedSymbolNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TopQualifiedSymbolNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::TopQualifiedSymbolNotExists(* parsing::ParsingTreeCustomBase,&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TopQualifiedSymbolNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TopQualifiedSymbolNotExists(* parsing::ParsingTreeCustomBase,&amp; const WString)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TopQualifiedSymbolNotExists::name" OverloadKey="::vl::workflow::analyzer::WfErrors::TopQualifiedSymbolNotExists(* parsing::ParsingTreeCustomBase,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ChildSymbolNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ChildSymbolNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::ChildSymbolNotExists(* parsing::ParsingTreeCustomBase,Ptr&lt;WfLexicalScopeName&gt;,&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ChildSymbolNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ChildSymbolNotExists(* parsing::ParsingTreeCustomBase,Ptr&lt;WfLexicalScopeName&gt;,&amp; const WString)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="scopeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ChildSymbolNotExists::scopeName" OverloadKey="::vl::workflow::analyzer::WfErrors::ChildSymbolNotExists(* parsing::ParsingTreeCustomBase,Ptr&lt;WfLexicalScopeName&gt;,&amp; const WString)::scopeName" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::WfLexicalScopeName" Name="WfLexicalScopeName">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::analyzer::WfLexicalScopeName@s:vl.workflow.analyzer.WfLexicalScopeName" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ChildSymbolNotExists::name" OverloadKey="::vl::workflow::analyzer::WfErrors::ChildSymbolNotExists(* parsing::ParsingTreeCustomBase,Ptr&lt;WfLexicalScopeName&gt;,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MemberNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::MemberNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::MemberNotExists(* parsing::ParsingTreeCustomBase,* reflection::description::ITypeDescriptor,&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::MemberNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::MemberNotExists(* parsing::ParsingTreeCustomBase,* reflection::description::ITypeDescriptor,&amp; const WString)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::MemberNotExists::typeDescriptor" OverloadKey="::vl::workflow::analyzer::WfErrors::MemberNotExists(* parsing::ParsingTreeCustomBase,* reflection::description::ITypeDescriptor,&amp; const WString)::typeDescriptor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::MemberNotExists::name" OverloadKey="::vl::workflow::analyzer::WfErrors::MemberNotExists(* parsing::ParsingTreeCustomBase,* reflection::description::ITypeDescriptor,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReferenceNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ReferenceNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::ReferenceNotExists(* parsing::ParsingTreeCustomBase,&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ReferenceNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ReferenceNotExists(* parsing::ParsingTreeCustomBase,&amp; const WString)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ReferenceNotExists::name" OverloadKey="::vl::workflow::analyzer::WfErrors::ReferenceNotExists(* parsing::ParsingTreeCustomBase,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TooManyTargets" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyTargets" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyTargets(* parsing::ParsingTreeCustomBase,&amp; collections::List&lt;ResolveExpressionResult&gt;,&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyTargets::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyTargets(* parsing::ParsingTreeCustomBase,&amp; collections::List&lt;ResolveExpressionResult&gt;,&amp; const WString)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="results" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyTargets::results" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyTargets(* parsing::ParsingTreeCustomBase,&amp; collections::List&lt;ResolveExpressionResult&gt;,&amp; const WString)::results" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::analyzer::ResolveExpressionResult" Name="ResolveExpressionResult">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::analyzer::ResolveExpressionResult@s:vl.workflow.analyzer.ResolveExpressionResult" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyTargets::name" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyTargets(* parsing::ParsingTreeCustomBase,&amp; collections::List&lt;ResolveExpressionResult&gt;,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EnumItemNotExists" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EnumItemNotExists" OverloadKey="::vl::workflow::analyzer::WfErrors::EnumItemNotExists(* parsing::ParsingTreeCustomBase,* reflection::description::ITypeDescriptor,&amp; const WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EnumItemNotExists::node" OverloadKey="::vl::workflow::analyzer::WfErrors::EnumItemNotExists(* parsing::ParsingTreeCustomBase,* reflection::description::ITypeDescriptor,&amp; const WString)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::parsing@ns:vl.parsing" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="typeDescriptor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EnumItemNotExists::typeDescriptor" OverloadKey="::vl::workflow::analyzer::WfErrors::EnumItemNotExists(* parsing::ParsingTreeCustomBase,* reflection::description::ITypeDescriptor,&amp; const WString)::typeDescriptor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="name" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::EnumItemNotExists::name" OverloadKey="::vl::workflow::analyzer::WfErrors::EnumItemNotExists(* parsing::ParsingTreeCustomBase,* reflection::description::ITypeDescriptor,&amp; const WString)::name" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongClassMemberConfig" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongClassMemberConfig" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongClassMemberConfig(* WfDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongClassMemberConfig::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongClassMemberConfig(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="FunctionInNewTypeExpressionCannotBeStatic" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionInNewTypeExpressionCannotBeStatic" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionInNewTypeExpressionCannotBeStatic(* WfDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::FunctionInNewTypeExpressionCannotBeStatic::node" OverloadKey="::vl::workflow::analyzer::WfErrors::FunctionInNewTypeExpressionCannotBeStatic(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AutoPropertyCannotBeNormalOutsideOfClass" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeNormalOutsideOfClass" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeNormalOutsideOfClass(* WfDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeNormalOutsideOfClass::node" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeNormalOutsideOfClass(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AutoPropertyCannotBeStatic" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeStatic" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeStatic(* WfDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeStatic::node" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeStatic(* WfDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongClassMember" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongClassMember" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongClassMember(* WfNamespaceDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongClassMember::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongClassMember(* WfNamespaceDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNamespaceDeclaration" Name="WfNamespaceDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNamespaceDeclaration@s:vl.workflow.WfNamespaceDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PropertyGetterNotFound" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyGetterNotFound" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyGetterNotFound(* WfPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyGetterNotFound::node" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyGetterNotFound(* WfPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyGetterNotFound::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyGetterNotFound(* WfPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PropertySetterNotFound" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertySetterNotFound" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertySetterNotFound(* WfPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertySetterNotFound::node" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertySetterNotFound(* WfPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertySetterNotFound::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertySetterNotFound(* WfPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PropertyEventNotFound" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyEventNotFound" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyEventNotFound(* WfPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyEventNotFound::node" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyEventNotFound(* WfPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyEventNotFound::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyEventNotFound(* WfPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TooManyPropertyGetter" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyGetter" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyGetter(* WfPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyGetter::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyGetter(* WfPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyGetter::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyGetter(* WfPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TooManyPropertySetter" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertySetter" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertySetter(* WfPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertySetter::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertySetter(* WfPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertySetter::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertySetter(* WfPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TooManyPropertyEvent" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyEvent" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyEvent(* WfPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyEvent::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyEvent(* WfPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyEvent::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyPropertyEvent(* WfPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PropertyGetterTypeMismatched" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyGetterTypeMismatched" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyGetterTypeMismatched(* WfPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyGetterTypeMismatched::node" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyGetterTypeMismatched(* WfPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertyGetterTypeMismatched::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertyGetterTypeMismatched(* WfPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="PropertySetterTypeMismatched" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertySetterTypeMismatched" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertySetterTypeMismatched(* WfPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertySetterTypeMismatched::node" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertySetterTypeMismatched(* WfPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::PropertySetterTypeMismatched::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::PropertySetterTypeMismatched(* WfPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongBaseType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseType" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseType(* WfClassDeclaration,* WfType)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseType(* WfClassDeclaration,* WfType)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseType::type" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseType(* WfClassDeclaration,* WfType)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongBaseTypeOfClass" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfClass" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfClass(* WfClassDeclaration,* reflection::description::ITypeDescriptor)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfClass::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfClass(* WfClassDeclaration,* reflection::description::ITypeDescriptor)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfClass::type" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfClass(* WfClassDeclaration,* reflection::description::ITypeDescriptor)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongBaseTypeOfInterface" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfInterface" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfInterface(* WfClassDeclaration,* reflection::description::ITypeDescriptor)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfInterface::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfInterface(* WfClassDeclaration,* reflection::description::ITypeDescriptor)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfInterface::type" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseTypeOfInterface(* WfClassDeclaration,* reflection::description::ITypeDescriptor)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongInterfaceBaseType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceBaseType" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceBaseType(* WfClassDeclaration,* reflection::description::ITypeDescriptor)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceBaseType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceBaseType(* WfClassDeclaration,* reflection::description::ITypeDescriptor)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceBaseType::type" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongInterfaceBaseType(* WfClassDeclaration,* reflection::description::ITypeDescriptor)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ClassWithInterfaceConstructor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ClassWithInterfaceConstructor" OverloadKey="::vl::workflow::analyzer::WfErrors::ClassWithInterfaceConstructor(* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ClassWithInterfaceConstructor::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ClassWithInterfaceConstructor(* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="OverrideShouldImplementInterfaceMethod" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OverrideShouldImplementInterfaceMethod" OverloadKey="::vl::workflow::analyzer::WfErrors::OverrideShouldImplementInterfaceMethod(* WfFunctionDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OverrideShouldImplementInterfaceMethod::node" OverloadKey="::vl::workflow::analyzer::WfErrors::OverrideShouldImplementInterfaceMethod(* WfFunctionDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionDeclaration" Name="WfFunctionDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFunctionDeclaration@s:vl.workflow.WfFunctionDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="OverrideShouldImplementInterfaceMethod" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OverrideShouldImplementInterfaceMethod" OverloadKey="::vl::workflow::analyzer::WfErrors::OverrideShouldImplementInterfaceMethod(* WfAutoPropertyDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::OverrideShouldImplementInterfaceMethod::node" OverloadKey="::vl::workflow::analyzer::WfErrors::OverrideShouldImplementInterfaceMethod(* WfAutoPropertyDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAutoPropertyDeclaration" Name="WfAutoPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAutoPropertyDeclaration@s:vl.workflow.WfAutoPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MissingFieldType" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::MissingFieldType" OverloadKey="::vl::workflow::analyzer::WfErrors::MissingFieldType(* WfVariableDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::MissingFieldType::node" OverloadKey="::vl::workflow::analyzer::WfErrors::MissingFieldType(* WfVariableDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVariableDeclaration" Name="WfVariableDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVariableDeclaration@s:vl.workflow.WfVariableDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedBaseClass" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseClass" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseClass(* WfClassDeclaration,* reflection::description::ITypeDescriptor)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseClass::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseClass(* WfClassDeclaration,* reflection::description::ITypeDescriptor)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseClass::type" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseClass(* WfClassDeclaration,* reflection::description::ITypeDescriptor)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ClassRecursiveInheritance" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ClassRecursiveInheritance" OverloadKey="::vl::workflow::analyzer::WfErrors::ClassRecursiveInheritance(* WfClassDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ClassRecursiveInheritance::node" OverloadKey="::vl::workflow::analyzer::WfErrors::ClassRecursiveInheritance(* WfClassDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="tds" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::ClassRecursiveInheritance::tds" OverloadKey="::vl::workflow::analyzer::WfErrors::ClassRecursiveInheritance(* WfClassDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)::tds" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection@ns:vl.reflection" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InterfaceRecursiveInheritance" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceRecursiveInheritance" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceRecursiveInheritance(* WfClassDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceRecursiveInheritance::node" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceRecursiveInheritance(* WfClassDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="tds" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::InterfaceRecursiveInheritance::tds" OverloadKey="::vl::workflow::analyzer::WfErrors::InterfaceRecursiveInheritance(* WfClassDeclaration,&amp; collections::List&lt;* reflection::description::ITypeDescriptor&gt;)::tds" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <DecorateTypeDecl Decoration="Pointer">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection@ns:vl.reflection" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WrongBaseConstructorCall" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseConstructorCall" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseConstructorCall(* WfBaseConstructorCall,* reflection::description::ITypeDescriptor)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseConstructorCall::node" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseConstructorCall(* WfBaseConstructorCall,* reflection::description::ITypeDescriptor)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBaseConstructorCall" Name="WfBaseConstructorCall">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBaseConstructorCall@s:vl.workflow.WfBaseConstructorCall" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::WrongBaseConstructorCall::type" OverloadKey="::vl::workflow::analyzer::WfErrors::WrongBaseConstructorCall(* WfBaseConstructorCall,* reflection::description::ITypeDescriptor)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DuplicatedBaseConstructorCall" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseConstructorCall" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseConstructorCall(* WfBaseConstructorCall,* reflection::description::ITypeDescriptor)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseConstructorCall::node" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseConstructorCall(* WfBaseConstructorCall,* reflection::description::ITypeDescriptor)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBaseConstructorCall" Name="WfBaseConstructorCall">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBaseConstructorCall@s:vl.workflow.WfBaseConstructorCall" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="type" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseConstructorCall::type" OverloadKey="::vl::workflow::analyzer::WfErrors::DuplicatedBaseConstructorCall(* WfBaseConstructorCall,* reflection::description::ITypeDescriptor)::type" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection@ns:vl.reflection" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="TooManyDestructor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyDestructor" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyDestructor(* WfDestructorDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyDestructor::node" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyDestructor(* WfDestructorDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDestructorDeclaration" Name="WfDestructorDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDestructorDeclaration@s:vl.workflow.WfDestructorDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::TooManyDestructor::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::TooManyDestructor(* WfDestructorDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AutoPropertyShouldBeInitialized" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyShouldBeInitialized" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyShouldBeInitialized(* WfAutoPropertyDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyShouldBeInitialized::node" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyShouldBeInitialized(* WfAutoPropertyDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAutoPropertyDeclaration" Name="WfAutoPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAutoPropertyDeclaration@s:vl.workflow.WfAutoPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AutoPropertyCannotBeInitializedInInterface" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeInitializedInInterface" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeInitializedInInterface(* WfAutoPropertyDeclaration,* WfClassDeclaration)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeInitializedInInterface::node" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeInitializedInInterface(* WfAutoPropertyDeclaration,* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAutoPropertyDeclaration" Name="WfAutoPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAutoPropertyDeclaration@s:vl.workflow.WfAutoPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="classDecl" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeInitializedInInterface::classDecl" OverloadKey="::vl::workflow::analyzer::WfErrors::AutoPropertyCannotBeInitializedInInterface(* WfAutoPropertyDeclaration,* WfClassDeclaration)::classDecl" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>