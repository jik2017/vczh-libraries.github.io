<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IValueEnumerator}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerator&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerator&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerator&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerator&gt;::GetCurrent()" DisplayName="GetCurrent method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerator&gt;::GetIndex()" DisplayName="GetIndex method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerator&gt;::Next()" DisplayName="Next method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IValueEnumerable}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerable&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerable&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerable&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueEnumerable&gt;::CreateEnumerator()" DisplayName="CreateEnumerator method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IValueReadonlyList}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyList&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyList&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyList&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyList&gt;::GetCount()" DisplayName="GetCount method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyList&gt;::Get(vint)" DisplayName="Get method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyList&gt;::Contains(&amp; const Value)" DisplayName="Contains method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyList&gt;::IndexOf(&amp; const Value)" DisplayName="IndexOf method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IValueList}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;::Set(vint,&amp; const Value)" DisplayName="Set method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;::Add(&amp; const Value)" DisplayName="Add method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;::Insert(vint,&amp; const Value)" DisplayName="Insert method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;::Remove(&amp; const Value)" DisplayName="Remove method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;::RemoveAt(vint)" DisplayName="RemoveAt method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueList&gt;::Clear()" DisplayName="Clear method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IValueObservableList}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueObservableList&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueObservableList&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueObservableList&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IValueReadonlyDictionary}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyDictionary&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyDictionary&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyDictionary&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyDictionary&gt;::GetKeys()" DisplayName="GetKeys method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyDictionary&gt;::GetValues()" DisplayName="GetValues method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyDictionary&gt;::GetCount()" DisplayName="GetCount method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueReadonlyDictionary&gt;::Get(&amp; const Value)" DisplayName="Get method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IValueDictionary}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueDictionary&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueDictionary&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueDictionary&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueDictionary&gt;::Set(&amp; const Value,&amp; const Value)" DisplayName="Set method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueDictionary&gt;::Remove(&amp; const Value)" DisplayName="Remove method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueDictionary&gt;::Clear()" DisplayName="Clear method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IValueSubscription}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueSubscription&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueSubscription&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueSubscription&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueSubscription&gt;::Open()" DisplayName="Open method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueSubscription&gt;::Update()" DisplayName="Update method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IValueSubscription&gt;::Close()" DisplayName="Close method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{ICoroutine}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;ICoroutine&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;ICoroutine&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;ICoroutine&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;ICoroutine&gt;::Resume(bool,Ptr&lt;CoroutineResult&gt;)" DisplayName="Resume method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;ICoroutine&gt;::GetFailure()" DisplayName="GetFailure method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;ICoroutine&gt;::GetStatus()" DisplayName="GetStatus method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{IAsync}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IAsync&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IAsync&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IAsync&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IAsync&gt;::GetStatus()" DisplayName="GetStatus method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;IAsync&gt;::Execute(&amp; const Func&lt;function (Ptr&lt;CoroutineResult&gt;) : void&gt;)" DisplayName="Execute method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.parsing.json.JsonNode.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::Visit(* vl::parsing::json::JsonLiteral)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::Visit(* vl::parsing::json::JsonString)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::Visit(* vl::parsing::json::JsonNumber)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::Visit(* vl::parsing::json::JsonArray)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::Visit(* vl::parsing::json::JsonObjectField)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::Visit(* vl::parsing::json::JsonObject)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.parsing.xml.XmlNode.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::Visit(* vl::parsing::xml::XmlText)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::Visit(* vl::parsing::xml::XmlCData)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::Visit(* vl::parsing::xml::XmlAttribute)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::Visit(* vl::parsing::xml::XmlComment)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::Visit(* vl::parsing::xml::XmlElement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::Visit(* vl::parsing::xml::XmlInstruction)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::Visit(* vl::parsing::xml::XmlDocument)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfType.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfPredefinedType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfTopQualifiedType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfReferenceType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfRawPointerType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfSharedPointerType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfNullableType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfEnumerableType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfMapType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfObservableListType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfFunctionType)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfType::IVisitor&gt;::Visit(* vl::workflow::WfChildType)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfExpression.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfThisExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfTopQualifiedExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfReferenceExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfOrderedNameExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfOrderedLambdaExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfMemberExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfChildExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfLiteralExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfFloatingExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfIntegerExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfStringExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfUnaryExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfBinaryExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfLetExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfIfExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfRangeExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfSetTestingExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfConstructorExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfInferExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfTypeCastingExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfTypeTestingExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfTypeOfTypeExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfTypeOfExpressionExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfAttachEventExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfDetachEventExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfObserveExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfCallExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfFunctionExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfNewClassExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfNewInterfaceExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfExpression::IVisitor&gt;::Visit(* vl::workflow::WfVirtualExpression)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfStatement.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfBreakStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfContinueStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfReturnStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfDeleteStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfRaiseExceptionStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfIfStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfWhileStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfTryStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfBlockStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfVariableStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfExpressionStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfVirtualStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfStatement::IVisitor&gt;::Visit(* vl::workflow::WfCoroutineStatement)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfDeclaration.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfNamespaceDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfFunctionDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfVariableDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfEventDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfPropertyDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfConstructorDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfDestructorDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfClassDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfEnumDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfStructDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfVirtualDeclaration)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfVirtualDeclaration.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualDeclaration::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualDeclaration::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualDeclaration::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfAutoPropertyDeclaration)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualDeclaration::IVisitor&gt;::Visit(* vl::workflow::WfCastResultInterfaceDeclaration)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfVirtualStatement.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualStatement::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualStatement::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualStatement::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualStatement::IVisitor&gt;::Visit(* vl::workflow::WfForEachStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualStatement::IVisitor&gt;::Visit(* vl::workflow::WfSwitchStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualStatement::IVisitor&gt;::Visit(* vl::workflow::WfCoProviderStatement)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfCoroutineStatement.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfCoroutineStatement::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfCoroutineStatement::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfCoroutineStatement::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfCoroutineStatement::IVisitor&gt;::Visit(* vl::workflow::WfCoPauseStatement)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfCoroutineStatement::IVisitor&gt;::Visit(* vl::workflow::WfCoOperatorStatement)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfVirtualExpression.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;::Visit(* vl::workflow::WfBindExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;::Visit(* vl::workflow::WfFormatExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;::Visit(* vl::workflow::WfNewCoroutineExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;::Visit(* vl::workflow::WfMixinCastExpression)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;::Visit(* vl::workflow::WfExpectedTypeCastExpression)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.workflow.WfModuleUsingFragment.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfModuleUsingFragment::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfModuleUsingFragment::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfModuleUsingFragment::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfModuleUsingFragment::IVisitor&gt;::Visit(* vl::workflow::WfModuleUsingNameFragment)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::workflow::WfModuleUsingFragment::IVisitor&gt;::Visit(* vl::workflow::WfModuleUsingWildCardFragment)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.compositions.IGuiGraphicsAnimation}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;::GetTotalLength()" DisplayName="GetTotalLength method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;::GetCurrentPosition()" DisplayName="GetCurrentPosition method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;::Play(vint,vint)" DisplayName="Play method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;::Stop()" DisplayName="Stop method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.compositions.IGuiAxis}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::RealSizeToVirtualSize(presentation::Size)" DisplayName="RealSizeToVirtualSize method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::VirtualSizeToRealSize(presentation::Size)" DisplayName="VirtualSizeToRealSize method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::RealPointToVirtualPoint(presentation::Size,presentation::Point)" DisplayName="RealPointToVirtualPoint method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::VirtualPointToRealPoint(presentation::Size,presentation::Point)" DisplayName="VirtualPointToRealPoint method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::RealRectToVirtualRect(presentation::Size,presentation::Rect)" DisplayName="RealRectToVirtualRect method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::VirtualRectToRealRect(presentation::Size,presentation::Rect)" DisplayName="VirtualRectToRealRect method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::RealMarginToVirtualMargin(presentation::Margin)" DisplayName="RealMarginToVirtualMargin method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::VirtualMarginToRealMargin(presentation::Margin)" DisplayName="VirtualMarginToRealMargin method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::compositions::IGuiAxis&gt;::RealKeyDirectionToVirtualKeyDirection(presentation::compositions::KeyDirection)" DisplayName="RealKeyDirectionToVirtualKeyDirection method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.GuiListControl.IItemProviderCallback}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProviderCallback&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProviderCallback&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProviderCallback&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProviderCallback&gt;::OnAttached(* presentation::controls::GuiListControl::IItemProvider)" DisplayName="OnAttached method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProviderCallback&gt;::OnItemModified(vint,vint,vint)" DisplayName="OnItemModified method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.GuiListControl.IItemProvider}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::AttachCallback(* presentation::controls::GuiListControl::IItemProviderCallback)" DisplayName="AttachCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::DetachCallback(* presentation::controls::GuiListControl::IItemProviderCallback)" DisplayName="DetachCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::PushEditing()" DisplayName="PushEditing method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::PopEditing()" DisplayName="PopEditing method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::IsEditing()" DisplayName="IsEditing method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::Count()" DisplayName="Count method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::GetTextValue(vint)" DisplayName="GetTextValue method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::GetBindingValue(vint)" DisplayName="GetBindingValue method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::RequestView(&amp; const WString)" DisplayName="RequestView method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.GuiListControl.IItemArranger}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::AttachListControl(* presentation::controls::GuiListControl)" DisplayName="AttachListControl method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::DetachListControl()" DisplayName="DetachListControl method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::GetCallback()" DisplayName="GetCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::SetCallback(* presentation::controls::GuiListControl::IItemArrangerCallback)" DisplayName="SetCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::GetTotalSize()" DisplayName="GetTotalSize method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::GetVisibleStyle(vint)" DisplayName="GetVisibleStyle method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::GetVisibleIndex(* presentation::controls::GuiListControl::ItemStyle)" DisplayName="GetVisibleIndex method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::OnViewChanged(presentation::Rect)" DisplayName="OnViewChanged method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::FindItem(vint,presentation::compositions::KeyDirection)" DisplayName="FindItem method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::EnsureItemVisible(vint)" DisplayName="EnsureItemVisible method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::GetAdoptedSize(presentation::Size)" DisplayName="GetAdoptedSize method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.list.ITextItemView}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ITextItemView&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ITextItemView&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ITextItemView&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ITextItemView&gt;::GetChecked(vint)" DisplayName="GetChecked method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ITextItemView&gt;::SetChecked(vint,bool)" DisplayName="SetChecked method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.list.IListViewItemView}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::GetSmallImage(vint)" DisplayName="GetSmallImage method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::GetLargeImage(vint)" DisplayName="GetLargeImage method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::GetText(vint)" DisplayName="GetText method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::GetSubItem(vint,vint)" DisplayName="GetSubItem method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::GetDataColumnCount()" DisplayName="GetDataColumnCount method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::GetDataColumn(vint)" DisplayName="GetDataColumn method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::GetColumnCount()" DisplayName="GetColumnCount method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IListViewItemView&gt;::GetColumnText(vint)" DisplayName="GetColumnText method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.list.ListViewColumnItemArranger.IColumnItemView}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::AttachCallback(* presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback)" DisplayName="AttachCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::DetachCallback(* presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback)" DisplayName="DetachCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::GetColumnSize(vint)" DisplayName="GetColumnSize method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::SetColumnSize(vint,vint)" DisplayName="SetColumnSize method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::GetDropdownPopup(vint)" DisplayName="GetDropdownPopup method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::GetSortingState(vint)" DisplayName="GetSortingState method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.tree.INodeProvider}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::GetExpanding()" DisplayName="GetExpanding method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::SetExpanding(bool)" DisplayName="SetExpanding method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::CalculateTotalVisibleNodes()" DisplayName="CalculateTotalVisibleNodes method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::GetChildCount()" DisplayName="GetChildCount method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::GetParent()" DisplayName="GetParent method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::GetChild(vint)" DisplayName="GetChild method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::Increase()" DisplayName="Increase method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeProvider&gt;::Release()" DisplayName="Release method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.tree.INodeRootProvider}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::GetRootNode()" DisplayName="GetRootNode method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::CanGetNodeByVisibleIndex()" DisplayName="CanGetNodeByVisibleIndex method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::GetNodeByVisibleIndex(vint)" DisplayName="GetNodeByVisibleIndex method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::AttachCallback(* presentation::controls::tree::INodeProviderCallback)" DisplayName="AttachCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::DetachCallback(* presentation::controls::tree::INodeProviderCallback)" DisplayName="DetachCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::GetTextValue(* presentation::controls::tree::INodeProvider)" DisplayName="GetTextValue method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::GetBindingValue(* presentation::controls::tree::INodeProvider)" DisplayName="GetBindingValue method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeRootProvider&gt;::RequestView(&amp; const WString)" DisplayName="RequestView method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.tree.INodeItemView}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeItemView&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeItemView&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeItemView&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeItemView&gt;::RequestNode(vint)" DisplayName="RequestNode method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeItemView&gt;::ReleaseNode(* presentation::controls::tree::INodeProvider)" DisplayName="ReleaseNode method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::INodeItemView&gt;::CalculateNodeVisibilityIndex(* presentation::controls::tree::INodeProvider)" DisplayName="CalculateNodeVisibilityIndex method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.tree.ITreeViewItemView}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::ITreeViewItemView&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::ITreeViewItemView&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::ITreeViewItemView&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::tree::ITreeViewItemView&gt;::GetNodeImage(* presentation::controls::tree::INodeProvider)" DisplayName="GetNodeImage method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.list.IDataGridContext}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridContext&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridContext&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridContext&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridContext&gt;::GetItemProvider()" DisplayName="GetItemProvider method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridContext&gt;::GetListViewStyleProvider()" DisplayName="GetListViewStyleProvider method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridContext&gt;::GetViewModelContext()" DisplayName="GetViewModelContext method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridContext&gt;::RequestSaveData()" DisplayName="RequestSaveData method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.list.IDataGridView}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::GetViewModelContext()" DisplayName="GetViewModelContext method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::IsColumnSortable(vint)" DisplayName="IsColumnSortable method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::SortByColumn(vint,bool)" DisplayName="SortByColumn method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::GetSortedColumn()" DisplayName="GetSortedColumn method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::IsSortOrderAscending()" DisplayName="IsSortOrderAscending method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::GetCellSpan(vint,vint)" DisplayName="GetCellSpan method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::GetCellDataVisualizerFactory(vint,vint)" DisplayName="GetCellDataVisualizerFactory method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::GetCellDataEditorFactory(vint,vint)" DisplayName="GetCellDataEditorFactory method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::GetBindingCellValue(vint,vint)" DisplayName="GetBindingCellValue method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataGridView&gt;::SetBindingCellValue(vint,vint,&amp; const Value)" DisplayName="SetBindingCellValue method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.list.IDataProcessorCallback}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataProcessorCallback&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataProcessorCallback&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataProcessorCallback&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataProcessorCallback&gt;::GetItemProvider()" DisplayName="GetItemProvider method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataProcessorCallback&gt;::OnProcessorChanged()" DisplayName="OnProcessorChanged method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.list.IDataFilter}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataFilter&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataFilter&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataFilter&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataFilter&gt;::SetCallback(* presentation::controls::list::IDataProcessorCallback)" DisplayName="SetCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataFilter&gt;::Filter(&amp; const Value)" DisplayName="Filter method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{presentation.controls.list.IDataSorter}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataSorter&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataSorter&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataSorter&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataSorter&gt;::SetCallback(* presentation::controls::list::IDataProcessorCallback)" DisplayName="SetCallback method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;presentation::controls::list::IDataSorter&gt;::Compare(&amp; const Value,&amp; const Value)" DisplayName="Compare method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
  <OverloadingSymbolTree Key="vl.reflection.description.ValueInterfaceProxy`0{vl.presentation.GuiIqQuery.IVisitor}">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::presentation::GuiIqQuery::IVisitor&gt;" DisplayName="ValueInterfaceProxy class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::presentation::GuiIqQuery::IVisitor&gt;::_interface_proxy_InterfaceType" DisplayName="_interface_proxy_InterfaceType typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::presentation::GuiIqQuery::IVisitor&gt;::Create(Ptr&lt;IValueInterfaceProxy&gt;)" DisplayName="Create method" Doc="false" />
        <Overloads DisplayName="Visit method">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::presentation::GuiIqQuery::IVisitor&gt;::Visit(* vl::presentation::GuiIqPrimaryQuery)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::presentation::GuiIqQuery::IVisitor&gt;::Visit(* vl::presentation::GuiIqCascadeQuery)" DisplayName="Visit method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::ValueInterfaceProxy`0&lt;vl::presentation::GuiIqQuery::IVisitor&gt;::Visit(* vl::presentation::GuiIqSetQuery)" DisplayName="Visit method" Doc="false" />
        </Overloads>
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>