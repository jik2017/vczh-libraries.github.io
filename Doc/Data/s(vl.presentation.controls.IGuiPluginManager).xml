<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.IGuiPluginManager">
    <ClassDecl Access="Public" Name="IGuiPluginManager" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiPluginManager" OverloadKey="::vl::presentation::controls::IGuiPluginManager" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Represents a plugin manager.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="AddPlugin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiPluginManager::AddPlugin" OverloadKey="::vl::presentation::controls::IGuiPluginManager::AddPlugin(Ptr&lt;IGuiPlugin&gt;)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Add a plugin before &lt;links&gt;&lt;link cref="::vl::presentation::controls::IGuiPluginManager::Load()@s:vl.presentation.controls.IGuiPluginManager" /&gt;&lt;/links&gt; is called.&lt;/summary&gt;
  &lt;param name="plugin"&gt;The plugin.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="plugin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiPluginManager::AddPlugin::plugin" OverloadKey="::vl::presentation::controls::IGuiPluginManager::AddPlugin(Ptr&lt;IGuiPlugin&gt;)::plugin" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiPlugin" Name="IGuiPlugin">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::IGuiPlugin@s:vl.presentation.controls.IGuiPlugin" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Load" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiPluginManager::Load" OverloadKey="::vl::presentation::controls::IGuiPluginManager::Load()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Load all plugins, and check if dependencies of all plugins are ready.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Unload" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiPluginManager::Unload" OverloadKey="::vl::presentation::controls::IGuiPluginManager::Unload()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Unload all plugins.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsLoaded" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiPluginManager::IsLoaded" OverloadKey="::vl::presentation::controls::IGuiPluginManager::IsLoaded()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;returns&gt;Returns true if all plugins are loaded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiPluginManager" Name="IGuiPluginManager">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::IGuiPluginManager@s:vl.presentation.controls.IGuiPluginManager" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>