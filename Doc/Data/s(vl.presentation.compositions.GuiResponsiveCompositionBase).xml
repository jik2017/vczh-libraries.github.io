<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.compositions.GuiResponsiveCompositionBase">
    <ClassDecl Access="Public" Name="GuiResponsiveCompositionBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Base class for responsive layout compositions.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="responsiveParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::responsiveParent" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::responsiveParent" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase" Name="GuiResponsiveCompositionBase">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiResponsiveCompositionBase@s:vl.presentation.compositions.GuiResponsiveCompositionBase" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="direction" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::direction" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::direction" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::ResponsiveDirection" Name="ResponsiveDirection">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::ResponsiveDirection@s:vl.presentation.compositions.ResponsiveDirection" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="OnParentLineChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnParentLineChanged" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnParentLineChanged()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnResponsiveChildInserted" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildInserted" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildInserted(* GuiResponsiveCompositionBase)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildInserted::child" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildInserted(* GuiResponsiveCompositionBase)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase" Name="GuiResponsiveCompositionBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiResponsiveCompositionBase@s:vl.presentation.compositions.GuiResponsiveCompositionBase" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnResponsiveChildRemoved" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildRemoved" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildRemoved(* GuiResponsiveCompositionBase)" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildRemoved::child" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildRemoved(* GuiResponsiveCompositionBase)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase" Name="GuiResponsiveCompositionBase">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiResponsiveCompositionBase@s:vl.presentation.compositions.GuiResponsiveCompositionBase" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnResponsiveChildLevelUpdated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildLevelUpdated" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::OnResponsiveChildLevelUpdated()" Virtual="Virtual" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiResponsiveCompositionBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::GuiResponsiveCompositionBase" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::GuiResponsiveCompositionBase()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiResponsiveCompositionBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::~GuiResponsiveCompositionBase" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::~GuiResponsiveCompositionBase()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <VarDecl Access="Public" Name="LevelCountChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::LevelCountChanged" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::LevelCountChanged" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;LevelCount changed event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="CurrentLevelChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::CurrentLevelChanged" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::CurrentLevelChanged" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;CurrentLevel chagned event.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNotifyEvent" Name="GuiNotifyEvent">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiNotifyEvent@s:vl.presentation.compositions.GuiNotifyEvent" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="GetLevelCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::GetLevelCount" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::GetLevelCount()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the level count. A level count represents how many views this composition carries.&lt;/summary&gt;
  &lt;returns&gt;The level count.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCurrentLevel" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::GetCurrentLevel" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::GetCurrentLevel()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the current level. Zero is the view with the smallest size.&lt;/summary&gt;
  &lt;returns&gt;The current level.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="LevelDown" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::LevelDown" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::LevelDown()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Switch to a smaller view.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="LevelUp" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::LevelUp" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::LevelUp()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Switch to a larger view.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetDirection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::GetDirection" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::GetDirection()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all supported directions. If all directions of a child &lt;links&gt;&lt;link cref="::vl::presentation::compositions::GuiResponsiveCompositionBase@s:vl.presentation.compositions.GuiResponsiveCompositionBase" /&gt;&lt;/links&gt; are not supported, its view will not be changed when the parent composition changes its view .&lt;/summary&gt;
  &lt;returns&gt;All supported directions.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::ResponsiveDirection" Name="ResponsiveDirection">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::ResponsiveDirection@s:vl.presentation.compositions.ResponsiveDirection" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetDirection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::SetDirection" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::SetDirection(ResponsiveDirection)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set all supported directions.&lt;/summary&gt;
  &lt;param name="value"&gt;All supported directions.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::SetDirection::value" OverloadKey="::vl::presentation::compositions::GuiResponsiveCompositionBase::SetDirection(ResponsiveDirection)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::ResponsiveDirection" Name="ResponsiveDirection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::ResponsiveDirection@s:vl.presentation.compositions.ResponsiveDirection" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiBoundsComposition" Name="GuiBoundsComposition">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiBoundsComposition@s:vl.presentation.compositions.GuiBoundsComposition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiResponsiveCompositionBase" Name="GuiResponsiveCompositionBase">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiResponsiveCompositionBase@s:vl.presentation.compositions.GuiResponsiveCompositionBase" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>