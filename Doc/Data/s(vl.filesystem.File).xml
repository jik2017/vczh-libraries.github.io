<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.filesystem.File">
    <ClassDecl Access="Public" Name="File" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File" OverloadKey="::vl::filesystem::File" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Representing a file reference.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Private" Name="filePath" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::filePath" OverloadKey="::vl::filesystem::File::filePath" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::filesystem::FilePath" Name="FilePath">
              <ReferencingOverloadKeys>
                <Key Value="::vl::filesystem::FilePath@s:vl.filesystem.FilePath" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="File" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::File" OverloadKey="::vl::filesystem::File::File()" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create an empty reference.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="File" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::File" OverloadKey="::vl::filesystem::File::File(&amp; const FilePath)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a reference to a specified file.&lt;/summary&gt;
  &lt;param name="_filePath"&gt;The specified file.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_filePath" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::File::_filePath" OverloadKey="::vl::filesystem::File::File(&amp; const FilePath)::_filePath" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::filesystem::FilePath" Name="FilePath">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::filesystem::FilePath@s:vl.filesystem.FilePath" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~File" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::~File" OverloadKey="::vl::filesystem::File::~File()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetFilePath" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::GetFilePath" OverloadKey="::vl::filesystem::File::GetFilePath()const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the file path of the file.&lt;/summary&gt;
  &lt;returns&gt;The file path.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::filesystem::FilePath" Name="FilePath">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::filesystem::FilePath@s:vl.filesystem.FilePath" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadAllTextWithEncodingTesting" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllTextWithEncodingTesting" OverloadKey="::vl::filesystem::File::ReadAllTextWithEncodingTesting(&amp; WString,&amp; stream::BomEncoder::Encoding,&amp; bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the content of the file as text with encoding testing.&lt;/summary&gt;
  &lt;returns&gt;Returns false if this operation succeeded.&lt;/returns&gt;
  &lt;param name="text"&gt;The content of the file.&lt;/param&gt;
  &lt;param name="encoding"&gt;The encoding.&lt;/param&gt;
  &lt;param name="containsBom"&gt;True if there is BOM.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllTextWithEncodingTesting::text" OverloadKey="::vl::filesystem::File::ReadAllTextWithEncodingTesting(&amp; WString,&amp; stream::BomEncoder::Encoding,&amp; bool)::text" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="encoding" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllTextWithEncodingTesting::encoding" OverloadKey="::vl::filesystem::File::ReadAllTextWithEncodingTesting(&amp; WString,&amp; stream::BomEncoder::Encoding,&amp; bool)::encoding" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::stream::BomEncoder::Encoding" Name="Encoding">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::BomEncoder::Encoding@s:vl.stream.BomEncoder" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <SubTypeDecl ReferencingNameKey="::vl::stream::BomEncoder" Name="BomEncoder">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::stream::BomEncoder@s:vl.stream.BomEncoder" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::stream" Name="stream">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::stream@ns:vl.stream" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="containsBom" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllTextWithEncodingTesting::containsBom" OverloadKey="::vl::filesystem::File::ReadAllTextWithEncodingTesting(&amp; WString,&amp; stream::BomEncoder::Encoding,&amp; bool)::containsBom" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl Name="bool" />
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadAllTextByBom" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllTextByBom" OverloadKey="::vl::filesystem::File::ReadAllTextByBom()const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the content of the file as text.&lt;/summary&gt;
  &lt;returns&gt;The content of the file.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadAllTextByBom" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllTextByBom" OverloadKey="::vl::filesystem::File::ReadAllTextByBom(&amp; WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the content of the file as text.&lt;/summary&gt;
  &lt;returns&gt;Returns false if this operation succeeded.&lt;/returns&gt;
  &lt;param name="text"&gt;The content of the file.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllTextByBom::text" OverloadKey="::vl::filesystem::File::ReadAllTextByBom(&amp; WString)const::text" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::WString@s:vl.WString" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReadAllLinesByBom" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllLinesByBom" OverloadKey="::vl::filesystem::File::ReadAllLinesByBom(&amp; collections::List&lt;WString&gt;)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the content of the file as text.&lt;/summary&gt;
  &lt;returns&gt;Returns false if this operation succeeded.&lt;/returns&gt;
  &lt;param name="lines"&gt;The content of the file.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="lines" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::ReadAllLinesByBom::lines" OverloadKey="::vl::filesystem::File::ReadAllLinesByBom(&amp; collections::List&lt;WString&gt;)const::lines" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteAllText" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::WriteAllText" OverloadKey="::vl::filesystem::File::WriteAllText(&amp; const WString,bool,stream::BomEncoder::Encoding)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write text to the file.&lt;/summary&gt;
  &lt;returns&gt;Returns false if this operation succeeded.&lt;/returns&gt;
  &lt;param name="text"&gt;The text to write.&lt;/param&gt;
  &lt;param name="bom"&gt;Set to true to add a corresponding BOM at the beginning of the file according to the encoding.&lt;/param&gt;
  &lt;param name="encoding"&gt;The text encoding.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="text" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::WriteAllText::text" OverloadKey="::vl::filesystem::File::WriteAllText(&amp; const WString,bool,stream::BomEncoder::Encoding)::text" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="bom" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::WriteAllText::bom" OverloadKey="::vl::filesystem::File::WriteAllText(&amp; const WString,bool,stream::BomEncoder::Encoding)::bom" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="encoding" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::WriteAllText::encoding" OverloadKey="::vl::filesystem::File::WriteAllText(&amp; const WString,bool,stream::BomEncoder::Encoding)::encoding" Static="False">
                  <Type>
                    <SubTypeDecl ReferencingNameKey="::vl::stream::BomEncoder::Encoding" Name="Encoding">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::BomEncoder::Encoding@s:vl.stream.BomEncoder" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::stream::BomEncoder" Name="BomEncoder">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::BomEncoder@s:vl.stream.BomEncoder" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::stream" Name="stream">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::stream@ns:vl.stream" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="WriteAllLines" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::WriteAllLines" OverloadKey="::vl::filesystem::File::WriteAllLines(&amp; collections::List&lt;WString&gt;,bool,stream::BomEncoder::Encoding)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Write text to the file.&lt;/summary&gt;
  &lt;returns&gt;Returns false if this operation succeeded.&lt;/returns&gt;
  &lt;param name="lines"&gt;The text to write.&lt;/param&gt;
  &lt;param name="bom"&gt;Set to true to add a corresponding BOM at the beginning of the file according to the encoding.&lt;/param&gt;
  &lt;param name="encoding"&gt;The text encoding.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="lines" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::WriteAllLines::lines" OverloadKey="::vl::filesystem::File::WriteAllLines(&amp; collections::List&lt;WString&gt;,bool,stream::BomEncoder::Encoding)::lines" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="bom" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::WriteAllLines::bom" OverloadKey="::vl::filesystem::File::WriteAllLines(&amp; collections::List&lt;WString&gt;,bool,stream::BomEncoder::Encoding)::bom" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="encoding" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::WriteAllLines::encoding" OverloadKey="::vl::filesystem::File::WriteAllLines(&amp; collections::List&lt;WString&gt;,bool,stream::BomEncoder::Encoding)::encoding" Static="False">
                  <Type>
                    <SubTypeDecl ReferencingNameKey="::vl::stream::BomEncoder::Encoding" Name="Encoding">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::stream::BomEncoder::Encoding@s:vl.stream.BomEncoder" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::stream::BomEncoder" Name="BomEncoder">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::stream::BomEncoder@s:vl.stream.BomEncoder" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::stream" Name="stream">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::stream@ns:vl.stream" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Exists" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::Exists" OverloadKey="::vl::filesystem::File::Exists()const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test does the file exist or not.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the file exists.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Delete" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::Delete" OverloadKey="::vl::filesystem::File::Delete()const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Delete the file.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Rename" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::Rename" OverloadKey="::vl::filesystem::File::Rename(&amp; const WString)const" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Rename the file in the same folder.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="newName"&gt;The new file name.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="newName" Tags="x64, Windows;x86, Windows" NameKey="::vl::filesystem::File::Rename::newName" OverloadKey="::vl::filesystem::File::Rename(&amp; const WString)const::newName" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>