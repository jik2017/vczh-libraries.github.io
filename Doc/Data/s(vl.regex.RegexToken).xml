<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.regex.RegexToken">
    <ClassDecl Access="Public" Name="RegexToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken" OverloadKey="::vl::regex::RegexToken" ClassType="Struct">
      <Document>&lt;Document&gt;
  &lt;summary&gt;A token.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::start" OverloadKey="::vl::regex::RegexToken::start" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Position in the input string.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="length" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::length" OverloadKey="::vl::regex::RegexToken::length" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Size of this token in characters.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="token" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::token" OverloadKey="::vl::regex::RegexToken::token" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The token id, begins at 0, represents the regular expression in the list that matches this token. -1 means this token is produced by an error.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="reading" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::reading" OverloadKey="::vl::regex::RegexToken::reading" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The pointer to where this token starts in the input string .&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl Name="wchar_t" />
                  </Element>
                </DecorateTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="codeIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::codeIndex" OverloadKey="::vl::regex::RegexToken::codeIndex" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The argument value from &lt;links&gt;&lt;link cref="::vl::regex::RegexLexer::Parse(&amp;amp; const WString,vint)const@s:vl.regex.RegexLexer" /&gt;&lt;/links&gt;.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="completeToken" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::completeToken" OverloadKey="::vl::regex::RegexToken::completeToken" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;True if this token is complete. False if this token does not end here.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="rowStart" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::rowStart" OverloadKey="::vl::regex::RegexToken::rowStart" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Row number of the first character, begins at 0.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="columnStart" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::columnStart" OverloadKey="::vl::regex::RegexToken::columnStart" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Column number of the first character, begins at 0.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="rowEnd" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::rowEnd" OverloadKey="::vl::regex::RegexToken::rowEnd" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Row number of the last character, begins at 0.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Public" Name="columnEnd" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::columnEnd" OverloadKey="::vl::regex::RegexToken::columnEnd" Static="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Column number of the last character, begins at 0.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::operator ==" OverloadKey="::vl::regex::RegexToken::operator ==(&amp; const RegexToken)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_token" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::operator ==::_token" OverloadKey="::vl::regex::RegexToken::operator ==(&amp; const RegexToken)const::_token" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::regex::RegexToken" Name="RegexToken">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::regex::RegexToken@s:vl.regex.RegexToken" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="operator ==" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::operator ==" OverloadKey="::vl::regex::RegexToken::operator ==(* const wchar_t)const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_token" Tags="x64, Windows;x86, Windows" NameKey="::vl::regex::RegexToken::operator ==::_token" OverloadKey="::vl::regex::RegexToken::operator ==(* const wchar_t)const::_token" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>