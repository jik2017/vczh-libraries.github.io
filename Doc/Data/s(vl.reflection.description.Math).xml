<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.Math">
    <ClassDecl Access="Public" Name="Math" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math" OverloadKey="::vl::reflection::description::Math" ClassType="Class">
      <Children>
        <FuncDecl Access="Public" Name="Abs" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs" OverloadKey="::vl::reflection::description::Math::Abs(vint8_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint8_t@s:vl.vint8_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs::value" OverloadKey="::vl::reflection::description::Math::Abs(vint8_t)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint8_t@s:vl.vint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Abs" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs" OverloadKey="::vl::reflection::description::Math::Abs(vint16_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint16_t@s:vl.vint16_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs::value" OverloadKey="::vl::reflection::description::Math::Abs(vint16_t)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint16_t@s:vl.vint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Abs" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs" OverloadKey="::vl::reflection::description::Math::Abs(vint32_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint32_t@s:vl.vint32_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs::value" OverloadKey="::vl::reflection::description::Math::Abs(vint32_t)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint32_t@s:vl.vint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Abs" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs" OverloadKey="::vl::reflection::description::Math::Abs(vint64_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint64_t@s:vl.vint64_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs::value" OverloadKey="::vl::reflection::description::Math::Abs(vint64_t)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint64_t@s:vl.vint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Abs" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs" OverloadKey="::vl::reflection::description::Math::Abs(float)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="float" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs::value" OverloadKey="::vl::reflection::description::Math::Abs(float)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="float" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Abs" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs" OverloadKey="::vl::reflection::description::Math::Abs(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Abs::value" OverloadKey="::vl::reflection::description::Math::Abs(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(vuint8_t,vuint8_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(vuint8_t,vuint8_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(vuint8_t,vuint8_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(vuint8_t,vuint8_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(vuint8_t,vuint8_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(vuint8_t,vuint8_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(vuint16_t,vuint16_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint16_t" Name="vuint16_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint16_t@s:vl.vuint16_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(vuint16_t,vuint16_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint16_t" Name="vuint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint16_t@s:vl.vuint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(vuint16_t,vuint16_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint16_t" Name="vuint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint16_t@s:vl.vuint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(vuint16_t,vuint16_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint16_t" Name="vuint16_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint16_t@s:vl.vuint16_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(vuint16_t,vuint16_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint16_t" Name="vuint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint16_t@s:vl.vuint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(vuint16_t,vuint16_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint16_t" Name="vuint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint16_t@s:vl.vuint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(vuint32_t,vuint32_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint32_t" Name="vuint32_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint32_t@s:vl.vuint32_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(vuint32_t,vuint32_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint32_t" Name="vuint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint32_t@s:vl.vuint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(vuint32_t,vuint32_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint32_t" Name="vuint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint32_t@s:vl.vuint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(vuint32_t,vuint32_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint32_t" Name="vuint32_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint32_t@s:vl.vuint32_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(vuint32_t,vuint32_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint32_t" Name="vuint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint32_t@s:vl.vuint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(vuint32_t,vuint32_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint32_t" Name="vuint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint32_t@s:vl.vuint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(vuint64_t,vuint64_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(vuint64_t,vuint64_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(vuint64_t,vuint64_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(vuint64_t,vuint64_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(vuint64_t,vuint64_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(vuint64_t,vuint64_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(vint8_t,vint8_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint8_t@s:vl.vint8_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(vint8_t,vint8_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint8_t@s:vl.vint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(vint8_t,vint8_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint8_t@s:vl.vint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(vint8_t,vint8_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint8_t@s:vl.vint8_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(vint8_t,vint8_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint8_t@s:vl.vint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(vint8_t,vint8_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint8_t@s:vl.vint8_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(vint16_t,vint16_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint16_t@s:vl.vint16_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(vint16_t,vint16_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint16_t@s:vl.vint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(vint16_t,vint16_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint16_t@s:vl.vint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(vint16_t,vint16_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint16_t@s:vl.vint16_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(vint16_t,vint16_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint16_t@s:vl.vint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(vint16_t,vint16_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint16_t@s:vl.vint16_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(vint32_t,vint32_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint32_t@s:vl.vint32_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(vint32_t,vint32_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint32_t@s:vl.vint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(vint32_t,vint32_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint32_t@s:vl.vint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(vint32_t,vint32_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint32_t@s:vl.vint32_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(vint32_t,vint32_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint32_t@s:vl.vint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(vint32_t,vint32_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint32_t@s:vl.vint32_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(vint64_t,vint64_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint64_t@s:vl.vint64_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(vint64_t,vint64_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint64_t@s:vl.vint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(vint64_t,vint64_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint64_t@s:vl.vint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(vint64_t,vint64_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint64_t@s:vl.vint64_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(vint64_t,vint64_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint64_t@s:vl.vint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(vint64_t,vint64_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint64_t@s:vl.vint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(float,float)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="float" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(float,float)::a" Static="False">
                  <Type>
                    <RefTypeDecl Name="float" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(float,float)::b" Static="False">
                  <Type>
                    <RefTypeDecl Name="float" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(float,float)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="float" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(float,float)::a" Static="False">
                  <Type>
                    <RefTypeDecl Name="float" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(float,float)::b" Static="False">
                  <Type>
                    <RefTypeDecl Name="float" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(double,double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(double,double)::a" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(double,double)::b" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(double,double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(double,double)::a" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(double,double)::b" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(bool,bool)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(bool,bool)::a" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(bool,bool)::b" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(bool,bool)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(bool,bool)::a" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(bool,bool)::b" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(wchar_t,wchar_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="wchar_t" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(wchar_t,wchar_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(wchar_t,wchar_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(wchar_t,wchar_t)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="wchar_t" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(wchar_t,wchar_t)::a" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(wchar_t,wchar_t)::b" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(WString,WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(WString,WString)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::WString@s:vl.WString" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(WString,WString)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::WString@s:vl.WString" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(WString,WString)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(WString,WString)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::WString@s:vl.WString" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(WString,WString)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::WString@s:vl.WString" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(Locale,Locale)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Locale@s:vl.Locale" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(Locale,Locale)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(Locale,Locale)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(Locale,Locale)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Locale@s:vl.Locale" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(Locale,Locale)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(Locale,Locale)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Locale@s:vl.Locale" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Min" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min" OverloadKey="::vl::reflection::description::Math::Min(DateTime,DateTime)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::DateTime@s:vl.DateTime" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::a" OverloadKey="::vl::reflection::description::Math::Min(DateTime,DateTime)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::DateTime@s:vl.DateTime" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Min::b" OverloadKey="::vl::reflection::description::Math::Min(DateTime,DateTime)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::DateTime@s:vl.DateTime" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Max" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max" OverloadKey="::vl::reflection::description::Math::Max(DateTime,DateTime)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::DateTime@s:vl.DateTime" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="a" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::a" OverloadKey="::vl::reflection::description::Math::Max(DateTime,DateTime)::a" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::DateTime@s:vl.DateTime" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="b" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Max::b" OverloadKey="::vl::reflection::description::Math::Max(DateTime,DateTime)::b" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::DateTime@s:vl.DateTime" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Sin" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Sin" OverloadKey="::vl::reflection::description::Math::Sin(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Sin::value" OverloadKey="::vl::reflection::description::Math::Sin(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Cos" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Cos" OverloadKey="::vl::reflection::description::Math::Cos(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Cos::value" OverloadKey="::vl::reflection::description::Math::Cos(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Tan" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Tan" OverloadKey="::vl::reflection::description::Math::Tan(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Tan::value" OverloadKey="::vl::reflection::description::Math::Tan(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ASin" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ASin" OverloadKey="::vl::reflection::description::Math::ASin(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ASin::value" OverloadKey="::vl::reflection::description::Math::ASin(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ACos" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ACos" OverloadKey="::vl::reflection::description::Math::ACos(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ACos::value" OverloadKey="::vl::reflection::description::Math::ACos(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ATan" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ATan" OverloadKey="::vl::reflection::description::Math::ATan(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ATan::value" OverloadKey="::vl::reflection::description::Math::ATan(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ATan2" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ATan2" OverloadKey="::vl::reflection::description::Math::ATan2(double,double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="x" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ATan2::x" OverloadKey="::vl::reflection::description::Math::ATan2(double,double)::x" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="y" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::ATan2::y" OverloadKey="::vl::reflection::description::Math::ATan2(double,double)::y" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Exp" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Exp" OverloadKey="::vl::reflection::description::Math::Exp(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Exp::value" OverloadKey="::vl::reflection::description::Math::Exp(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="LogN" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::LogN" OverloadKey="::vl::reflection::description::Math::LogN(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::LogN::value" OverloadKey="::vl::reflection::description::Math::LogN(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Log10" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Log10" OverloadKey="::vl::reflection::description::Math::Log10(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Log10::value" OverloadKey="::vl::reflection::description::Math::Log10(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Log" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Log" OverloadKey="::vl::reflection::description::Math::Log(double,double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Log::value" OverloadKey="::vl::reflection::description::Math::Log(double,double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="base" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Log::base" OverloadKey="::vl::reflection::description::Math::Log(double,double)::base" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Pow" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Pow" OverloadKey="::vl::reflection::description::Math::Pow(double,double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Pow::value" OverloadKey="::vl::reflection::description::Math::Pow(double,double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="power" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Pow::power" OverloadKey="::vl::reflection::description::Math::Pow(double,double)::power" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Ceil" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Ceil" OverloadKey="::vl::reflection::description::Math::Ceil(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Ceil::value" OverloadKey="::vl::reflection::description::Math::Ceil(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Floor" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Floor" OverloadKey="::vl::reflection::description::Math::Floor(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Floor::value" OverloadKey="::vl::reflection::description::Math::Floor(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Round" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Round" OverloadKey="::vl::reflection::description::Math::Round(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Round::value" OverloadKey="::vl::reflection::description::Math::Round(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Trunc" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Trunc" OverloadKey="::vl::reflection::description::Math::Trunc(double)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::Math::Trunc::value" OverloadKey="::vl::reflection::description::Math::Trunc(double)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="double" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Math" Name="Math">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::Math@s:vl.reflection.description.Math" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>