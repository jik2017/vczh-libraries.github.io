<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.compositions.GuiBoundsComposition">
    <ClassDecl Access="Public" Name="GuiBoundsComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents a composition that is free to change the expected bounds.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Protected" Name="sizeAffectParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::sizeAffectParent" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::sizeAffectParent" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="compositionBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::compositionBounds" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::compositionBounds" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="alignmentToParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::alignmentToParent" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::alignmentToParent" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="GuiBoundsComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::GuiBoundsComposition" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::GuiBoundsComposition()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiBoundsComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::~GuiBoundsComposition" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::~GuiBoundsComposition()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetSizeAffectParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::GetSizeAffectParent" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::GetSizeAffectParent()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get if the parent composition's size calculation is aware of the configuration of this composition. If you want to bind Bounds, PreferredMinSize, AlignmentToParent or other similar properties to some properties of parent compositions, this property should be set to false to prevent from infinite size glowing.&lt;/summary&gt;
  &lt;returns&gt;Returns true if it is awared.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetSizeAffectParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::SetSizeAffectParent" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::SetSizeAffectParent(bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set if the parent composition's size calculation is aware of the configuration of this composition.&lt;/summary&gt;
  &lt;param name="value"&gt;Set to true to be awared.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::SetSizeAffectParent::value" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::SetSizeAffectParent(bool)::value" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsSizeAffectParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::IsSizeAffectParent" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::IsSizeAffectParent()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetPreferredBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::GetPreferredBounds" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::GetPreferredBounds()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::GetBounds" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::GetBounds()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::SetBounds" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::SetBounds(Rect)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the expected bounds.&lt;/summary&gt;
  &lt;param name="value"&gt;The expected bounds.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::SetBounds::value" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::SetBounds(Rect)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetAlignmentToParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::GetAlignmentToParent" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::GetAlignmentToParent()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the alignment to its parent. -1 in each alignment component means that the corressponding side is not aligned to its parent.&lt;/summary&gt;
  &lt;returns&gt;The alignment to its parent.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetAlignmentToParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::SetAlignmentToParent" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::SetAlignmentToParent(Margin)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the alignment to its parent. -1 in each alignment component means that the corressponding side is not aligned to its parent.&lt;/summary&gt;
  &lt;param name="value"&gt;The alignment to its parent.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::SetAlignmentToParent::value" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::SetAlignmentToParent(Margin)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsAlignedToParent" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiBoundsComposition::IsAlignedToParent" OverloadKey="::vl::presentation::compositions::GuiBoundsComposition::IsAlignedToParent()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is the composition aligned to its parent.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the composition is aligned to its parent.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsSite" Name="GuiGraphicsSite">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiGraphicsSite@s:vl.presentation.compositions.GuiGraphicsSite" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiBoundsComposition" Name="GuiBoundsComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiBoundsComposition@s:vl.presentation.compositions.GuiBoundsComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>