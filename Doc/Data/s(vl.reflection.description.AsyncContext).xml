<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.AsyncContext">
    <ClassDecl Access="Public" Name="AsyncContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext" OverloadKey="::vl::reflection::description::AsyncContext" ClassType="Class">
      <Children>
        <VarDecl Access="Protected" Name="lock" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::lock" OverloadKey="::vl::reflection::description::AsyncContext::lock" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::SpinLock" Name="SpinLock">
              <ReferencingOverloadKeys>
                <Key Value="::vl::SpinLock@s:vl.SpinLock" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="cancelled" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::cancelled" OverloadKey="::vl::reflection::description::AsyncContext::cancelled" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="context" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::context" OverloadKey="::vl::reflection::description::AsyncContext::context" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="AsyncContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::AsyncContext" OverloadKey="::vl::reflection::description::AsyncContext::AsyncContext(&amp; const Value)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_context" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::AsyncContext::_context" OverloadKey="::vl::reflection::description::AsyncContext::AsyncContext(&amp; const Value)::_context" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~AsyncContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::~AsyncContext" OverloadKey="::vl::reflection::description::AsyncContext::~AsyncContext()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsCancelled" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::IsCancelled" OverloadKey="::vl::reflection::description::AsyncContext::IsCancelled()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Cancel" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::Cancel" OverloadKey="::vl::reflection::description::AsyncContext::Cancel()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::GetContext" OverloadKey="::vl::reflection::description::AsyncContext::GetContext()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetContext" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::SetContext" OverloadKey="::vl::reflection::description::AsyncContext::SetContext(&amp; const description::Value)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::AsyncContext::SetContext::value" OverloadKey="::vl::reflection::description::AsyncContext::SetContext(&amp; const description::Value)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::AsyncContext" Name="AsyncContext">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::AsyncContext@s:vl.reflection.description.AsyncContext" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>