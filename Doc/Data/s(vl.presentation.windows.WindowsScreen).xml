<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.windows.WindowsScreen">
    <ClassDecl Access="Public" Name="WindowsScreen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen" OverloadKey="::vl::presentation::windows::WindowsScreen" ClassType="Class">
      <Children>
        <VarDecl Access="Protected" Name="monitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen::monitor" OverloadKey="::vl::presentation::windows::WindowsScreen::monitor" Static="False">
          <Type>
            <RefTypeDecl Name="HMONITOR" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="WindowsScreen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen::WindowsScreen" OverloadKey="::vl::presentation::windows::WindowsScreen::WindowsScreen()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen::GetBounds" OverloadKey="::vl::presentation::windows::WindowsScreen::GetBounds()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::NativeRect" Name="NativeRect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::NativeRect@s:vl.presentation.NativeRect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetClientBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen::GetClientBounds" OverloadKey="::vl::presentation::windows::WindowsScreen::GetClientBounds()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::NativeRect" Name="NativeRect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::NativeRect@s:vl.presentation.NativeRect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen::GetName" OverloadKey="::vl::presentation::windows::WindowsScreen::GetName()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsPrimary" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen::IsPrimary" OverloadKey="::vl::presentation::windows::WindowsScreen::IsPrimary()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetScalingX" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen::GetScalingX" OverloadKey="::vl::presentation::windows::WindowsScreen::GetScalingX()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetScalingY" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsScreen::GetScalingY" OverloadKey="::vl::presentation::windows::WindowsScreen::GetScalingY()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="double" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeScreen" Name="INativeScreen">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeScreen@s:vl.presentation.INativeScreen" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>