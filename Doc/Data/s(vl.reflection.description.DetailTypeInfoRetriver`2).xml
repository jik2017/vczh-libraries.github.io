<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`2">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2::T" />
        <TypeParameterDecl Access="Public" Name="Flag" Tags="x86, Windows" NameKey="::vl::reflection::description::Flag" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2::Flag" />
      </TypeParameters>
      <Specialization />
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2::Type">
              <Type>
                <RefTypeDecl Name="void" />
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType">
              <Type>
                <RefTypeDecl Name="void" />
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType">
              <Type>
                <RefTypeDecl Name="void" />
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType">
              <Type>
                <RefTypeDecl Name="void" />
              </Type>
            </TypedefDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="R" Tags="x86, Windows" NameKey="::vl::reflection::description::R" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R" />
        <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::reflection::description::TArgs" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs" />
      </TypeParameters>
      <Specialization>
        <GenericTypeDecl>
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Func`1@s:vl.Func`1" />
                <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
          <TypeArguments>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::R" Name="R">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Static="False">
                  <Type>
                    <VariadicArgumentTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </VariadicArgumentTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </TypeArguments>
        </GenericTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::FunctionType" Name="FunctionType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::FunctionType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::Func`1@s:vl.Func`1" />
                                <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                          <TypeArguments>
                            <FunctionTypeDecl CallingConvention="Default" Const="False">
                              <ReturnType>
                                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::R" Name="R">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </ReturnType>
                              <Parameters>
                                <VarDecl Access="Public" Static="False">
                                  <Type>
                                    <VariadicArgumentTypeDecl>
                                      <Element>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Element>
                                    </VariadicArgumentTypeDecl>
                                  </Type>
                                </VarDecl>
                              </Parameters>
                            </FunctionTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueList" Name="IValueList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueList@s:vl.reflection.description.IValueList" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" Name="ResultReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" Name="ResultNonReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="R" Tags="x86, Windows" NameKey="::vl::reflection::description::R" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R" />
        <TypeParameterDecl Access="Public" Name="TArgs" Tags="x86, Windows" NameKey="::vl::reflection::description::TArgs" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs" />
      </TypeParameters>
      <Specialization>
        <DecorateTypeDecl Decoration="Const">
          <Element>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Func`1@s:vl.Func`1" />
                    <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::R" Name="R">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <VariadicArgumentTypeDecl>
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </VariadicArgumentTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Element>
        </DecorateTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::FunctionType" Name="FunctionType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::FunctionType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;" ClassType="Struct">
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Func`1@s:vl.Func`1" />
                            <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <FunctionTypeDecl CallingConvention="Default" Const="False">
                          <ReturnType>
                            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::R" Name="R">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::R@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </ReturnType>
                          <Parameters>
                            <VarDecl Access="Public" Static="False">
                              <Type>
                                <VariadicArgumentTypeDecl>
                                  <Element>
                                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TArgs" Name="TArgs">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TArgs@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                                      </ReferencingOverloadKeys>
                                    </RefTypeDecl>
                                  </Element>
                                </VariadicArgumentTypeDecl>
                              </Type>
                            </VarDecl>
                          </Parameters>
                        </FunctionTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::FunctionType" Name="FunctionType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::FunctionType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>