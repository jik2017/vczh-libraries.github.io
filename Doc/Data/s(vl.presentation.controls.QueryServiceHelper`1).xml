<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.QueryServiceHelper`1{T,RequiresConvertable{decltype(T # # Identifier), const ^ const wchar_t}.YesNoType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::presentation::controls::T" OverloadKey="::vl::presentation::controls::QueryServiceHelper`1&lt;T,RequiresConvertable&lt;decltype(T : : Identifier), const * const wchar_t&gt;::YesNoType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::QueryServiceHelper`1&lt;T,RequiresConvertable&lt;decltype(T : : Identifier), const * const wchar_t&gt;::YesNoType&gt;::T@s:vl.presentation.controls.QueryServiceHelper`1{T,RequiresConvertable{decltype(T # # Identifier), const ^ const wchar_t}.YesNoType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::RequiresConvertable::YesNoType" Name="YesNoType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::RequiresConvertable`2::YesNoType@s:vl.RequiresConvertable`2" />
          </ReferencingOverloadKeys>
          <Parent>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::RequiresConvertable" Name="RequiresConvertable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::RequiresConvertable`2@s:vl.RequiresConvertable`2" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <DeclTypeDecl Expression="T : : Identifier" />
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl Name="wchar_t" />
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="QueryServiceHelper" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::QueryServiceHelper" OverloadKey="::vl::presentation::controls::QueryServiceHelper`1&lt;T,RequiresConvertable&lt;decltype(T : : Identifier), const * const wchar_t&gt;::YesNoType&gt;" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="GetIdentifier" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::QueryServiceHelper::GetIdentifier" OverloadKey="::vl::presentation::controls::QueryServiceHelper`1&lt;T,RequiresConvertable&lt;decltype(T : : Identifier), const * const wchar_t&gt;::YesNoType&gt;::GetIdentifier()" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::WString@s:vl.WString" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.presentation.controls.QueryServiceHelper`1{T,RequiresConvertable{decltype(T # # GetIdentifier ( )), WString}.YesNoType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::presentation::controls::T" OverloadKey="::vl::presentation::controls::QueryServiceHelper`1&lt;T,RequiresConvertable&lt;decltype(T : : GetIdentifier ( )), WString&gt;::YesNoType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::QueryServiceHelper`1&lt;T,RequiresConvertable&lt;decltype(T : : GetIdentifier ( )), WString&gt;::YesNoType&gt;::T@s:vl.presentation.controls.QueryServiceHelper`1{T,RequiresConvertable{decltype(T # # GetIdentifier ( )), WString}.YesNoType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::RequiresConvertable::YesNoType" Name="YesNoType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::RequiresConvertable`2::YesNoType@s:vl.RequiresConvertable`2" />
          </ReferencingOverloadKeys>
          <Parent>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::RequiresConvertable" Name="RequiresConvertable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::RequiresConvertable`2@s:vl.RequiresConvertable`2" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <DeclTypeDecl Expression="T : : GetIdentifier ( )" />
                <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::WString@s:vl.WString" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="QueryServiceHelper" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::QueryServiceHelper" OverloadKey="::vl::presentation::controls::QueryServiceHelper`1&lt;T,RequiresConvertable&lt;decltype(T : : GetIdentifier ( )), WString&gt;::YesNoType&gt;" ClassType="Struct">
          <Children>
            <FuncDecl Access="Public" Name="GetIdentifier" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::QueryServiceHelper::GetIdentifier" OverloadKey="::vl::presentation::controls::QueryServiceHelper`1&lt;T,RequiresConvertable&lt;decltype(T : : GetIdentifier ( )), WString&gt;::YesNoType&gt;::GetIdentifier()" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::WString@s:vl.WString" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>