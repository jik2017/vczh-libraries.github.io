<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.elements.text.UnicodeCodePoint">
    <ClassDecl Access="Public" Name="UnicodeCodePoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::UnicodeCodePoint" OverloadKey="::vl::presentation::elements::text::UnicodeCodePoint" ClassType="Struct">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
A unicode code point.
In Windows, when the first character is not the leading character of a surrogate pair, the second character is ignored.
In other platforms which treat wchar_t as a UTF-32 character, the second character is ignored.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="characters" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::UnicodeCodePoint::characters" OverloadKey="::vl::presentation::elements::text::UnicodeCodePoint::characters" Static="False">
          <Type>
            <ArrayTypeDecl Expression="2">
              <Element>
                <RefTypeDecl Name="wchar_t" />
              </Element>
            </ArrayTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="UnicodeCodePoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint" OverloadKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint(wchar_t)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="c" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint::c" OverloadKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint(wchar_t)::c" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="UnicodeCodePoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint" OverloadKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint(wchar_t,wchar_t)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="c1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint::c1" OverloadKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint(wchar_t,wchar_t)::c1" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="c2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint::c2" OverloadKey="::vl::presentation::elements::text::UnicodeCodePoint::UnicodeCodePoint(wchar_t,wchar_t)::c2" Static="False">
                  <Type>
                    <RefTypeDecl Name="wchar_t" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetCodePoint" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::elements::text::UnicodeCodePoint::GetCodePoint" OverloadKey="::vl::presentation::elements::text::UnicodeCodePoint::GetCodePoint()const" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="True">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vuint32_t" Name="vuint32_t">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vuint32_t@s:vl.vuint32_t" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes />
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>