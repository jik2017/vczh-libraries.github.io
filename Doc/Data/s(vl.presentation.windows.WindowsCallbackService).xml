<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.windows.WindowsCallbackService">
    <ClassDecl Access="Public" Name="WindowsCallbackService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService" OverloadKey="::vl::presentation::windows::WindowsCallbackService" ClassType="Class">
      <Children>
        <VarDecl Access="Protected" Name="listeners" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::listeners" OverloadKey="::vl::presentation::windows::WindowsCallbackService::listeners" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeControllerListener" Name="INativeControllerListener">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::INativeControllerListener@s:vl.presentation.INativeControllerListener" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="WindowsCallbackService" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::WindowsCallbackService" OverloadKey="::vl::presentation::windows::WindowsCallbackService::WindowsCallbackService()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InstallListener" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InstallListener" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InstallListener(* INativeControllerListener)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="listener" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InstallListener::listener" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InstallListener(* INativeControllerListener)::listener" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeControllerListener" Name="INativeControllerListener">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeControllerListener@s:vl.presentation.INativeControllerListener" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="UninstallListener" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::UninstallListener" OverloadKey="::vl::presentation::windows::WindowsCallbackService::UninstallListener(* INativeControllerListener)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="listener" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::UninstallListener::listener" OverloadKey="::vl::presentation::windows::WindowsCallbackService::UninstallListener(* INativeControllerListener)::listener" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeControllerListener" Name="INativeControllerListener">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeControllerListener@s:vl.presentation.INativeControllerListener" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InvokeMouseHook" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeMouseHook" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeMouseHook(WPARAM,NativePoint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="message" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeMouseHook::message" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeMouseHook(WPARAM,NativePoint)::message" Static="False">
                  <Type>
                    <RefTypeDecl Name="WPARAM" />
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeMouseHook::location" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeMouseHook(WPARAM,NativePoint)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::NativePoint" Name="NativePoint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::NativePoint@s:vl.presentation.NativePoint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InvokeGlobalTimer" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeGlobalTimer" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeGlobalTimer()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InvokeClipboardUpdated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeClipboardUpdated" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeClipboardUpdated()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InvokeNativeWindowCreated" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowCreated" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowCreated(* INativeWindow)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="window" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowCreated::window" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowCreated(* INativeWindow)::window" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InvokeNativeWindowDestroyed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowDestroyed" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowDestroyed(* INativeWindow)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="window" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowDestroyed::window" OverloadKey="::vl::presentation::windows::WindowsCallbackService::InvokeNativeWindowDestroyed(* INativeWindow)::window" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeCallbackService" Name="INativeCallbackService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeCallbackService@s:vl.presentation.INativeCallbackService" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>