<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.tree.NodeRootProviderBase">
    <ClassDecl Access="Public" Name="NodeRootProviderBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;A general implementation for &lt;links&gt;&lt;link cref="::vl::presentation::controls::tree::INodeRootProvider@s:vl.presentation.controls.tree.INodeRootProvider" /&gt;&lt;/links&gt;.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Private" Name="callbacks" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::callbacks" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::callbacks" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProviderCallback" Name="INodeProviderCallback">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::INodeProviderCallback@s:vl.presentation.controls.tree.INodeProviderCallback" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="OnAttached" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAttached" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAttached(* INodeRootProvider)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="provider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAttached::provider" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAttached(* INodeRootProvider)::provider" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeRootProvider" Name="INodeRootProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeRootProvider@s:vl.presentation.controls.tree.INodeRootProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnBeforeItemModified" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified(* INodeProvider,vint,vint,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="parentNode" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified::parentNode" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified(* INodeProvider,vint,vint,vint)::parentNode" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified::start" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified(* INodeProvider,vint,vint,vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified::count" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified(* INodeProvider,vint,vint,vint)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="newCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified::newCount" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnBeforeItemModified(* INodeProvider,vint,vint,vint)::newCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnAfterItemModified" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified(* INodeProvider,vint,vint,vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="parentNode" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified::parentNode" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified(* INodeProvider,vint,vint,vint)::parentNode" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified::start" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified(* INodeProvider,vint,vint,vint)::start" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="count" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified::count" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified(* INodeProvider,vint,vint,vint)::count" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="newCount" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified::newCount" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnAfterItemModified(* INodeProvider,vint,vint,vint)::newCount" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnItemExpanded" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnItemExpanded" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnItemExpanded(* INodeProvider)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnItemExpanded::node" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnItemExpanded(* INodeProvider)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnItemCollapsed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnItemCollapsed" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnItemCollapsed(* INodeProvider)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnItemCollapsed::node" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::OnItemCollapsed(* INodeProvider)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="NodeRootProviderBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::NodeRootProviderBase" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::NodeRootProviderBase()" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a node root provider.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~NodeRootProviderBase" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::~NodeRootProviderBase" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::~NodeRootProviderBase()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CanGetNodeByVisibleIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::CanGetNodeByVisibleIndex" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::CanGetNodeByVisibleIndex()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetNodeByVisibleIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::GetNodeByVisibleIndex" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::GetNodeByVisibleIndex(vint)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::GetNodeByVisibleIndex::index" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::GetNodeByVisibleIndex(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="AttachCallback" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::AttachCallback" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::AttachCallback(* INodeProviderCallback)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::AttachCallback::value" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::AttachCallback(* INodeProviderCallback)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProviderCallback" Name="INodeProviderCallback">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProviderCallback@s:vl.presentation.controls.tree.INodeProviderCallback" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="DetachCallback" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::DetachCallback" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::DetachCallback(* INodeProviderCallback)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::DetachCallback::value" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::DetachCallback(* INodeProviderCallback)::value" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProviderCallback" Name="INodeProviderCallback">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProviderCallback@s:vl.presentation.controls.tree.INodeProviderCallback" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="RequestView" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::RequestView" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::RequestView(&amp; const WString)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="identifier" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::NodeRootProviderBase::RequestView::identifier" OverloadKey="::vl::presentation::controls::tree::NodeRootProviderBase::RequestView(&amp; const WString)::identifier" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::WString@s:vl.WString" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeRootProvider" Name="INodeRootProvider">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree::INodeRootProvider@s:vl.presentation.controls.tree.INodeRootProvider" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Protected" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProviderCallback" Name="INodeProviderCallback">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree::INodeProviderCallback@s:vl.presentation.controls.tree.INodeProviderCallback" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::NodeRootProviderBase" Name="NodeRootProviderBase">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::tree::NodeRootProviderBase@s:vl.presentation.controls.tree.NodeRootProviderBase" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>