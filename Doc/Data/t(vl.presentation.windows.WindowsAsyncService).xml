<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.presentation.windows.WindowsAsyncService">
    <SymbolTree NamespaceUrlName="vl.presentation.windows">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService" DisplayName="WindowsAsyncService class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::TaskItem" DisplayName="TaskItem struct" Doc="false">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::TaskItem::semaphore" DisplayName="semaphore field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::TaskItem::proc" DisplayName="proc field" Doc="false" />
          <Overloads DisplayName="TaskItem constructor">
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::TaskItem::TaskItem()" DisplayName="TaskItem constructor" Doc="false" />
            <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::TaskItem::TaskItem(* Semaphore,&amp; const Func&lt;function () : void&gt;)" DisplayName="TaskItem constructor" Doc="false" />
          </Overloads>
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::TaskItem::~TaskItem()" DisplayName="~TaskItem destructor" Doc="false" />
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem" DisplayName="DelayItem class" Doc="false">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::DelayItem(* WindowsAsyncService,&amp; const Func&lt;function () : void&gt;,bool,vint)" DisplayName="DelayItem constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::~DelayItem()" DisplayName="~DelayItem destructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::service" DisplayName="service field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::proc" DisplayName="proc field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::status" DisplayName="status field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::executeTime" DisplayName="executeTime field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::executeInMainThread" DisplayName="executeInMainThread field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::GetStatus()" DisplayName="GetStatus method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::Delay(vint)" DisplayName="Delay method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayItem::Cancel()" DisplayName="Cancel method" Doc="false" />
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::mainThreadId" DisplayName="mainThreadId field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::taskListLock" DisplayName="taskListLock field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::taskItems" DisplayName="taskItems field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::delayItems" DisplayName="delayItems field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::WindowsAsyncService()" DisplayName="WindowsAsyncService constructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::~WindowsAsyncService()" DisplayName="~WindowsAsyncService destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::ExecuteAsyncTasks()" DisplayName="ExecuteAsyncTasks method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::IsInMainThread(* INativeWindow)" DisplayName="IsInMainThread method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::InvokeAsync(&amp; const Func&lt;function () : void&gt;)" DisplayName="InvokeAsync method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::InvokeInMainThread(* INativeWindow,&amp; const Func&lt;function () : void&gt;)" DisplayName="InvokeInMainThread method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::InvokeInMainThreadAndWait(* INativeWindow,&amp; const Func&lt;function () : void&gt;,vint)" DisplayName="InvokeInMainThreadAndWait method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayExecute(&amp; const Func&lt;function () : void&gt;,vint)" DisplayName="DelayExecute method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::presentation::windows::WindowsAsyncService::DelayExecuteInMainThread(&amp; const Func&lt;function () : void&gt;,vint)" DisplayName="DelayExecuteInMainThread method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>