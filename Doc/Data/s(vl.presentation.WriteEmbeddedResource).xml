<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.WriteEmbeddedResource(Ptr{GuiResource},Ptr{workflow.cppcodegen.WfCppInput},Ptr{workflow.cppcodegen.WfCppOutput},bool,&amp; const filesystem.FilePath)">
    <FuncDecl Access="Public" Name="WriteEmbeddedResource" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::WriteEmbeddedResource" OverloadKey="::vl::presentation::WriteEmbeddedResource(Ptr&lt;GuiResource&gt;,Ptr&lt;workflow::cppcodegen::WfCppInput&gt;,Ptr&lt;workflow::cppcodegen::WfCppOutput&gt;,bool,&amp; const filesystem::FilePath)" Virtual="Normal" Function="Function">
      <Type>
        <FunctionTypeDecl CallingConvention="Default" Const="False">
          <ReturnType>
            <RefTypeDecl Name="bool" />
          </ReturnType>
          <Parameters>
            <VarDecl Access="Public" Name="resource" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::WriteEmbeddedResource::resource" OverloadKey="::vl::presentation::WriteEmbeddedResource(Ptr&lt;GuiResource&gt;,Ptr&lt;workflow::cppcodegen::WfCppInput&gt;,Ptr&lt;workflow::cppcodegen::WfCppOutput&gt;,bool,&amp; const filesystem::FilePath)::resource" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::GuiResource" Name="GuiResource">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::GuiResource@s:vl.presentation.GuiResource" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="cppInput" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::WriteEmbeddedResource::cppInput" OverloadKey="::vl::presentation::WriteEmbeddedResource(Ptr&lt;GuiResource&gt;,Ptr&lt;workflow::cppcodegen::WfCppInput&gt;,Ptr&lt;workflow::cppcodegen::WfCppOutput&gt;,bool,&amp; const filesystem::FilePath)::cppInput" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::workflow::cppcodegen::WfCppInput" Name="WfCppInput">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::cppcodegen::WfCppInput@s:vl.workflow.cppcodegen.WfCppInput" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::workflow::cppcodegen" Name="cppcodegen">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::cppcodegen@ns:vl.workflow.cppcodegen" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow@ns:vl.workflow" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="cppOutput" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::WriteEmbeddedResource::cppOutput" OverloadKey="::vl::presentation::WriteEmbeddedResource(Ptr&lt;GuiResource&gt;,Ptr&lt;workflow::cppcodegen::WfCppInput&gt;,Ptr&lt;workflow::cppcodegen::WfCppOutput&gt;,bool,&amp; const filesystem::FilePath)::cppOutput" Static="False">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::workflow::cppcodegen::WfCppOutput" Name="WfCppOutput">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::cppcodegen::WfCppOutput@s:vl.workflow.cppcodegen.WfCppOutput" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::workflow::cppcodegen" Name="cppcodegen">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::cppcodegen@ns:vl.workflow.cppcodegen" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow@ns:vl.workflow" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="compress" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::WriteEmbeddedResource::compress" OverloadKey="::vl::presentation::WriteEmbeddedResource(Ptr&lt;GuiResource&gt;,Ptr&lt;workflow::cppcodegen::WfCppInput&gt;,Ptr&lt;workflow::cppcodegen::WfCppOutput&gt;,bool,&amp; const filesystem::FilePath)::compress" Static="False">
              <Type>
                <RefTypeDecl Name="bool" />
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="filePath" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::WriteEmbeddedResource::filePath" OverloadKey="::vl::presentation::WriteEmbeddedResource(Ptr&lt;GuiResource&gt;,Ptr&lt;workflow::cppcodegen::WfCppInput&gt;,Ptr&lt;workflow::cppcodegen::WfCppOutput&gt;,bool,&amp; const filesystem::FilePath)::filePath" Static="False">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::filesystem::FilePath" Name="FilePath">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::filesystem::FilePath@s:vl.filesystem.FilePath" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::filesystem" Name="filesystem">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::filesystem@ns:vl.filesystem" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Parameters>
        </FunctionTypeDecl>
      </Type>
    </FuncDecl>
  </Symbols>
</OverloadingSymbols>