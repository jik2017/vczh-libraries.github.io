<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.WfExpression">
    <ClassDecl Access="Public" Name="WfExpression" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression" OverloadKey="::vl::workflow::WfExpression" ClassType="Class">
      <Children>
        <ClassDecl Access="Public" Name="IVisitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor" OverloadKey="::vl::workflow::WfExpression::IVisitor" ClassType="Class">
          <Children>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfThisExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfThisExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfThisExpression" Name="WfThisExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfThisExpression@s:vl.workflow.WfThisExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTopQualifiedExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTopQualifiedExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTopQualifiedExpression" Name="WfTopQualifiedExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfTopQualifiedExpression@s:vl.workflow.WfTopQualifiedExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfReferenceExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfReferenceExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfReferenceExpression" Name="WfReferenceExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfReferenceExpression@s:vl.workflow.WfReferenceExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfOrderedNameExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfOrderedNameExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfOrderedNameExpression" Name="WfOrderedNameExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfOrderedNameExpression@s:vl.workflow.WfOrderedNameExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfOrderedLambdaExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfOrderedLambdaExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfOrderedLambdaExpression" Name="WfOrderedLambdaExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfOrderedLambdaExpression@s:vl.workflow.WfOrderedLambdaExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfMemberExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfMemberExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfMemberExpression" Name="WfMemberExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfMemberExpression@s:vl.workflow.WfMemberExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfChildExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfChildExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfChildExpression" Name="WfChildExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfChildExpression@s:vl.workflow.WfChildExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfLiteralExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfLiteralExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfLiteralExpression" Name="WfLiteralExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfLiteralExpression@s:vl.workflow.WfLiteralExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfFloatingExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfFloatingExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFloatingExpression" Name="WfFloatingExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfFloatingExpression@s:vl.workflow.WfFloatingExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfIntegerExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfIntegerExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfIntegerExpression" Name="WfIntegerExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfIntegerExpression@s:vl.workflow.WfIntegerExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfStringExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfStringExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStringExpression" Name="WfStringExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfStringExpression@s:vl.workflow.WfStringExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfUnaryExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfUnaryExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfUnaryExpression" Name="WfUnaryExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfUnaryExpression@s:vl.workflow.WfUnaryExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfBinaryExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfBinaryExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBinaryExpression" Name="WfBinaryExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfBinaryExpression@s:vl.workflow.WfBinaryExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfLetExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfLetExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfLetExpression" Name="WfLetExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfLetExpression@s:vl.workflow.WfLetExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfIfExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfIfExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfIfExpression" Name="WfIfExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfIfExpression@s:vl.workflow.WfIfExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfRangeExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfRangeExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfRangeExpression" Name="WfRangeExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfRangeExpression@s:vl.workflow.WfRangeExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfSetTestingExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfSetTestingExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfSetTestingExpression" Name="WfSetTestingExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfSetTestingExpression@s:vl.workflow.WfSetTestingExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfConstructorExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfConstructorExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorExpression" Name="WfConstructorExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfConstructorExpression@s:vl.workflow.WfConstructorExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfInferExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfInferExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfInferExpression" Name="WfInferExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfInferExpression@s:vl.workflow.WfInferExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTypeCastingExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTypeCastingExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTypeCastingExpression" Name="WfTypeCastingExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfTypeCastingExpression@s:vl.workflow.WfTypeCastingExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTypeTestingExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTypeTestingExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTypeTestingExpression" Name="WfTypeTestingExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfTypeTestingExpression@s:vl.workflow.WfTypeTestingExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTypeOfTypeExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTypeOfTypeExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTypeOfTypeExpression" Name="WfTypeOfTypeExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfTypeOfTypeExpression@s:vl.workflow.WfTypeOfTypeExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTypeOfExpressionExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfTypeOfExpressionExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTypeOfExpressionExpression" Name="WfTypeOfExpressionExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfTypeOfExpressionExpression@s:vl.workflow.WfTypeOfExpressionExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfAttachEventExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfAttachEventExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAttachEventExpression" Name="WfAttachEventExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfAttachEventExpression@s:vl.workflow.WfAttachEventExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfDetachEventExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfDetachEventExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDetachEventExpression" Name="WfDetachEventExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfDetachEventExpression@s:vl.workflow.WfDetachEventExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfObserveExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfObserveExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfObserveExpression" Name="WfObserveExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfObserveExpression@s:vl.workflow.WfObserveExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfCallExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfCallExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCallExpression" Name="WfCallExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfCallExpression@s:vl.workflow.WfCallExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfFunctionExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfFunctionExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionExpression" Name="WfFunctionExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfFunctionExpression@s:vl.workflow.WfFunctionExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfNewClassExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfNewClassExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewClassExpression" Name="WfNewClassExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfNewClassExpression@s:vl.workflow.WfNewClassExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfNewInterfaceExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfNewInterfaceExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewInterfaceExpression" Name="WfNewInterfaceExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfNewInterfaceExpression@s:vl.workflow.WfNewInterfaceExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfVirtualCfeExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfVirtualCfeExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCfeExpression" Name="WfVirtualCfeExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfVirtualCfeExpression@s:vl.workflow.WfVirtualCfeExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
            <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfVirtualCseExpression)" Virtual="Abstract" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::IVisitor::Visit::node" OverloadKey="::vl::workflow::WfExpression::IVisitor::Visit(* WfVirtualCseExpression)::node" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="Pointer">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseExpression" Name="WfVirtualCseExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfVirtualCseExpression@s:vl.workflow.WfVirtualCseExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes>
            <BaseTypeDecl Access="Public" Tags="x86, Windows">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl@ns:vl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </BaseTypeDecl>
            <BaseTypeDecl Access="Private" Tags="x86, Windows">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                        <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                        <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <SubTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection@ns:vl.reflection" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl@ns:vl" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression::IVisitor" Name="IVisitor">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression::IVisitor@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </BaseTypeDecl>
          </BaseTypes>
        </ClassDecl>
        <FuncDecl Access="Public" Name="Accept" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::Accept" OverloadKey="::vl::workflow::WfExpression::Accept(* WfExpression::IVisitor)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="visitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::WfExpression::Accept::visitor" OverloadKey="::vl::workflow::WfExpression::Accept(* WfExpression::IVisitor)::visitor" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfExpression::IVisitor" Name="IVisitor">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression::IVisitor@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Private" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection@ns:vl.reflection" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl@ns:vl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>