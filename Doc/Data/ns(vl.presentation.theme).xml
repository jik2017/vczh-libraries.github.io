<?xml version="1.0" encoding="utf-8"?>
<Namespace DisplayName="::vl::presentation::theme">
  <Overloads DisplayName="FinalizeTheme function">
    <Symbol Key="::vl::presentation::theme::FinalizeTheme()" UrlName="vl.presentation.theme.FinalizeTheme()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GetCurrentTheme function">
    <Symbol Key="::vl::presentation::theme::GetCurrentTheme()" UrlName="vl.presentation.theme.GetCurrentTheme()" Doc="true" />
  </Overloads>
  <Overloads DisplayName="InitializeTheme function">
    <Symbol Key="::vl::presentation::theme::InitializeTheme()" UrlName="vl.presentation.theme.InitializeTheme()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ITheme class">
    <Symbol Key="::vl::presentation::theme::ITheme" UrlName="vl.presentation.theme.ITheme" Doc="true" />
  </Overloads>
  <Overloads DisplayName="RegisterTheme function">
    <Symbol Key="::vl::presentation::theme::RegisterTheme(&amp; const WString,Ptr&lt;ThemeTemplates&gt;)" UrlName="vl.presentation.theme.RegisterTheme(&amp; const WString,Ptr{ThemeTemplates})" Doc="true" />
  </Overloads>
  <Overloads DisplayName="ThemeName enum">
    <Symbol Key="::vl::presentation::theme::ThemeName" UrlName="vl.presentation.theme.ThemeName" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ThemeTemplates class">
    <Symbol Key="::vl::presentation::theme::ThemeTemplates" UrlName="vl.presentation.theme.ThemeTemplates" Doc="true" />
  </Overloads>
  <Overloads DisplayName="UnregisterTheme function">
    <Symbol Key="::vl::presentation::theme::UnregisterTheme(&amp; const WString)" UrlName="vl.presentation.theme.UnregisterTheme(&amp; const WString)" Doc="true" />
  </Overloads>
</Namespace>