<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.reflection.description.AsyncCoroutine">
    <SymbolTree NamespaceUrlName="vl.reflection.description">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine" DisplayName="AsyncCoroutine class" Doc="false">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::IImpl" DisplayName="IImpl class" Doc="false">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::IImpl::GetScheduler()" DisplayName="GetScheduler method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::IImpl::GetContext()" DisplayName="GetContext method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::IImpl::OnContinue(Ptr&lt;CoroutineResult&gt;)" DisplayName="OnContinue method" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::IImpl::OnReturn(&amp; const Value)" DisplayName="OnReturn method" Doc="false" />
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::Creator" DisplayName="Creator typedecl" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::AwaitAndRead(* IImpl,Ptr&lt;IAsync&gt;)" DisplayName="AwaitAndRead method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::ReturnAndExit(* IImpl,&amp; const Value)" DisplayName="ReturnAndExit method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::QueryContext(* IImpl)" DisplayName="QueryContext method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::Create(&amp; const Creator)" DisplayName="Create method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::reflection::description::AsyncCoroutine::CreateAndRun(&amp; const Creator)" DisplayName="CreateAndRun method" Doc="false" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>