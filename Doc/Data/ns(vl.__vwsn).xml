<?xml version="1.0" encoding="utf-8"?>
<Namespace DisplayName="::vl::__vwsn">
  <Overloads DisplayName="Box function">
    <Symbol Key="::vl::__vwsn::Box`1(&amp; const T)" UrlName="vl.__vwsn.Box`1(&amp; const T)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="CreateDictionary struct">
    <Symbol Key="::vl::__vwsn::CreateDictionary" UrlName="vl.__vwsn.CreateDictionary" Doc="false" />
  </Overloads>
  <Overloads DisplayName="CreateList struct">
    <Symbol Key="::vl::__vwsn::CreateList" UrlName="vl.__vwsn.CreateList" Doc="false" />
  </Overloads>
  <Overloads DisplayName="CreateObservableList struct">
    <Symbol Key="::vl::__vwsn::CreateObservableList" UrlName="vl.__vwsn.CreateObservableList" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Ensure function">
    <Symbol Key="::vl::__vwsn::Ensure`1(* T)" UrlName="vl.__vwsn.Ensure`1(^ T)" Doc="false" />
    <Symbol Key="::vl::__vwsn::Ensure`1(&amp; Ptr&lt;T&gt;)" UrlName="vl.__vwsn.Ensure`1(&amp; Ptr{T})" Doc="false" />
    <Symbol Key="::vl::__vwsn::Ensure`1(&amp;&amp; Ptr&lt;T&gt;)" UrlName="vl.__vwsn.Ensure`1(&amp;&amp; Ptr{T})" Doc="false" />
    <Symbol Key="::vl::__vwsn::Ensure`1(&amp;&amp; Nullable&lt;T&gt;)" UrlName="vl.__vwsn.Ensure`1(&amp;&amp; Nullable{T})" Doc="false" />
    <Symbol Key="::vl::__vwsn::Ensure`1(&amp; Nullable&lt;T&gt;)" UrlName="vl.__vwsn.Ensure`1(&amp; Nullable{T})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="EventAttach function">
    <Symbol Key="::vl::__vwsn::EventAttach`1(&amp; T,EventHelper&lt;T&gt;::Handler)" UrlName="vl.__vwsn.EventAttach`1(&amp; T,EventHelper{T}.Handler)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="EventDetach function">
    <Symbol Key="::vl::__vwsn::EventDetach`1(&amp; T,Ptr&lt;reflection::description::IEventHandler&gt;)" UrlName="vl.__vwsn.EventDetach`1(&amp; T,Ptr{reflection.description.IEventHandler})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="EventHelper struct">
    <Symbol Key="::vl::__vwsn::EventHelper`1" UrlName="vl.__vwsn.EventHelper`1" Doc="false" />
    <Symbol Key="::vl::__vwsn::EventHelper`1&lt;Event&lt;function (... TArgs) : void&gt;&gt;" UrlName="vl.__vwsn.EventHelper`1{Event{function (... TArgs) # void}}" Doc="false" />
    <Symbol Key="::vl::__vwsn::EventHelper`1&lt;presentation::compositions::GuiGraphicsEvent&lt;T&gt;&gt;" UrlName="vl.__vwsn.EventHelper`1{presentation.compositions.GuiGraphicsEvent{T}}" Doc="false" />
  </Overloads>
  <Overloads DisplayName="EventInvoke function">
    <Symbol Key="::vl::__vwsn::EventInvoke`1(&amp; T)" UrlName="vl.__vwsn.EventInvoke`1(&amp; T)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="InSet function">
    <Symbol Key="::vl::__vwsn::InSet`1(&amp; const T,&amp; const collections::LazyList&lt;T&gt;)" UrlName="vl.__vwsn.InSet`1(&amp; const T,&amp; const collections.LazyList{T})" Doc="false" />
    <Symbol Key="::vl::__vwsn::InSet`1(&amp; const T,Ptr&lt;reflection::description::IValueReadonlyList&gt;)" UrlName="vl.__vwsn.InSet`1(&amp; const T,Ptr{reflection.description.IValueReadonlyList})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="NullableCast function">
    <Symbol Key="::vl::__vwsn::NullableCast`2(Nullable&lt;TFrom&gt;)" UrlName="vl.__vwsn.NullableCast`2(Nullable{TFrom})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="NullableCastHelper struct">
    <Symbol Key="::vl::__vwsn::NullableCastHelper`2" UrlName="vl.__vwsn.NullableCastHelper`2" Doc="false" />
    <Symbol Key="::vl::__vwsn::NullableCastHelper`1&lt;WString,TFrom&gt;" UrlName="vl.__vwsn.NullableCastHelper`1{WString,TFrom}" Doc="false" />
    <Symbol Key="::vl::__vwsn::NullableCastHelper`1&lt;TTo,WString&gt;" UrlName="vl.__vwsn.NullableCastHelper`1{TTo,WString}" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Parse function">
    <Symbol Key="::vl::__vwsn::Parse`1(&amp; const WString)" UrlName="vl.__vwsn.Parse`1(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Range function">
    <Symbol Key="::vl::__vwsn::Range`1(T,T)" UrlName="vl.__vwsn.Range`1(T,T)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="RawPtrCast function">
    <Symbol Key="::vl::__vwsn::RawPtrCast`2(* TFrom)" UrlName="vl.__vwsn.RawPtrCast`2(^ TFrom)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="RunOnExit struct">
    <Symbol Key="::vl::__vwsn::RunOnExit`1" UrlName="vl.__vwsn.RunOnExit`1" Doc="false" />
  </Overloads>
  <Overloads DisplayName="SharedPtrCast function">
    <Symbol Key="::vl::__vwsn::SharedPtrCast`2(* TFrom)" UrlName="vl.__vwsn.SharedPtrCast`2(^ TFrom)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="This function">
    <Symbol Key="::vl::__vwsn::This`1(* T)" UrlName="vl.__vwsn.This`1(^ T)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ToString function">
    <Symbol Key="::vl::__vwsn::ToString`1(&amp; const T)" UrlName="vl.__vwsn.ToString`1(&amp; const T)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Unbox function">
    <Symbol Key="::vl::__vwsn::Unbox`1(&amp; const reflection::description::Value)" UrlName="vl.__vwsn.Unbox`1(&amp; const reflection.description.Value)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="UnboxCollection function">
    <Symbol Key="::vl::__vwsn::UnboxCollection`2(&amp; const U)" UrlName="vl.__vwsn.UnboxCollection`2(&amp; const U)" Doc="false" />
    <Symbol Key="::vl::__vwsn::UnboxCollection`2(&amp; const collections::LazyList&lt;U&gt;)" UrlName="vl.__vwsn.UnboxCollection`2(&amp; const collections.LazyList{U})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="UnboxWeak function">
    <Symbol Key="::vl::__vwsn::UnboxWeak`1(&amp; const reflection::description::Value)" UrlName="vl.__vwsn.UnboxWeak`1(&amp; const reflection.description.Value)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="UnboxWeakHelper struct">
    <Symbol Key="::vl::__vwsn::UnboxWeakHelper`1" UrlName="vl.__vwsn.UnboxWeakHelper`1" Doc="false" />
    <Symbol Key="::vl::__vwsn::UnboxWeakHelper`1&lt;* T&gt;" UrlName="vl.__vwsn.UnboxWeakHelper`1{^ T}" Doc="false" />
    <Symbol Key="::vl::__vwsn::UnboxWeakHelper`1&lt;Ptr&lt;T&gt;&gt;" UrlName="vl.__vwsn.UnboxWeakHelper`1{Ptr{T}}" Doc="false" />
    <Symbol Key="::vl::__vwsn::UnboxWeakHelper`1&lt;Nullable&lt;T&gt;&gt;" UrlName="vl.__vwsn.UnboxWeakHelper`1{Nullable{T}}" Doc="false" />
  </Overloads>
</Namespace>