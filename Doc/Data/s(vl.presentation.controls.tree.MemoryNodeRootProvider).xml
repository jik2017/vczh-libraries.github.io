<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.tree.MemoryNodeRootProvider">
    <ClassDecl Access="Public" Name="MemoryNodeRootProvider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider" OverloadKey="::vl::presentation::controls::tree::MemoryNodeRootProvider" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;An in-memory &lt;links&gt;&lt;link cref="::vl::presentation::controls::tree::INodeRootProvider@s:vl.presentation.controls.tree.INodeRootProvider" /&gt;&lt;/links&gt; implementation.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Protected" Name="GetCallbackProxyInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::GetCallbackProxyInternal" OverloadKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::GetCallbackProxyInternal()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProviderCallback" Name="INodeProviderCallback">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::INodeProviderCallback@s:vl.presentation.controls.tree.INodeProviderCallback" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="MemoryNodeRootProvider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::MemoryNodeRootProvider" OverloadKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::MemoryNodeRootProvider()" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a node root provider.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~MemoryNodeRootProvider" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::~MemoryNodeRootProvider" OverloadKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::~MemoryNodeRootProvider()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetRootNode" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::GetRootNode" OverloadKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::GetRootNode()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMemoryNode" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::GetMemoryNode" OverloadKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::GetMemoryNode(* INodeProvider)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the &lt;links&gt;&lt;link cref="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" /&gt;&lt;/links&gt; object from an &lt;links&gt;&lt;link cref="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" /&gt;&lt;/links&gt; object.&lt;/summary&gt;
  &lt;returns&gt;The corresponding &lt;links&gt;&lt;link cref="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" /&gt;&lt;/links&gt; object.&lt;/returns&gt;
  &lt;param name="node"&gt;The node to get the memory node.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::GetMemoryNode::node" OverloadKey="::vl::presentation::controls::tree::MemoryNodeRootProvider::GetMemoryNode(* INodeProvider)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::NodeRootProviderBase" Name="NodeRootProviderBase">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree::NodeRootProviderBase@s:vl.presentation.controls.tree.NodeRootProviderBase" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider" Name="MemoryNodeRootProvider">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::tree::MemoryNodeRootProvider@s:vl.presentation.controls.tree.MemoryNodeRootProvider" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>