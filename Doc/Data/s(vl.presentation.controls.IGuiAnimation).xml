<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.IGuiAnimation">
    <ClassDecl Access="Public" Name="IGuiAnimation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation" OverloadKey="::vl::presentation::controls::IGuiAnimation" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;Animation.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <FuncDecl Access="Public" Name="Start" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::Start" OverloadKey="::vl::presentation::controls::IGuiAnimation::Start()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when the animation is about to play the first frame.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Pause" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::Pause" OverloadKey="::vl::presentation::controls::IGuiAnimation::Pause()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when the animation is about to pause.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Resume" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::Resume" OverloadKey="::vl::presentation::controls::IGuiAnimation::Resume()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Called when the animation is about to resume.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Run" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::Run" OverloadKey="::vl::presentation::controls::IGuiAnimation::Run()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Play the animation. The animation should calculate the time itself to determine the content of the current state of animating objects.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetStopped" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::GetStopped" OverloadKey="::vl::presentation::controls::IGuiAnimation::GetStopped()" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test if the animation has ended.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the animation has ended.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CreateAnimation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation" OverloadKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation(&amp; const Func&lt;function (vuint64_t) : void&gt;,vuint64_t)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a finite animation.&lt;/summary&gt;
  &lt;returns&gt;Returns the created animation.&lt;/returns&gt;
  &lt;param name="run"&gt;The animation callback for each frame.&lt;/param&gt;
  &lt;param name="milliseconds"&gt;The length of the animation.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiAnimation" Name="IGuiAnimation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::IGuiAnimation@s:vl.presentation.controls.IGuiAnimation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="run" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation::run" OverloadKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation(&amp; const Func&lt;function (vuint64_t) : void&gt;,vuint64_t)::run" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Func`1@s:vl.Func`1" />
                                    <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <FunctionTypeDecl CallingConvention="Default" Const="False">
                                  <ReturnType>
                                    <RefTypeDecl Name="void" />
                                  </ReturnType>
                                  <Parameters>
                                    <VarDecl Access="Public" Static="False">
                                      <Type>
                                        <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Type>
                                    </VarDecl>
                                  </Parameters>
                                </FunctionTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="milliseconds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation::milliseconds" OverloadKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation(&amp; const Func&lt;function (vuint64_t) : void&gt;,vuint64_t)::milliseconds" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CreateAnimation" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation" OverloadKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation(&amp; const Func&lt;function (vuint64_t) : void&gt;)" Virtual="Static" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create an infinite animation.&lt;/summary&gt;
  &lt;returns&gt;Returns the created animation.&lt;/returns&gt;
  &lt;param name="run"&gt;The animation callback for each frame.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiAnimation" Name="IGuiAnimation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::IGuiAnimation@s:vl.presentation.controls.IGuiAnimation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="run" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation::run" OverloadKey="::vl::presentation::controls::IGuiAnimation::CreateAnimation(&amp; const Func&lt;function (vuint64_t) : void&gt;)::run" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Func`1@s:vl.Func`1" />
                                    <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <FunctionTypeDecl CallingConvention="Default" Const="False">
                                  <ReturnType>
                                    <RefTypeDecl Name="void" />
                                  </ReturnType>
                                  <Parameters>
                                    <VarDecl Access="Public" Static="False">
                                      <Type>
                                        <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Type>
                                    </VarDecl>
                                  </Parameters>
                                </FunctionTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiAnimation" Name="IGuiAnimation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::IGuiAnimation@s:vl.presentation.controls.IGuiAnimation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>