<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.regex.RegexLexerColorizer">
    <SymbolTree NamespaceUrlName="vl.regex">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer" DisplayName="RegexLexerColorizer class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::InternalState" DisplayName="InternalState struct" Doc="false">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::InternalState::currentState" DisplayName="currentState field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::InternalState::interTokenId" DisplayName="interTokenId field" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::InternalState::interTokenState" DisplayName="interTokenState field" Doc="false" />
        </Symbol>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::walker" DisplayName="walker field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::proc" DisplayName="proc field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::internalState" DisplayName="internalState field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::CallExtendProcAndColorizeProc(* const wchar_t,vint,&amp; RegexProcessingToken,bool)" DisplayName="CallExtendProcAndColorizeProc method" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::WalkOneToken(* const wchar_t,vint,vint,bool)" DisplayName="WalkOneToken method" Doc="false" />
        <Overloads DisplayName="RegexLexerColorizer constructor">
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::RegexLexerColorizer(&amp; const RegexLexerWalker,RegexProc)" DisplayName="RegexLexerColorizer constructor" Doc="false" />
          <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::RegexLexerColorizer(&amp; const RegexLexerColorizer)" DisplayName="RegexLexerColorizer constructor" Doc="false" />
        </Overloads>
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::~RegexLexerColorizer()" DisplayName="~RegexLexerColorizer destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::GetInternalState()" DisplayName="GetInternalState method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::SetInternalState(InternalState)" DisplayName="SetInternalState method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::Pass(wchar_t)" DisplayName="Pass method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::GetStartState()const" DisplayName="GetStartState method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexerColorizer::Colorize(* const wchar_t,vint)" DisplayName="Colorize method" Doc="true" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>