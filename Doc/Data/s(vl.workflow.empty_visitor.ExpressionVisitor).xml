<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.empty_visitor.ExpressionVisitor">
    <ClassDecl Access="Public" Name="ExpressionVisitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor" ClassType="Class">
      <Children>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Dispatch" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Dispatch(* WfVirtualCfeExpression)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Dispatch::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Dispatch(* WfVirtualCfeExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCfeExpression" Name="WfVirtualCfeExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCfeExpression@s:vl.workflow.WfVirtualCfeExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Dispatch" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Dispatch(* WfVirtualCseExpression)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Dispatch::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Dispatch(* WfVirtualCseExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseExpression" Name="WfVirtualCseExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCseExpression@s:vl.workflow.WfVirtualCseExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfThisExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfThisExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfThisExpression" Name="WfThisExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfThisExpression@s:vl.workflow.WfThisExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTopQualifiedExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTopQualifiedExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTopQualifiedExpression" Name="WfTopQualifiedExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfTopQualifiedExpression@s:vl.workflow.WfTopQualifiedExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfReferenceExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfReferenceExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfReferenceExpression" Name="WfReferenceExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfReferenceExpression@s:vl.workflow.WfReferenceExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfOrderedNameExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfOrderedNameExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfOrderedNameExpression" Name="WfOrderedNameExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfOrderedNameExpression@s:vl.workflow.WfOrderedNameExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfOrderedLambdaExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfOrderedLambdaExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfOrderedLambdaExpression" Name="WfOrderedLambdaExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfOrderedLambdaExpression@s:vl.workflow.WfOrderedLambdaExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfMemberExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfMemberExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfMemberExpression" Name="WfMemberExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfMemberExpression@s:vl.workflow.WfMemberExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfChildExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfChildExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfChildExpression" Name="WfChildExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfChildExpression@s:vl.workflow.WfChildExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfLiteralExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfLiteralExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfLiteralExpression" Name="WfLiteralExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfLiteralExpression@s:vl.workflow.WfLiteralExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfFloatingExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfFloatingExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFloatingExpression" Name="WfFloatingExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFloatingExpression@s:vl.workflow.WfFloatingExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfIntegerExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfIntegerExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfIntegerExpression" Name="WfIntegerExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfIntegerExpression@s:vl.workflow.WfIntegerExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfStringExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfStringExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStringExpression" Name="WfStringExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStringExpression@s:vl.workflow.WfStringExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfUnaryExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfUnaryExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfUnaryExpression" Name="WfUnaryExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfUnaryExpression@s:vl.workflow.WfUnaryExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfBinaryExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfBinaryExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBinaryExpression" Name="WfBinaryExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBinaryExpression@s:vl.workflow.WfBinaryExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfLetExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfLetExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfLetExpression" Name="WfLetExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfLetExpression@s:vl.workflow.WfLetExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfIfExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfIfExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfIfExpression" Name="WfIfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfIfExpression@s:vl.workflow.WfIfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfRangeExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfRangeExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfRangeExpression" Name="WfRangeExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfRangeExpression@s:vl.workflow.WfRangeExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfSetTestingExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfSetTestingExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfSetTestingExpression" Name="WfSetTestingExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfSetTestingExpression@s:vl.workflow.WfSetTestingExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfConstructorExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfConstructorExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorExpression" Name="WfConstructorExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfConstructorExpression@s:vl.workflow.WfConstructorExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfInferExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfInferExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfInferExpression" Name="WfInferExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfInferExpression@s:vl.workflow.WfInferExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTypeCastingExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTypeCastingExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTypeCastingExpression" Name="WfTypeCastingExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfTypeCastingExpression@s:vl.workflow.WfTypeCastingExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTypeTestingExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTypeTestingExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTypeTestingExpression" Name="WfTypeTestingExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfTypeTestingExpression@s:vl.workflow.WfTypeTestingExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTypeOfTypeExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTypeOfTypeExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTypeOfTypeExpression" Name="WfTypeOfTypeExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfTypeOfTypeExpression@s:vl.workflow.WfTypeOfTypeExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTypeOfExpressionExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfTypeOfExpressionExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfTypeOfExpressionExpression" Name="WfTypeOfExpressionExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfTypeOfExpressionExpression@s:vl.workflow.WfTypeOfExpressionExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfAttachEventExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfAttachEventExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfAttachEventExpression" Name="WfAttachEventExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfAttachEventExpression@s:vl.workflow.WfAttachEventExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfDetachEventExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfDetachEventExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDetachEventExpression" Name="WfDetachEventExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDetachEventExpression@s:vl.workflow.WfDetachEventExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfObserveExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfObserveExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfObserveExpression" Name="WfObserveExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfObserveExpression@s:vl.workflow.WfObserveExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfCallExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfCallExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfCallExpression" Name="WfCallExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfCallExpression@s:vl.workflow.WfCallExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfFunctionExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfFunctionExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionExpression" Name="WfFunctionExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFunctionExpression@s:vl.workflow.WfFunctionExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfNewClassExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfNewClassExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewClassExpression" Name="WfNewClassExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewClassExpression@s:vl.workflow.WfNewClassExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfNewInterfaceExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfNewInterfaceExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewInterfaceExpression" Name="WfNewInterfaceExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewInterfaceExpression@s:vl.workflow.WfNewInterfaceExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfVirtualCfeExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfVirtualCfeExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCfeExpression" Name="WfVirtualCfeExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCfeExpression@s:vl.workflow.WfVirtualCfeExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfVirtualCseExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::ExpressionVisitor::Visit(* WfVirtualCseExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseExpression" Name="WfVirtualCseExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCseExpression@s:vl.workflow.WfVirtualCseExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfExpression::IVisitor" Name="IVisitor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfExpression::IVisitor@s:vl.workflow.WfExpression" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>