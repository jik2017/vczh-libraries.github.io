<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.empty_visitor.DeclarationVisitor">
    <ClassDecl Access="Public" Name="DeclarationVisitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor" ClassType="Class">
      <Children>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Dispatch" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Dispatch(* WfVirtualCfeDeclaration)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Dispatch::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Dispatch(* WfVirtualCfeDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCfeDeclaration" Name="WfVirtualCfeDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCfeDeclaration@s:vl.workflow.WfVirtualCfeDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Dispatch" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Dispatch(* WfVirtualCseDeclaration)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Dispatch::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Dispatch(* WfVirtualCseDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseDeclaration" Name="WfVirtualCseDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCseDeclaration@s:vl.workflow.WfVirtualCseDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfNamespaceDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfNamespaceDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNamespaceDeclaration" Name="WfNamespaceDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNamespaceDeclaration@s:vl.workflow.WfNamespaceDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfFunctionDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfFunctionDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionDeclaration" Name="WfFunctionDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFunctionDeclaration@s:vl.workflow.WfFunctionDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfVariableDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfVariableDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVariableDeclaration" Name="WfVariableDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVariableDeclaration@s:vl.workflow.WfVariableDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfEventDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfEventDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEventDeclaration" Name="WfEventDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEventDeclaration@s:vl.workflow.WfEventDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfPropertyDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfPropertyDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfConstructorDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfConstructorDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorDeclaration" Name="WfConstructorDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfConstructorDeclaration@s:vl.workflow.WfConstructorDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfDestructorDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfDestructorDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDestructorDeclaration" Name="WfDestructorDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfDestructorDeclaration@s:vl.workflow.WfDestructorDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfClassDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfEnumDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfEnumDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfEnumDeclaration" Name="WfEnumDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfEnumDeclaration@s:vl.workflow.WfEnumDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfStructDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfStructDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStructDeclaration" Name="WfStructDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStructDeclaration@s:vl.workflow.WfStructDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfVirtualCfeDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfVirtualCfeDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCfeDeclaration" Name="WfVirtualCfeDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCfeDeclaration@s:vl.workflow.WfVirtualCfeDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfVirtualCseDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit::node" OverloadKey="::vl::workflow::empty_visitor::DeclarationVisitor::Visit(* WfVirtualCseDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseDeclaration" Name="WfVirtualCseDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCseDeclaration@s:vl.workflow.WfVirtualCseDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration::IVisitor" Name="IVisitor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfDeclaration::IVisitor@s:vl.workflow.WfDeclaration" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>