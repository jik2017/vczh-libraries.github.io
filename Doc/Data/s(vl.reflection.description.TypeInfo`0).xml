<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{Value}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;Value&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;Value&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vuint8_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::vuint8_t" Name="vuint8_t">
          <ReferencingOverloadKeys>
            <Key Value="::vl::vuint8_t@s:vl.vuint8_t" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vuint8_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vuint8_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vuint16_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::vuint16_t" Name="vuint16_t">
          <ReferencingOverloadKeys>
            <Key Value="::vl::vuint16_t@s:vl.vuint16_t" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vuint16_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vuint16_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vuint32_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::vuint32_t" Name="vuint32_t">
          <ReferencingOverloadKeys>
            <Key Value="::vl::vuint32_t@s:vl.vuint32_t" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vuint32_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vuint32_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vuint64_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::vuint64_t" Name="vuint64_t">
          <ReferencingOverloadKeys>
            <Key Value="::vl::vuint64_t@s:vl.vuint64_t" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vuint64_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vuint64_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vint8_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::vint8_t" Name="vint8_t">
          <ReferencingOverloadKeys>
            <Key Value="::vl::vint8_t@s:vl.vint8_t" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vint8_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vint8_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vint16_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::vint16_t" Name="vint16_t">
          <ReferencingOverloadKeys>
            <Key Value="::vl::vint16_t@s:vl.vint16_t" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vint16_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vint16_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vint32_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::vint32_t" Name="vint32_t">
          <ReferencingOverloadKeys>
            <Key Value="::vl::vint32_t@s:vl.vint32_t" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vint32_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vint32_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vint64_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::vint64_t" Name="vint64_t">
          <ReferencingOverloadKeys>
            <Key Value="::vl::vint64_t@s:vl.vint64_t" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vint64_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vint64_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{float}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl Name="float" />
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;float&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;float&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{double}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl Name="double" />
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;double&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;double&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{bool}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl Name="bool" />
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;bool&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;bool&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{wchar_t}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl Name="wchar_t" />
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;wchar_t&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;wchar_t&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{WString}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::WString" Name="WString">
          <ReferencingOverloadKeys>
            <Key Value="::vl::WString@s:vl.WString" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;WString&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;WString&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{Locale}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::Locale" Name="Locale">
          <ReferencingOverloadKeys>
            <Key Value="::vl::Locale@s:vl.Locale" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;Locale&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;Locale&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{Sys}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Sys" Name="Sys">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::Sys@s:vl.reflection.description.Sys" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;Sys&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;Sys&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{Math}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::Math" Name="Math">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::Math@s:vl.reflection.description.Math" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;Math&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;Math&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{void}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl Name="void" />
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;void&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;void&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{VoidValue}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::VoidValue" Name="VoidValue">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::VoidValue@s:vl.reflection.description.VoidValue" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;VoidValue&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;VoidValue&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IDescriptable}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IDescriptable&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IDescriptable&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{DescriptableObject}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::DescriptableObject" Name="DescriptableObject">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::DescriptableObject@s:vl.reflection.DescriptableObject" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;DescriptableObject&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;DescriptableObject&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{DateTime}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::DateTime" Name="DateTime">
          <ReferencingOverloadKeys>
            <Key Value="::vl::DateTime@s:vl.DateTime" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;DateTime&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;DateTime&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueEnumerator}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueEnumerator" Name="IValueEnumerator">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueEnumerator@s:vl.reflection.description.IValueEnumerator" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueEnumerator&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueEnumerator&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueEnumerable}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueEnumerable" Name="IValueEnumerable">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueEnumerable@s:vl.reflection.description.IValueEnumerable" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueEnumerable&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueEnumerable&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueReadonlyList}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueReadonlyList" Name="IValueReadonlyList">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueReadonlyList@s:vl.reflection.description.IValueReadonlyList" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueReadonlyList&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueReadonlyList&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueList}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueList" Name="IValueList">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueList@s:vl.reflection.description.IValueList" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueList&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueList&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueObservableList}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueObservableList" Name="IValueObservableList">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueObservableList@s:vl.reflection.description.IValueObservableList" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueObservableList&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueObservableList&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueReadonlyDictionary}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueReadonlyDictionary" Name="IValueReadonlyDictionary">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueReadonlyDictionary@s:vl.reflection.description.IValueReadonlyDictionary" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueReadonlyDictionary&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueReadonlyDictionary&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueDictionary}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueDictionary" Name="IValueDictionary">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueDictionary@s:vl.reflection.description.IValueDictionary" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueDictionary&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueDictionary&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueInterfaceProxy}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueInterfaceProxy" Name="IValueInterfaceProxy">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueInterfaceProxy@s:vl.reflection.description.IValueInterfaceProxy" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueInterfaceProxy&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueInterfaceProxy&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueFunctionProxy}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueFunctionProxy" Name="IValueFunctionProxy">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueFunctionProxy@s:vl.reflection.description.IValueFunctionProxy" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueFunctionProxy&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueFunctionProxy&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueSubscription}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueSubscription" Name="IValueSubscription">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueSubscription@s:vl.reflection.description.IValueSubscription" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueSubscription&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueSubscription&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueCallStack}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueCallStack" Name="IValueCallStack">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueCallStack@s:vl.reflection.description.IValueCallStack" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueCallStack&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueCallStack&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueException}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueException" Name="IValueException">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueException@s:vl.reflection.description.IValueException" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueException&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueException&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{CoroutineStatus}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::CoroutineStatus" Name="CoroutineStatus">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::CoroutineStatus@s:vl.reflection.description.CoroutineStatus" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;CoroutineStatus&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;CoroutineStatus&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{CoroutineResult}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::CoroutineResult" Name="CoroutineResult">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::CoroutineResult@s:vl.reflection.description.CoroutineResult" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;CoroutineResult&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;CoroutineResult&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{ICoroutine}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ICoroutine" Name="ICoroutine">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::ICoroutine@s:vl.reflection.description.ICoroutine" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ICoroutine&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ICoroutine&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{EnumerableCoroutine.IImpl}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::EnumerableCoroutine::IImpl" Name="IImpl">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::EnumerableCoroutine::IImpl@s:vl.reflection.description.EnumerableCoroutine" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::EnumerableCoroutine" Name="EnumerableCoroutine">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::EnumerableCoroutine@s:vl.reflection.description.EnumerableCoroutine" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;EnumerableCoroutine::IImpl&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;EnumerableCoroutine::IImpl&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{EnumerableCoroutine}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::EnumerableCoroutine" Name="EnumerableCoroutine">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::EnumerableCoroutine@s:vl.reflection.description.EnumerableCoroutine" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;EnumerableCoroutine&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;EnumerableCoroutine&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{AsyncStatus}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::AsyncStatus" Name="AsyncStatus">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::AsyncStatus@s:vl.reflection.description.AsyncStatus" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;AsyncStatus&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;AsyncStatus&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IAsync}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IAsync" Name="IAsync">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IAsync@s:vl.reflection.description.IAsync" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IAsync&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IAsync&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IPromise}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IPromise" Name="IPromise">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IPromise@s:vl.reflection.description.IPromise" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IPromise&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IPromise&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IFuture}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IFuture" Name="IFuture">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IFuture@s:vl.reflection.description.IFuture" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IFuture&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IFuture&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IAsyncScheduler}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IAsyncScheduler" Name="IAsyncScheduler">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IAsyncScheduler@s:vl.reflection.description.IAsyncScheduler" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IAsyncScheduler&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IAsyncScheduler&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{AsyncCoroutine.IImpl}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::AsyncCoroutine::IImpl" Name="IImpl">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::AsyncCoroutine::IImpl@s:vl.reflection.description.AsyncCoroutine" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::AsyncCoroutine" Name="AsyncCoroutine">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::AsyncCoroutine@s:vl.reflection.description.AsyncCoroutine" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;AsyncCoroutine::IImpl&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;AsyncCoroutine::IImpl&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{AsyncCoroutine}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::AsyncCoroutine" Name="AsyncCoroutine">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::AsyncCoroutine@s:vl.reflection.description.AsyncCoroutine" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;AsyncCoroutine&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;AsyncCoroutine&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IBoxedValue}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IBoxedValue&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IBoxedValue&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IBoxedValue.CompareResult}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue::CompareResult" Name="CompareResult">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IBoxedValue::CompareResult@s:vl.reflection.description.IBoxedValue" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IBoxedValue" Name="IBoxedValue">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::IBoxedValue@s:vl.reflection.description.IBoxedValue" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IBoxedValue::CompareResult&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IBoxedValue::CompareResult&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IValueType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueType" Name="IValueType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IValueType@s:vl.reflection.description.IValueType" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IValueType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IEnumType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEnumType" Name="IEnumType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IEnumType@s:vl.reflection.description.IEnumType" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IEnumType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IEnumType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{ISerializableType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ISerializableType" Name="ISerializableType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::ISerializableType@s:vl.reflection.description.ISerializableType" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ISerializableType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ISerializableType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{ITypeInfo}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ITypeInfo&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ITypeInfo&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{ITypeInfo.Decorator}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ITypeInfo::Decorator&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ITypeInfo::Decorator&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IMemberInfo}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IMemberInfo" Name="IMemberInfo">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IMemberInfo@s:vl.reflection.description.IMemberInfo" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IMemberInfo&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IMemberInfo&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IEventHandler}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventHandler" Name="IEventHandler">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IEventHandler@s:vl.reflection.description.IEventHandler" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IEventHandler&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IEventHandler&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IEventInfo}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IEventInfo" Name="IEventInfo">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IEventInfo@s:vl.reflection.description.IEventInfo" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IEventInfo&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IEventInfo&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IPropertyInfo}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IPropertyInfo" Name="IPropertyInfo">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IPropertyInfo@s:vl.reflection.description.IPropertyInfo" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IPropertyInfo&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IPropertyInfo&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IParameterInfo}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IParameterInfo" Name="IParameterInfo">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IParameterInfo@s:vl.reflection.description.IParameterInfo" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IParameterInfo&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IParameterInfo&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IMethodInfo}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IMethodInfo" Name="IMethodInfo">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IMethodInfo@s:vl.reflection.description.IMethodInfo" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IMethodInfo&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IMethodInfo&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{IMethodGroupInfo}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IMethodGroupInfo" Name="IMethodGroupInfo">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::IMethodGroupInfo@s:vl.reflection.description.IMethodGroupInfo" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IMethodGroupInfo&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;IMethodGroupInfo&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{TypeDescriptorFlags}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeDescriptorFlags" Name="TypeDescriptorFlags">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeDescriptorFlags@s:vl.reflection.description.TypeDescriptorFlags" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;TypeDescriptorFlags&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;TypeDescriptorFlags&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{ITypeDescriptor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeDescriptor" Name="ITypeDescriptor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::ITypeDescriptor@s:vl.reflection.description.ITypeDescriptor" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ITypeDescriptor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;ITypeDescriptor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingTextPos}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextPos" Name="ParsingTextPos">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingTextPos@s:vl.parsing.ParsingTextPos" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTextPos&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTextPos&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingTextRange}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTextRange" Name="ParsingTextRange">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingTextRange@s:vl.parsing.ParsingTextRange" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTextRange&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTextRange&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingTreeNode}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeNode" Name="ParsingTreeNode">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingTreeNode@s:vl.parsing.ParsingTreeNode" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeNode&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeNode&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingTreeToken}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeToken" Name="ParsingTreeToken">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingTreeToken@s:vl.parsing.ParsingTreeToken" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeToken&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeToken&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingTreeObject}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeObject" Name="ParsingTreeObject">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingTreeObject@s:vl.parsing.ParsingTreeObject" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeObject&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeObject&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingTreeArray}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeArray" Name="ParsingTreeArray">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingTreeArray@s:vl.parsing.ParsingTreeArray" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeArray&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeArray&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingTreeCustomBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeCustomBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingTreeCustomBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingToken}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingToken" Name="ParsingToken">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingToken@s:vl.parsing.ParsingToken" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingToken&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingToken&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{parsing.ParsingError}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingError" Name="ParsingError">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::ParsingError@s:vl.parsing.ParsingError" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing@ns:vl.parsing" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingError&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;parsing::ParsingError&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonNode}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonNode" Name="JsonNode">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonNode@s:vl.parsing.json.JsonNode" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonNode&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonNode&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonLiteral}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonLiteral" Name="JsonLiteral">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonLiteral@s:vl.parsing.json.JsonLiteral" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonLiteral&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonLiteral&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonLiteral.JsonValue}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonLiteral::JsonValue" Name="JsonValue">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonLiteral::JsonValue@s:vl.parsing.json.JsonLiteral" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonLiteral" Name="JsonLiteral">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json::JsonLiteral@s:vl.parsing.json.JsonLiteral" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl@ns:vl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonLiteral::JsonValue&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonLiteral::JsonValue&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonString}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonString" Name="JsonString">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonString@s:vl.parsing.json.JsonString" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonString&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonString&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonNumber}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonNumber" Name="JsonNumber">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonNumber@s:vl.parsing.json.JsonNumber" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonNumber&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonNumber&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonArray}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonArray" Name="JsonArray">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonArray@s:vl.parsing.json.JsonArray" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonArray&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonArray&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonObjectField}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonObjectField" Name="JsonObjectField">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonObjectField@s:vl.parsing.json.JsonObjectField" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonObjectField&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonObjectField&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonObject}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonObject" Name="JsonObject">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonObject@s:vl.parsing.json.JsonObject" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonObject&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonObject&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.json.JsonNode.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonNode::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::json::JsonNode::IVisitor@s:vl.parsing.json.JsonNode" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::json::JsonNode" Name="JsonNode">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::json::JsonNode@s:vl.parsing.json.JsonNode" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::json" Name="json">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::json@ns:vl.parsing.json" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl@ns:vl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::json::JsonNode::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlNode}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlNode" Name="XmlNode">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlNode@s:vl.parsing.xml.XmlNode" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlNode&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlNode&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlText}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlText" Name="XmlText">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlText@s:vl.parsing.xml.XmlText" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlText&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlText&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlCData}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlCData" Name="XmlCData">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlCData@s:vl.parsing.xml.XmlCData" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlCData&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlCData&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlAttribute}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlAttribute" Name="XmlAttribute">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlAttribute@s:vl.parsing.xml.XmlAttribute" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlAttribute&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlAttribute&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlComment}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlComment" Name="XmlComment">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlComment@s:vl.parsing.xml.XmlComment" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlComment&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlComment&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlElement" Name="XmlElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlElement@s:vl.parsing.xml.XmlElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlInstruction}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlInstruction" Name="XmlInstruction">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlInstruction@s:vl.parsing.xml.XmlInstruction" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlInstruction&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlInstruction&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlDocument}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlDocument" Name="XmlDocument">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlDocument@s:vl.parsing.xml.XmlDocument" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing@ns:vl.parsing" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlDocument&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlDocument&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.parsing.xml.XmlNode.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlNode::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::parsing::xml::XmlNode::IVisitor@s:vl.parsing.xml.XmlNode" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::parsing::xml::XmlNode" Name="XmlNode">
              <ReferencingOverloadKeys>
                <Key Value="::vl::parsing::xml::XmlNode@s:vl.parsing.xml.XmlNode" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::parsing::xml" Name="xml">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::parsing::xml@ns:vl.parsing.xml" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing@ns:vl.parsing" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl@ns:vl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::parsing::xml::XmlNode::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfClassMemberKind}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfClassMemberKind" Name="WfClassMemberKind">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfClassMemberKind@s:vl.workflow.WfClassMemberKind" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfClassMemberKind&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfClassMemberKind&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfClassMember}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfClassMember" Name="WfClassMember">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfClassMember@s:vl.workflow.WfClassMember" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfClassMember&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfClassMember&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfAttribute}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfAttribute" Name="WfAttribute">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfAttribute@s:vl.workflow.WfAttribute" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAttribute&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAttribute&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfPredefinedTypeName}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfPredefinedTypeName" Name="WfPredefinedTypeName">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfPredefinedTypeName@s:vl.workflow.WfPredefinedTypeName" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfPredefinedTypeName&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfPredefinedTypeName&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfPredefinedType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfPredefinedType" Name="WfPredefinedType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfPredefinedType@s:vl.workflow.WfPredefinedType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfPredefinedType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfPredefinedType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTopQualifiedType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTopQualifiedType" Name="WfTopQualifiedType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTopQualifiedType@s:vl.workflow.WfTopQualifiedType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTopQualifiedType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTopQualifiedType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfReferenceType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfReferenceType" Name="WfReferenceType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfReferenceType@s:vl.workflow.WfReferenceType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfReferenceType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfReferenceType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfRawPointerType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfRawPointerType" Name="WfRawPointerType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfRawPointerType@s:vl.workflow.WfRawPointerType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfRawPointerType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfRawPointerType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfSharedPointerType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfSharedPointerType" Name="WfSharedPointerType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfSharedPointerType@s:vl.workflow.WfSharedPointerType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSharedPointerType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSharedPointerType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfNullableType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfNullableType" Name="WfNullableType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfNullableType@s:vl.workflow.WfNullableType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNullableType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNullableType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfEnumerableType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfEnumerableType" Name="WfEnumerableType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfEnumerableType@s:vl.workflow.WfEnumerableType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumerableType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumerableType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfMapWritability}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfMapWritability" Name="WfMapWritability">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfMapWritability@s:vl.workflow.WfMapWritability" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfMapWritability&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfMapWritability&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfMapType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfMapType" Name="WfMapType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfMapType@s:vl.workflow.WfMapType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfMapType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfMapType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfFunctionType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionType" Name="WfFunctionType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfFunctionType@s:vl.workflow.WfFunctionType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfChildType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfChildType" Name="WfChildType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfChildType@s:vl.workflow.WfChildType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfChildType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfChildType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfNamespaceDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfNamespaceDeclaration" Name="WfNamespaceDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfNamespaceDeclaration@s:vl.workflow.WfNamespaceDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNamespaceDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNamespaceDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfFunctionArgument}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionArgument" Name="WfFunctionArgument">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfFunctionArgument@s:vl.workflow.WfFunctionArgument" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionArgument&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionArgument&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfFunctionAnonymity}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionAnonymity" Name="WfFunctionAnonymity">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfFunctionAnonymity@s:vl.workflow.WfFunctionAnonymity" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionAnonymity&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionAnonymity&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfFunctionDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionDeclaration" Name="WfFunctionDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfFunctionDeclaration@s:vl.workflow.WfFunctionDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfVariableDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVariableDeclaration" Name="WfVariableDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfVariableDeclaration@s:vl.workflow.WfVariableDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVariableDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVariableDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfEventDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfEventDeclaration" Name="WfEventDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfEventDeclaration@s:vl.workflow.WfEventDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEventDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEventDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfPropertyDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfPropertyDeclaration" Name="WfPropertyDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfPropertyDeclaration@s:vl.workflow.WfPropertyDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfPropertyDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfPropertyDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfClassKind}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfClassKind" Name="WfClassKind">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfClassKind@s:vl.workflow.WfClassKind" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfClassKind&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfClassKind&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfConstructorType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorType" Name="WfConstructorType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfConstructorType@s:vl.workflow.WfConstructorType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfConstructorType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfConstructorType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfBaseConstructorCall}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfBaseConstructorCall" Name="WfBaseConstructorCall">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfBaseConstructorCall@s:vl.workflow.WfBaseConstructorCall" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBaseConstructorCall&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBaseConstructorCall&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfConstructorDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorDeclaration" Name="WfConstructorDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfConstructorDeclaration@s:vl.workflow.WfConstructorDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfConstructorDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfConstructorDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfDestructorDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfDestructorDeclaration" Name="WfDestructorDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfDestructorDeclaration@s:vl.workflow.WfDestructorDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDestructorDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDestructorDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfClassDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfClassDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfClassDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfEnumKind}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfEnumKind" Name="WfEnumKind">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfEnumKind@s:vl.workflow.WfEnumKind" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumKind&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumKind&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfEnumItemKind}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfEnumItemKind" Name="WfEnumItemKind">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfEnumItemKind@s:vl.workflow.WfEnumItemKind" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumItemKind&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumItemKind&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfEnumItemIntersection}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfEnumItemIntersection" Name="WfEnumItemIntersection">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfEnumItemIntersection@s:vl.workflow.WfEnumItemIntersection" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumItemIntersection&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumItemIntersection&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfEnumItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfEnumItem" Name="WfEnumItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfEnumItem@s:vl.workflow.WfEnumItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfEnumDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfEnumDeclaration" Name="WfEnumDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfEnumDeclaration@s:vl.workflow.WfEnumDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfEnumDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfStructMember}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfStructMember" Name="WfStructMember">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfStructMember@s:vl.workflow.WfStructMember" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStructMember&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStructMember&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfStructDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfStructDeclaration" Name="WfStructDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfStructDeclaration@s:vl.workflow.WfStructDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStructDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStructDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfVirtualDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualDeclaration" Name="WfVirtualDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfVirtualDeclaration@s:vl.workflow.WfVirtualDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfAPConst}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfAPConst" Name="WfAPConst">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfAPConst@s:vl.workflow.WfAPConst" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAPConst&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAPConst&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfAPObserve}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfAPObserve" Name="WfAPObserve">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfAPObserve@s:vl.workflow.WfAPObserve" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAPObserve&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAPObserve&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfAutoPropertyDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfAutoPropertyDeclaration" Name="WfAutoPropertyDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfAutoPropertyDeclaration@s:vl.workflow.WfAutoPropertyDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAutoPropertyDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAutoPropertyDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfCastResultInterfaceDeclaration}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfCastResultInterfaceDeclaration" Name="WfCastResultInterfaceDeclaration">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfCastResultInterfaceDeclaration@s:vl.workflow.WfCastResultInterfaceDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCastResultInterfaceDeclaration&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCastResultInterfaceDeclaration&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfBreakStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfBreakStatement" Name="WfBreakStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfBreakStatement@s:vl.workflow.WfBreakStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBreakStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBreakStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfContinueStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfContinueStatement" Name="WfContinueStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfContinueStatement@s:vl.workflow.WfContinueStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfContinueStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfContinueStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfReturnStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfReturnStatement" Name="WfReturnStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfReturnStatement@s:vl.workflow.WfReturnStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfReturnStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfReturnStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfDeleteStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfDeleteStatement" Name="WfDeleteStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfDeleteStatement@s:vl.workflow.WfDeleteStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDeleteStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDeleteStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfRaiseExceptionStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfRaiseExceptionStatement" Name="WfRaiseExceptionStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfRaiseExceptionStatement@s:vl.workflow.WfRaiseExceptionStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfRaiseExceptionStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfRaiseExceptionStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfIfStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfIfStatement" Name="WfIfStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfIfStatement@s:vl.workflow.WfIfStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfIfStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfIfStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfWhileStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfWhileStatement" Name="WfWhileStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfWhileStatement@s:vl.workflow.WfWhileStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfWhileStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfWhileStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTryStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTryStatement" Name="WfTryStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTryStatement@s:vl.workflow.WfTryStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTryStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTryStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfBlockStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfBlockStatement" Name="WfBlockStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfBlockStatement@s:vl.workflow.WfBlockStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBlockStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBlockStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfVariableStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVariableStatement" Name="WfVariableStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfVariableStatement@s:vl.workflow.WfVariableStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVariableStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVariableStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfExpressionStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfExpressionStatement" Name="WfExpressionStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfExpressionStatement@s:vl.workflow.WfExpressionStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfExpressionStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfExpressionStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfVirtualStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualStatement" Name="WfVirtualStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfVirtualStatement@s:vl.workflow.WfVirtualStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfForEachDirection}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfForEachDirection" Name="WfForEachDirection">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfForEachDirection@s:vl.workflow.WfForEachDirection" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfForEachDirection&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfForEachDirection&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfForEachStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfForEachStatement" Name="WfForEachStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfForEachStatement@s:vl.workflow.WfForEachStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfForEachStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfForEachStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfSwitchCase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfSwitchCase" Name="WfSwitchCase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfSwitchCase@s:vl.workflow.WfSwitchCase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSwitchCase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSwitchCase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfSwitchStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfSwitchStatement" Name="WfSwitchStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfSwitchStatement@s:vl.workflow.WfSwitchStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSwitchStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSwitchStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfCoProviderStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfCoProviderStatement" Name="WfCoProviderStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfCoProviderStatement@s:vl.workflow.WfCoProviderStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoProviderStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoProviderStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfCoroutineStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfCoroutineStatement" Name="WfCoroutineStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfCoroutineStatement@s:vl.workflow.WfCoroutineStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoroutineStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoroutineStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfCoPauseStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfCoPauseStatement" Name="WfCoPauseStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfCoPauseStatement@s:vl.workflow.WfCoPauseStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoPauseStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoPauseStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfCoOperatorStatement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfCoOperatorStatement" Name="WfCoOperatorStatement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfCoOperatorStatement@s:vl.workflow.WfCoOperatorStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoOperatorStatement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoOperatorStatement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfThisExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfThisExpression" Name="WfThisExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfThisExpression@s:vl.workflow.WfThisExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfThisExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfThisExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTopQualifiedExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTopQualifiedExpression" Name="WfTopQualifiedExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTopQualifiedExpression@s:vl.workflow.WfTopQualifiedExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTopQualifiedExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTopQualifiedExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfReferenceExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfReferenceExpression" Name="WfReferenceExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfReferenceExpression@s:vl.workflow.WfReferenceExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfReferenceExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfReferenceExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfOrderedNameExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfOrderedNameExpression" Name="WfOrderedNameExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfOrderedNameExpression@s:vl.workflow.WfOrderedNameExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfOrderedNameExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfOrderedNameExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfOrderedLambdaExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfOrderedLambdaExpression" Name="WfOrderedLambdaExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfOrderedLambdaExpression@s:vl.workflow.WfOrderedLambdaExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfOrderedLambdaExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfOrderedLambdaExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfMemberExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfMemberExpression" Name="WfMemberExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfMemberExpression@s:vl.workflow.WfMemberExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfMemberExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfMemberExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfChildExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfChildExpression" Name="WfChildExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfChildExpression@s:vl.workflow.WfChildExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfChildExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfChildExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfLiteralValue}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfLiteralValue" Name="WfLiteralValue">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfLiteralValue@s:vl.workflow.WfLiteralValue" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfLiteralValue&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfLiteralValue&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfLiteralExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfLiteralExpression" Name="WfLiteralExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfLiteralExpression@s:vl.workflow.WfLiteralExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfLiteralExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfLiteralExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfFloatingExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfFloatingExpression" Name="WfFloatingExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfFloatingExpression@s:vl.workflow.WfFloatingExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFloatingExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFloatingExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfIntegerExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfIntegerExpression" Name="WfIntegerExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfIntegerExpression@s:vl.workflow.WfIntegerExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfIntegerExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfIntegerExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfStringExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfStringExpression" Name="WfStringExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfStringExpression@s:vl.workflow.WfStringExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStringExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStringExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfUnaryOperator}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfUnaryOperator" Name="WfUnaryOperator">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfUnaryOperator@s:vl.workflow.WfUnaryOperator" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfUnaryOperator&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfUnaryOperator&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfUnaryExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfUnaryExpression" Name="WfUnaryExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfUnaryExpression@s:vl.workflow.WfUnaryExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfUnaryExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfUnaryExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfBinaryOperator}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfBinaryOperator" Name="WfBinaryOperator">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfBinaryOperator@s:vl.workflow.WfBinaryOperator" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBinaryOperator&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBinaryOperator&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfBinaryExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfBinaryExpression" Name="WfBinaryExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfBinaryExpression@s:vl.workflow.WfBinaryExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBinaryExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBinaryExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfLetVariable}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfLetVariable" Name="WfLetVariable">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfLetVariable@s:vl.workflow.WfLetVariable" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfLetVariable&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfLetVariable&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfLetExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfLetExpression" Name="WfLetExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfLetExpression@s:vl.workflow.WfLetExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfLetExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfLetExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfIfExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfIfExpression" Name="WfIfExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfIfExpression@s:vl.workflow.WfIfExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfIfExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfIfExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfRangeBoundary}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfRangeBoundary" Name="WfRangeBoundary">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfRangeBoundary@s:vl.workflow.WfRangeBoundary" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfRangeBoundary&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfRangeBoundary&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfRangeExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfRangeExpression" Name="WfRangeExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfRangeExpression@s:vl.workflow.WfRangeExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfRangeExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfRangeExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfSetTesting}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfSetTesting" Name="WfSetTesting">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfSetTesting@s:vl.workflow.WfSetTesting" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSetTesting&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSetTesting&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfSetTestingExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfSetTestingExpression" Name="WfSetTestingExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfSetTestingExpression@s:vl.workflow.WfSetTestingExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSetTestingExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfSetTestingExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfConstructorArgument}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorArgument" Name="WfConstructorArgument">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfConstructorArgument@s:vl.workflow.WfConstructorArgument" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfConstructorArgument&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfConstructorArgument&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfConstructorExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfConstructorExpression" Name="WfConstructorExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfConstructorExpression@s:vl.workflow.WfConstructorExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfConstructorExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfConstructorExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfInferExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfInferExpression" Name="WfInferExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfInferExpression@s:vl.workflow.WfInferExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfInferExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfInferExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTypeCastingStrategy}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTypeCastingStrategy" Name="WfTypeCastingStrategy">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTypeCastingStrategy@s:vl.workflow.WfTypeCastingStrategy" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeCastingStrategy&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeCastingStrategy&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTypeCastingExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTypeCastingExpression" Name="WfTypeCastingExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTypeCastingExpression@s:vl.workflow.WfTypeCastingExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeCastingExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeCastingExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTypeTesting}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTypeTesting" Name="WfTypeTesting">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTypeTesting@s:vl.workflow.WfTypeTesting" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeTesting&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeTesting&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTypeTestingExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTypeTestingExpression" Name="WfTypeTestingExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTypeTestingExpression@s:vl.workflow.WfTypeTestingExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeTestingExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeTestingExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTypeOfTypeExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTypeOfTypeExpression" Name="WfTypeOfTypeExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTypeOfTypeExpression@s:vl.workflow.WfTypeOfTypeExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeOfTypeExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeOfTypeExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfTypeOfExpressionExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfTypeOfExpressionExpression" Name="WfTypeOfExpressionExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfTypeOfExpressionExpression@s:vl.workflow.WfTypeOfExpressionExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeOfExpressionExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfTypeOfExpressionExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfAttachEventExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfAttachEventExpression" Name="WfAttachEventExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfAttachEventExpression@s:vl.workflow.WfAttachEventExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAttachEventExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfAttachEventExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfDetachEventExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfDetachEventExpression" Name="WfDetachEventExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfDetachEventExpression@s:vl.workflow.WfDetachEventExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDetachEventExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDetachEventExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfObserveType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfObserveType" Name="WfObserveType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfObserveType@s:vl.workflow.WfObserveType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfObserveType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfObserveType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfObserveExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfObserveExpression" Name="WfObserveExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfObserveExpression@s:vl.workflow.WfObserveExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfObserveExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfObserveExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfCallExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfCallExpression" Name="WfCallExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfCallExpression@s:vl.workflow.WfCallExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCallExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCallExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfFunctionExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfFunctionExpression" Name="WfFunctionExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfFunctionExpression@s:vl.workflow.WfFunctionExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFunctionExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfNewClassExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfNewClassExpression" Name="WfNewClassExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfNewClassExpression@s:vl.workflow.WfNewClassExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNewClassExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNewClassExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfNewInterfaceExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfNewInterfaceExpression" Name="WfNewInterfaceExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfNewInterfaceExpression@s:vl.workflow.WfNewInterfaceExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNewInterfaceExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNewInterfaceExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfVirtualExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualExpression" Name="WfVirtualExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfVirtualExpression@s:vl.workflow.WfVirtualExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfBindExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfBindExpression" Name="WfBindExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfBindExpression@s:vl.workflow.WfBindExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBindExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfBindExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfFormatExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfFormatExpression" Name="WfFormatExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfFormatExpression@s:vl.workflow.WfFormatExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFormatExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfFormatExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfNewCoroutineExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfNewCoroutineExpression" Name="WfNewCoroutineExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfNewCoroutineExpression@s:vl.workflow.WfNewCoroutineExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNewCoroutineExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfNewCoroutineExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfMixinCastExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfMixinCastExpression" Name="WfMixinCastExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfMixinCastExpression@s:vl.workflow.WfMixinCastExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfMixinCastExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfMixinCastExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfExpectedTypeCastExpression}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfExpectedTypeCastExpression" Name="WfExpectedTypeCastExpression">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfExpectedTypeCastExpression@s:vl.workflow.WfExpectedTypeCastExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfExpectedTypeCastExpression&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfExpectedTypeCastExpression&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfModuleUsingFragment}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModuleUsingFragment" Name="WfModuleUsingFragment">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfModuleUsingFragment@s:vl.workflow.WfModuleUsingFragment" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingFragment&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingFragment&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfModuleUsingNameFragment}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModuleUsingNameFragment" Name="WfModuleUsingNameFragment">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfModuleUsingNameFragment@s:vl.workflow.WfModuleUsingNameFragment" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingNameFragment&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingNameFragment&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfModuleUsingWildCardFragment}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModuleUsingWildCardFragment" Name="WfModuleUsingWildCardFragment">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfModuleUsingWildCardFragment@s:vl.workflow.WfModuleUsingWildCardFragment" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingWildCardFragment&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingWildCardFragment&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfModuleUsingItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModuleUsingItem" Name="WfModuleUsingItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfModuleUsingItem@s:vl.workflow.WfModuleUsingItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfModuleUsingPath}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModuleUsingPath" Name="WfModuleUsingPath">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfModuleUsingPath@s:vl.workflow.WfModuleUsingPath" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingPath&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingPath&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfModuleType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModuleType" Name="WfModuleType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfModuleType@s:vl.workflow.WfModuleType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfModule}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModule" Name="WfModule">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfModule@s:vl.workflow.WfModule" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow@ns:vl.workflow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModule&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModule&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfType.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfType::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfType::IVisitor@s:vl.workflow.WfType" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfType::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfType::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfExpression.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfExpression::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfExpression::IVisitor@s:vl.workflow.WfExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfExpression::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfExpression::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfStatement.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfStatement::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfStatement::IVisitor@s:vl.workflow.WfStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStatement::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfStatement::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfDeclaration.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfDeclaration::IVisitor@s:vl.workflow.WfDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfDeclaration::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfVirtualDeclaration.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualDeclaration::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfVirtualDeclaration::IVisitor@s:vl.workflow.WfVirtualDeclaration" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualDeclaration" Name="WfVirtualDeclaration">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfVirtualDeclaration@s:vl.workflow.WfVirtualDeclaration" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualDeclaration::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualDeclaration::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfVirtualStatement.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualStatement::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfVirtualStatement::IVisitor@s:vl.workflow.WfVirtualStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualStatement" Name="WfVirtualStatement">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfVirtualStatement@s:vl.workflow.WfVirtualStatement" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualStatement::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualStatement::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfCoroutineStatement.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfCoroutineStatement::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfCoroutineStatement::IVisitor@s:vl.workflow.WfCoroutineStatement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfCoroutineStatement" Name="WfCoroutineStatement">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfCoroutineStatement@s:vl.workflow.WfCoroutineStatement" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoroutineStatement::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfCoroutineStatement::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfVirtualExpression.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualExpression::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfVirtualExpression::IVisitor@s:vl.workflow.WfVirtualExpression" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualExpression" Name="WfVirtualExpression">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfVirtualExpression@s:vl.workflow.WfVirtualExpression" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfVirtualExpression::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.workflow.WfModuleUsingFragment.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModuleUsingFragment::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::workflow::WfModuleUsingFragment::IVisitor@s:vl.workflow.WfModuleUsingFragment" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfModuleUsingFragment" Name="WfModuleUsingFragment">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfModuleUsingFragment@s:vl.workflow.WfModuleUsingFragment" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::workflow" Name="workflow">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow@ns:vl.workflow" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingFragment::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::workflow::WfModuleUsingFragment::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.Color}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::Color" Name="Color">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::Color@s:vl.presentation.Color" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Color&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Color&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.Alignment}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::Alignment" Name="Alignment">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::Alignment@s:vl.presentation.Alignment" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Alignment&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Alignment&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.AxisDirection}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::AxisDirection" Name="AxisDirection">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::AxisDirection@s:vl.presentation.AxisDirection" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::AxisDirection&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::AxisDirection&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.TextPos}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::TextPos" Name="TextPos">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::TextPos@s:vl.presentation.TextPos" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::TextPos&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::TextPos&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GridPos}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GridPos" Name="GridPos">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GridPos@s:vl.presentation.GridPos" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GridPos&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GridPos&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.Point}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Point&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Point&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.Size}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Size&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Size&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.Rect}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Rect&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Rect&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.Margin}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Margin&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::Margin&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.FontProperties}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::FontProperties" Name="FontProperties">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::FontProperties@s:vl.presentation.FontProperties" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::FontProperties&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::FontProperties&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GlobalStringKey}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GlobalStringKey" Name="GlobalStringKey">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GlobalStringKey@s:vl.presentation.GlobalStringKey" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GlobalStringKey&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GlobalStringKey&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeImageFrame}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeImageFrame" Name="INativeImageFrame">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeImageFrame@s:vl.presentation.INativeImageFrame" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeImageFrame&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeImageFrame&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeImage}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeImage" Name="INativeImage">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeImage@s:vl.presentation.INativeImage" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeImage&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeImage&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeImage.FormatType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeImage::FormatType" Name="FormatType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeImage::FormatType@s:vl.presentation.INativeImage" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeImage" Name="INativeImage">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeImage@s:vl.presentation.INativeImage" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeImage::FormatType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeImage::FormatType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeCursor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeCursor" Name="INativeCursor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeCursor@s:vl.presentation.INativeCursor" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeCursor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeCursor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeCursor.SystemCursorType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeCursor::SystemCursorType" Name="SystemCursorType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeCursor::SystemCursorType@s:vl.presentation.INativeCursor" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeCursor" Name="INativeCursor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeCursor@s:vl.presentation.INativeCursor" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeCursor::SystemCursorType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeCursor::SystemCursorType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeWindow}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeWindow&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeWindow&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeWindow.WindowSizeState}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow::WindowSizeState" Name="WindowSizeState">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeWindow::WindowSizeState@s:vl.presentation.INativeWindow" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeWindow::WindowSizeState&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeWindow::WindowSizeState&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDelay}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDelay" Name="INativeDelay">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDelay@s:vl.presentation.INativeDelay" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDelay&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDelay&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDelay.ExecuteStatus}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDelay::ExecuteStatus" Name="ExecuteStatus">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDelay::ExecuteStatus@s:vl.presentation.INativeDelay" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDelay" Name="INativeDelay">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDelay@s:vl.presentation.INativeDelay" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDelay::ExecuteStatus&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDelay::ExecuteStatus&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeScreen}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeScreen" Name="INativeScreen">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeScreen@s:vl.presentation.INativeScreen" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeScreen&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeScreen&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeImageService}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeImageService" Name="INativeImageService">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeImageService@s:vl.presentation.INativeImageService" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeImageService&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeImageService&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeResourceService}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeResourceService" Name="INativeResourceService">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeResourceService@s:vl.presentation.INativeResourceService" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeResourceService&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeResourceService&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeAsyncService}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeAsyncService" Name="INativeAsyncService">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeAsyncService@s:vl.presentation.INativeAsyncService" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeAsyncService&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeAsyncService&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeClipboardService}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeClipboardService" Name="INativeClipboardService">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeClipboardService@s:vl.presentation.INativeClipboardService" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeClipboardService&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeClipboardService&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeScreenService}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeScreenService" Name="INativeScreenService">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeScreenService@s:vl.presentation.INativeScreenService" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeScreenService&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeScreenService&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeInputService}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeInputService" Name="INativeInputService">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeInputService@s:vl.presentation.INativeInputService" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeInputService&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeInputService&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDialogService.MessageBoxButtonsInput}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::MessageBoxButtonsInput" Name="MessageBoxButtonsInput">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDialogService::MessageBoxButtonsInput@s:vl.presentation.INativeDialogService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxButtonsInput&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxButtonsInput&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDialogService.MessageBoxButtonsOutput}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::MessageBoxButtonsOutput" Name="MessageBoxButtonsOutput">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDialogService::MessageBoxButtonsOutput@s:vl.presentation.INativeDialogService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxButtonsOutput&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxButtonsOutput&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDialogService.MessageBoxDefaultButton}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::MessageBoxDefaultButton" Name="MessageBoxDefaultButton">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDialogService::MessageBoxDefaultButton@s:vl.presentation.INativeDialogService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxDefaultButton&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxDefaultButton&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDialogService.MessageBoxIcons}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::MessageBoxIcons" Name="MessageBoxIcons">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDialogService::MessageBoxIcons@s:vl.presentation.INativeDialogService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxIcons&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxIcons&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDialogService.MessageBoxModalOptions}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::MessageBoxModalOptions" Name="MessageBoxModalOptions">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDialogService::MessageBoxModalOptions@s:vl.presentation.INativeDialogService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxModalOptions&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::MessageBoxModalOptions&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDialogService.ColorDialogCustomColorOptions}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::ColorDialogCustomColorOptions" Name="ColorDialogCustomColorOptions">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDialogService::ColorDialogCustomColorOptions@s:vl.presentation.INativeDialogService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::ColorDialogCustomColorOptions&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::ColorDialogCustomColorOptions&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDialogService.FileDialogTypes}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::FileDialogTypes" Name="FileDialogTypes">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDialogService::FileDialogTypes@s:vl.presentation.INativeDialogService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::FileDialogTypes&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::FileDialogTypes&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeDialogService.FileDialogOptions}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService::FileDialogOptions" Name="FileDialogOptions">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeDialogService::FileDialogOptions@s:vl.presentation.INativeDialogService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeDialogService" Name="INativeDialogService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeDialogService@s:vl.presentation.INativeDialogService" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::FileDialogOptions&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeDialogService::FileDialogOptions&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeController" Name="INativeController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeController@s:vl.presentation.INativeController" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiImageData}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiImageData" Name="GuiImageData">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiImageData@s:vl.presentation.GuiImageData" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiImageData&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiImageData&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiTextData}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiTextData" Name="GuiTextData">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiTextData@s:vl.presentation.GuiTextData" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiTextData&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiTextData&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentFontSize}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentFontSize" Name="DocumentFontSize">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentFontSize@s:vl.presentation.DocumentFontSize" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentFontSize&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentFontSize&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentStyleProperties}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentStyleProperties" Name="DocumentStyleProperties">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentStyleProperties@s:vl.presentation.DocumentStyleProperties" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentStyleProperties&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentStyleProperties&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentRun" Name="DocumentRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentRun@s:vl.presentation.DocumentRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentContainerRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentContainerRun" Name="DocumentContainerRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentContainerRun@s:vl.presentation.DocumentContainerRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentContainerRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentContainerRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentContentRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentContentRun" Name="DocumentContentRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentContentRun@s:vl.presentation.DocumentContentRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentContentRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentContentRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentTextRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentTextRun" Name="DocumentTextRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentTextRun@s:vl.presentation.DocumentTextRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentTextRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentTextRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentInlineObjectRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentInlineObjectRun" Name="DocumentInlineObjectRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentInlineObjectRun@s:vl.presentation.DocumentInlineObjectRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentInlineObjectRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentInlineObjectRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentImageRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentImageRun" Name="DocumentImageRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentImageRun@s:vl.presentation.DocumentImageRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentImageRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentImageRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentEmbeddedObjectRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentEmbeddedObjectRun" Name="DocumentEmbeddedObjectRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentEmbeddedObjectRun@s:vl.presentation.DocumentEmbeddedObjectRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentEmbeddedObjectRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentEmbeddedObjectRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentStylePropertiesRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentStylePropertiesRun" Name="DocumentStylePropertiesRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentStylePropertiesRun@s:vl.presentation.DocumentStylePropertiesRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentStylePropertiesRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentStylePropertiesRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentStyleApplicationRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentStyleApplicationRun" Name="DocumentStyleApplicationRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentStyleApplicationRun@s:vl.presentation.DocumentStyleApplicationRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentStyleApplicationRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentStyleApplicationRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentHyperlinkRun.Package}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentHyperlinkRun::Package" Name="Package">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentHyperlinkRun::Package@s:vl.presentation.DocumentHyperlinkRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentHyperlinkRun" Name="DocumentHyperlinkRun">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::DocumentHyperlinkRun@s:vl.presentation.DocumentHyperlinkRun" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentHyperlinkRun::Package&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentHyperlinkRun::Package&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentHyperlinkRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentHyperlinkRun" Name="DocumentHyperlinkRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentHyperlinkRun@s:vl.presentation.DocumentHyperlinkRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentHyperlinkRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentHyperlinkRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentParagraphRun}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentParagraphRun" Name="DocumentParagraphRun">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentParagraphRun@s:vl.presentation.DocumentParagraphRun" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentParagraphRun&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentParagraphRun&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentStyle}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentStyle" Name="DocumentStyle">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentStyle@s:vl.presentation.DocumentStyle" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentStyle&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentStyle&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.DocumentModel}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::DocumentModel" Name="DocumentModel">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::DocumentModel@s:vl.presentation.DocumentModel" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentModel&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::DocumentModel&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResourceNodeBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResourceNodeBase" Name="GuiResourceNodeBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResourceNodeBase@s:vl.presentation.GuiResourceNodeBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceNodeBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceNodeBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResourceLocation}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResourceLocation" Name="GuiResourceLocation">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResourceLocation@s:vl.presentation.GuiResourceLocation" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceLocation&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceLocation&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResourceTextPos}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResourceTextPos" Name="GuiResourceTextPos">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResourceTextPos@s:vl.presentation.GuiResourceTextPos" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceTextPos&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceTextPos&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResourceError}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResourceError" Name="GuiResourceError">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResourceError@s:vl.presentation.GuiResourceError" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceError&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceError&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResourceItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResourceItem" Name="GuiResourceItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResourceItem@s:vl.presentation.GuiResourceItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResourceFolder}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResourceFolder" Name="GuiResourceFolder">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResourceFolder@s:vl.presentation.GuiResourceFolder" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceFolder&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceFolder&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResource}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResource" Name="GuiResource">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResource@s:vl.presentation.GuiResource" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResource&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResource&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResourcePathResolver}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResourcePathResolver" Name="GuiResourcePathResolver">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResourcePathResolver@s:vl.presentation.GuiResourcePathResolver" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourcePathResolver&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourcePathResolver&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.GuiResourceUsage}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiResourceUsage" Name="GuiResourceUsage">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiResourceUsage@s:vl.presentation.GuiResourceUsage" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceUsage&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::GuiResourceUsage&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.IGuiResourceManager}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::IGuiResourceManager" Name="IGuiResourceManager">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::IGuiResourceManager@s:vl.presentation.IGuiResourceManager" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::IGuiResourceManager&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::IGuiResourceManager&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.INativeWindowListener.HitTestResult}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener::HitTestResult" Name="HitTestResult">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::INativeWindowListener::HitTestResult@s:vl.presentation.INativeWindowListener" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::INativeWindowListener" Name="INativeWindowListener">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::INativeWindowListener@s:vl.presentation.INativeWindowListener" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeWindowListener::HitTestResult&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::INativeWindowListener::HitTestResult&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.IGuiGraphicsElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsElement" Name="IGuiGraphicsElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::IGuiGraphicsElement@s:vl.presentation.elements.IGuiGraphicsElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::IGuiGraphicsElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::IGuiGraphicsElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.IGuiGraphicsParagraph}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph" Name="IGuiGraphicsParagraph">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph@s:vl.presentation.elements.IGuiGraphicsParagraph" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::IGuiGraphicsParagraph&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::IGuiGraphicsParagraph&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.IGuiGraphicsParagraph.CaretRelativePosition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition" Name="CaretRelativePosition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition@s:vl.presentation.elements.IGuiGraphicsParagraph" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::IGuiGraphicsParagraph" Name="IGuiGraphicsParagraph">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::IGuiGraphicsParagraph@s:vl.presentation.elements.IGuiGraphicsParagraph" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::IGuiGraphicsParagraph::CaretRelativePosition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.ElementShape}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::ElementShape" Name="ElementShape">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::ElementShape@s:vl.presentation.elements.ElementShape" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::ElementShape&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::ElementShape&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiSolidBorderElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiSolidBorderElement" Name="GuiSolidBorderElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiSolidBorderElement@s:vl.presentation.elements.GuiSolidBorderElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiSolidBorderElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiSolidBorderElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiRoundBorderElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiRoundBorderElement" Name="GuiRoundBorderElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiRoundBorderElement@s:vl.presentation.elements.GuiRoundBorderElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiRoundBorderElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiRoundBorderElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.Gui3DBorderElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::Gui3DBorderElement" Name="Gui3DBorderElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::Gui3DBorderElement@s:vl.presentation.elements.Gui3DBorderElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::Gui3DBorderElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::Gui3DBorderElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.Gui3DSplitterElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::Gui3DSplitterElement" Name="Gui3DSplitterElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::Gui3DSplitterElement@s:vl.presentation.elements.Gui3DSplitterElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::Gui3DSplitterElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::Gui3DSplitterElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.Gui3DSplitterElement.Direction}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::Gui3DSplitterElement::Direction" Name="Direction">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::Gui3DSplitterElement::Direction@s:vl.presentation.elements.Gui3DSplitterElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::Gui3DSplitterElement" Name="Gui3DSplitterElement">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::Gui3DSplitterElement@s:vl.presentation.elements.Gui3DSplitterElement" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::Gui3DSplitterElement::Direction&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::Gui3DSplitterElement::Direction&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiSolidBackgroundElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiSolidBackgroundElement" Name="GuiSolidBackgroundElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiSolidBackgroundElement@s:vl.presentation.elements.GuiSolidBackgroundElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiSolidBackgroundElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiSolidBackgroundElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiGradientBackgroundElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiGradientBackgroundElement" Name="GuiGradientBackgroundElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiGradientBackgroundElement@s:vl.presentation.elements.GuiGradientBackgroundElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiGradientBackgroundElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiGradientBackgroundElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiGradientBackgroundElement.Direction}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiGradientBackgroundElement::Direction" Name="Direction">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiGradientBackgroundElement::Direction@s:vl.presentation.elements.GuiGradientBackgroundElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiGradientBackgroundElement" Name="GuiGradientBackgroundElement">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::GuiGradientBackgroundElement@s:vl.presentation.elements.GuiGradientBackgroundElement" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiGradientBackgroundElement::Direction&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiGradientBackgroundElement::Direction&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiSolidLabelElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiSolidLabelElement" Name="GuiSolidLabelElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiSolidLabelElement@s:vl.presentation.elements.GuiSolidLabelElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiSolidLabelElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiSolidLabelElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiImageFrameElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiImageFrameElement" Name="GuiImageFrameElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiImageFrameElement@s:vl.presentation.elements.GuiImageFrameElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiImageFrameElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiImageFrameElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiPolygonElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiPolygonElement" Name="GuiPolygonElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiPolygonElement@s:vl.presentation.elements.GuiPolygonElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiPolygonElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiPolygonElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.text.TextLines}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text::TextLines" Name="TextLines">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::text::TextLines@s:vl.presentation.elements.text.TextLines" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text" Name="text">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text@ns:vl.presentation.elements.text" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::text::TextLines&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::text::TextLines&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.text.ColorItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorItem" Name="ColorItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::text::ColorItem@s:vl.presentation.elements.text.ColorItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text" Name="text">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text@ns:vl.presentation.elements.text" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::text::ColorItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::text::ColorItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.text.ColorEntry}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text::ColorEntry" Name="ColorEntry">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::text::ColorEntry@s:vl.presentation.elements.text.ColorEntry" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::text" Name="text">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements::text@ns:vl.presentation.elements.text" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::text::ColorEntry&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::text::ColorEntry&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiColorizedTextElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiColorizedTextElement" Name="GuiColorizedTextElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiColorizedTextElement@s:vl.presentation.elements.GuiColorizedTextElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiColorizedTextElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiColorizedTextElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.elements.GuiDocumentElement}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::elements::GuiDocumentElement" Name="GuiDocumentElement">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::elements::GuiDocumentElement@s:vl.presentation.elements.GuiDocumentElement" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::elements" Name="elements">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::elements@ns:vl.presentation.elements" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiDocumentElement&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::elements::GuiDocumentElement&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.KeyDirection}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::KeyDirection" Name="KeyDirection">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::KeyDirection@s:vl.presentation.compositions.KeyDirection" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::KeyDirection&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::KeyDirection&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.IGuiAxis}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiAxis" Name="IGuiAxis">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::IGuiAxis@s:vl.presentation.compositions.IGuiAxis" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiAxis&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiAxis&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiDefaultAxis}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiDefaultAxis" Name="GuiDefaultAxis">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiDefaultAxis@s:vl.presentation.compositions.GuiDefaultAxis" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiDefaultAxis&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiDefaultAxis&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiAxis}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiAxis" Name="GuiAxis">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiAxis@s:vl.presentation.compositions.GuiAxis" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiAxis&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiAxis&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiGraphicsComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiGraphicsComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiGraphicsComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiGraphicsComposition.MinSizeLimitation}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation" Name="MinSizeLimitation">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition::MinSizeLimitation@s:vl.presentation.compositions.GuiGraphicsComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiGraphicsComposition::MinSizeLimitation&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiGraphicsComposition::MinSizeLimitation&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiGraphicsSite}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsSite" Name="GuiGraphicsSite">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiGraphicsSite@s:vl.presentation.compositions.GuiGraphicsSite" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiGraphicsSite&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiGraphicsSite&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiWindowComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiWindowComposition" Name="GuiWindowComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiWindowComposition@s:vl.presentation.compositions.GuiWindowComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiWindowComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiWindowComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiBoundsComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiBoundsComposition" Name="GuiBoundsComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiBoundsComposition@s:vl.presentation.compositions.GuiBoundsComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiBoundsComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiBoundsComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiStackComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition" Name="GuiStackComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiStackComposition@s:vl.presentation.compositions.GuiStackComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiStackComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiStackComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiStackComposition.Direction}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition::Direction" Name="Direction">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiStackComposition::Direction@s:vl.presentation.compositions.GuiStackComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition" Name="GuiStackComposition">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiStackComposition@s:vl.presentation.compositions.GuiStackComposition" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiStackComposition::Direction&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiStackComposition::Direction&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiStackItemComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackItemComposition" Name="GuiStackItemComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiStackItemComposition@s:vl.presentation.compositions.GuiStackItemComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiStackItemComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiStackItemComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiCellOption}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiCellOption" Name="GuiCellOption">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiCellOption@s:vl.presentation.compositions.GuiCellOption" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiCellOption&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiCellOption&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiCellOption.ComposeType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiCellOption::ComposeType" Name="ComposeType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiCellOption::ComposeType@s:vl.presentation.compositions.GuiCellOption" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiCellOption" Name="GuiCellOption">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiCellOption@s:vl.presentation.compositions.GuiCellOption" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiCellOption::ComposeType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiCellOption::ComposeType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiTableComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiTableComposition" Name="GuiTableComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiTableComposition@s:vl.presentation.compositions.GuiTableComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiTableComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiTableComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiCellComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiCellComposition" Name="GuiCellComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiCellComposition@s:vl.presentation.compositions.GuiCellComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiCellComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiCellComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiTableSplitterCompositionBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiTableSplitterCompositionBase" Name="GuiTableSplitterCompositionBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiTableSplitterCompositionBase@s:vl.presentation.compositions.GuiTableSplitterCompositionBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiTableSplitterCompositionBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiTableSplitterCompositionBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiRowSplitterComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiRowSplitterComposition" Name="GuiRowSplitterComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiRowSplitterComposition@s:vl.presentation.compositions.GuiRowSplitterComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiRowSplitterComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiRowSplitterComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiColumnSplitterComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiColumnSplitterComposition" Name="GuiColumnSplitterComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiColumnSplitterComposition@s:vl.presentation.compositions.GuiColumnSplitterComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiColumnSplitterComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiColumnSplitterComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.FlowAlignment}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::FlowAlignment" Name="FlowAlignment">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::FlowAlignment@s:vl.presentation.compositions.FlowAlignment" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::FlowAlignment&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::FlowAlignment&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiFlowComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiFlowComposition" Name="GuiFlowComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiFlowComposition@s:vl.presentation.compositions.GuiFlowComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiFlowComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiFlowComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiFlowOption}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiFlowOption" Name="GuiFlowOption">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiFlowOption@s:vl.presentation.compositions.GuiFlowOption" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiFlowOption&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiFlowOption&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiFlowOption.BaselineType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiFlowOption::BaselineType" Name="BaselineType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiFlowOption::BaselineType@s:vl.presentation.compositions.GuiFlowOption" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiFlowOption" Name="GuiFlowOption">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiFlowOption@s:vl.presentation.compositions.GuiFlowOption" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiFlowOption::BaselineType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiFlowOption::BaselineType&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiFlowItemComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiFlowItemComposition" Name="GuiFlowItemComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiFlowItemComposition@s:vl.presentation.compositions.GuiFlowItemComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiFlowItemComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiFlowItemComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiSideAlignedComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiSideAlignedComposition" Name="GuiSideAlignedComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiSideAlignedComposition@s:vl.presentation.compositions.GuiSideAlignedComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiSideAlignedComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiSideAlignedComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiSideAlignedComposition.Direction}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiSideAlignedComposition::Direction" Name="Direction">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiSideAlignedComposition::Direction@s:vl.presentation.compositions.GuiSideAlignedComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiSideAlignedComposition" Name="GuiSideAlignedComposition">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiSideAlignedComposition@s:vl.presentation.compositions.GuiSideAlignedComposition" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiSideAlignedComposition::Direction&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiSideAlignedComposition::Direction&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiPartialViewComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiPartialViewComposition" Name="GuiPartialViewComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiPartialViewComposition@s:vl.presentation.compositions.GuiPartialViewComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiPartialViewComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiPartialViewComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiSharedSizeItemComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiSharedSizeItemComposition" Name="GuiSharedSizeItemComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiSharedSizeItemComposition@s:vl.presentation.compositions.GuiSharedSizeItemComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiSharedSizeItemComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiSharedSizeItemComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiSharedSizeRootComposition}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiSharedSizeRootComposition" Name="GuiSharedSizeRootComposition">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiSharedSizeRootComposition@s:vl.presentation.compositions.GuiSharedSizeRootComposition" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiSharedSizeRootComposition&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiSharedSizeRootComposition&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.IGuiGraphicsAnimation}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiGraphicsAnimation" Name="IGuiGraphicsAnimation">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::IGuiGraphicsAnimation@s:vl.presentation.compositions.IGuiGraphicsAnimation" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiGraphicsAnimation&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiGraphicsAnimationManager}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsAnimationManager" Name="GuiGraphicsAnimationManager">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiGraphicsAnimationManager@s:vl.presentation.compositions.GuiGraphicsAnimationManager" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiGraphicsAnimationManager&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiGraphicsAnimationManager&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.IGuiShortcutKeyItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiShortcutKeyItem" Name="IGuiShortcutKeyItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::IGuiShortcutKeyItem@s:vl.presentation.compositions.IGuiShortcutKeyItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiShortcutKeyItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiShortcutKeyItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.IGuiShortcutKeyManager}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiShortcutKeyManager" Name="IGuiShortcutKeyManager">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::IGuiShortcutKeyManager@s:vl.presentation.compositions.IGuiShortcutKeyManager" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiShortcutKeyManager&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiShortcutKeyManager&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiShortcutKeyManager}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiShortcutKeyManager" Name="GuiShortcutKeyManager">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiShortcutKeyManager@s:vl.presentation.compositions.GuiShortcutKeyManager" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiShortcutKeyManager&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiShortcutKeyManager&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.IGuiAltAction}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiAltAction" Name="IGuiAltAction">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::IGuiAltAction@s:vl.presentation.compositions.IGuiAltAction" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiAltAction&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiAltAction&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.IGuiAltActionContainer}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiAltActionContainer" Name="IGuiAltActionContainer">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::IGuiAltActionContainer@s:vl.presentation.compositions.IGuiAltActionContainer" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiAltActionContainer&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiAltActionContainer&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.IGuiAltActionHost}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::IGuiAltActionHost" Name="IGuiAltActionHost">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::IGuiAltActionHost@s:vl.presentation.compositions.IGuiAltActionHost" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiAltActionHost&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::IGuiAltActionHost&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiRequestEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiRequestEventArgs" Name="GuiRequestEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiRequestEventArgs@s:vl.presentation.compositions.GuiRequestEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiRequestEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiRequestEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiKeyEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiKeyEventArgs" Name="GuiKeyEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiKeyEventArgs@s:vl.presentation.compositions.GuiKeyEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiKeyEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiKeyEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiCharEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiCharEventArgs" Name="GuiCharEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiCharEventArgs@s:vl.presentation.compositions.GuiCharEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiCharEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiCharEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiMouseEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiMouseEventArgs" Name="GuiMouseEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiMouseEventArgs@s:vl.presentation.compositions.GuiMouseEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiMouseEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiMouseEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiItemEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiItemEventArgs" Name="GuiItemEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiItemEventArgs@s:vl.presentation.compositions.GuiItemEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiItemEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiItemEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiItemMouseEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiItemMouseEventArgs" Name="GuiItemMouseEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiItemMouseEventArgs@s:vl.presentation.compositions.GuiItemMouseEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiItemMouseEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiItemMouseEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiNodeEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNodeEventArgs" Name="GuiNodeEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiNodeEventArgs@s:vl.presentation.compositions.GuiNodeEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiNodeEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiNodeEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.compositions.GuiNodeMouseEventArgs}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiNodeMouseEventArgs" Name="GuiNodeMouseEventArgs">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::compositions::GuiNodeMouseEventArgs@s:vl.presentation.compositions.GuiNodeMouseEventArgs" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiNodeMouseEventArgs&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::compositions::GuiNodeMouseEventArgs&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.ButtonState}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::ButtonState" Name="ButtonState">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::ButtonState@s:vl.presentation.controls.ButtonState" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::ButtonState&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::ButtonState&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.ColumnSortingState}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::ColumnSortingState" Name="ColumnSortingState">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::ColumnSortingState@s:vl.presentation.controls.ColumnSortingState" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::ColumnSortingState&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::ColumnSortingState&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.BoolOption}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::BoolOption" Name="BoolOption">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::BoolOption@s:vl.presentation.templates.BoolOption" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::BoolOption&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::BoolOption&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.IComboBoxCommandExecutor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::IComboBoxCommandExecutor" Name="IComboBoxCommandExecutor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::IComboBoxCommandExecutor@s:vl.presentation.controls.IComboBoxCommandExecutor" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::IComboBoxCommandExecutor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::IComboBoxCommandExecutor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.IScrollCommandExecutor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::IScrollCommandExecutor" Name="IScrollCommandExecutor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::IScrollCommandExecutor@s:vl.presentation.controls.IScrollCommandExecutor" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::IScrollCommandExecutor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::IScrollCommandExecutor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.ITabCommandExecutor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::ITabCommandExecutor" Name="ITabCommandExecutor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::ITabCommandExecutor@s:vl.presentation.controls.ITabCommandExecutor" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::ITabCommandExecutor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::ITabCommandExecutor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiComponent}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiComponent" Name="GuiComponent">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiComponent@s:vl.presentation.controls.GuiComponent" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComponent&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComponent&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiInstanceRootObject}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiInstanceRootObject" Name="GuiInstanceRootObject">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiInstanceRootObject@s:vl.presentation.controls.GuiInstanceRootObject" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiInstanceRootObject&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiInstanceRootObject&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTemplate" Name="GuiTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTemplate@s:vl.presentation.templates.GuiTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiControlTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiControlTemplate" Name="GuiControlTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiControlTemplate@s:vl.presentation.templates.GuiControlTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiControlTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiControlTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiLabelTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiLabelTemplate" Name="GuiLabelTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiLabelTemplate@s:vl.presentation.templates.GuiLabelTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiLabelTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiLabelTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiSinglelineTextBoxTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate" Name="GuiSinglelineTextBoxTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiSinglelineTextBoxTemplate@s:vl.presentation.templates.GuiSinglelineTextBoxTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiSinglelineTextBoxTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiSinglelineTextBoxTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiDocumentLabelTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiDocumentLabelTemplate" Name="GuiDocumentLabelTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiDocumentLabelTemplate@s:vl.presentation.templates.GuiDocumentLabelTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDocumentLabelTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDocumentLabelTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiMultilineTextBoxTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiMultilineTextBoxTemplate" Name="GuiMultilineTextBoxTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiMultilineTextBoxTemplate@s:vl.presentation.templates.GuiMultilineTextBoxTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiMultilineTextBoxTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiMultilineTextBoxTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiDocumentViewerTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiDocumentViewerTemplate" Name="GuiDocumentViewerTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiDocumentViewerTemplate@s:vl.presentation.templates.GuiDocumentViewerTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDocumentViewerTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDocumentViewerTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiMenuTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiMenuTemplate" Name="GuiMenuTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiMenuTemplate@s:vl.presentation.templates.GuiMenuTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiMenuTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiMenuTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiWindowTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiWindowTemplate" Name="GuiWindowTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiWindowTemplate@s:vl.presentation.templates.GuiWindowTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiWindowTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiWindowTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiButtonTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiButtonTemplate" Name="GuiButtonTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiButtonTemplate@s:vl.presentation.templates.GuiButtonTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiButtonTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiButtonTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiSelectableButtonTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiSelectableButtonTemplate" Name="GuiSelectableButtonTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiSelectableButtonTemplate@s:vl.presentation.templates.GuiSelectableButtonTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiSelectableButtonTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiSelectableButtonTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiToolstripButtonTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiToolstripButtonTemplate" Name="GuiToolstripButtonTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiToolstripButtonTemplate@s:vl.presentation.templates.GuiToolstripButtonTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiToolstripButtonTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiToolstripButtonTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiListViewColumnHeaderTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiListViewColumnHeaderTemplate" Name="GuiListViewColumnHeaderTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiListViewColumnHeaderTemplate@s:vl.presentation.templates.GuiListViewColumnHeaderTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListViewColumnHeaderTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListViewColumnHeaderTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiComboBoxTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiComboBoxTemplate" Name="GuiComboBoxTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiComboBoxTemplate@s:vl.presentation.templates.GuiComboBoxTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiComboBoxTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiComboBoxTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiScrollTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiScrollTemplate" Name="GuiScrollTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiScrollTemplate@s:vl.presentation.templates.GuiScrollTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiScrollTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiScrollTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiScrollViewTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiScrollViewTemplate" Name="GuiScrollViewTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiScrollViewTemplate@s:vl.presentation.templates.GuiScrollViewTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiScrollViewTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiScrollViewTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTextListTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTextListTemplate" Name="GuiTextListTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTextListTemplate@s:vl.presentation.templates.GuiTextListTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTextListTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTextListTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiListViewTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiListViewTemplate" Name="GuiListViewTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiListViewTemplate@s:vl.presentation.templates.GuiListViewTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListViewTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListViewTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTreeViewTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTreeViewTemplate" Name="GuiTreeViewTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTreeViewTemplate@s:vl.presentation.templates.GuiTreeViewTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTreeViewTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTreeViewTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTabTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTabTemplate" Name="GuiTabTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTabTemplate@s:vl.presentation.templates.GuiTabTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTabTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTabTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiDatePickerTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiDatePickerTemplate" Name="GuiDatePickerTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiDatePickerTemplate@s:vl.presentation.templates.GuiDatePickerTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDatePickerTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDatePickerTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiDateComboBoxTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiDateComboBoxTemplate" Name="GuiDateComboBoxTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiDateComboBoxTemplate@s:vl.presentation.templates.GuiDateComboBoxTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDateComboBoxTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDateComboBoxTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiListItemTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiListItemTemplate" Name="GuiListItemTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiListItemTemplate@s:vl.presentation.templates.GuiListItemTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListItemTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListItemTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTextListItemTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTextListItemTemplate" Name="GuiTextListItemTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTextListItemTemplate@s:vl.presentation.templates.GuiTextListItemTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTextListItemTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTextListItemTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTreeItemTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTreeItemTemplate" Name="GuiTreeItemTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTreeItemTemplate@s:vl.presentation.templates.GuiTreeItemTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTreeItemTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTreeItemTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiGridCellTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiGridCellTemplate" Name="GuiGridCellTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiGridCellTemplate@s:vl.presentation.templates.GuiGridCellTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiGridCellTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiGridCellTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiGridVisualizerTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiGridVisualizerTemplate" Name="GuiGridVisualizerTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiGridVisualizerTemplate@s:vl.presentation.templates.GuiGridVisualizerTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiGridVisualizerTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiGridVisualizerTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiGridEditorTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiGridEditorTemplate" Name="GuiGridEditorTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiGridEditorTemplate@s:vl.presentation.templates.GuiGridEditorTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiGridEditorTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiGridEditorTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiControlTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiControlTemplate_StyleProvider" Name="GuiControlTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiControlTemplate_StyleProvider@s:vl.presentation.templates.GuiControlTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiControlTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiControlTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiLabelTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiLabelTemplate_StyleProvider" Name="GuiLabelTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiLabelTemplate_StyleProvider@s:vl.presentation.templates.GuiLabelTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiLabelTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiLabelTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiSinglelineTextBoxTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiSinglelineTextBoxTemplate_StyleProvider" Name="GuiSinglelineTextBoxTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiSinglelineTextBoxTemplate_StyleProvider@s:vl.presentation.templates.GuiSinglelineTextBoxTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiSinglelineTextBoxTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiSinglelineTextBoxTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiDocumentLabelTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiDocumentLabelTemplate_StyleProvider" Name="GuiDocumentLabelTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiDocumentLabelTemplate_StyleProvider@s:vl.presentation.templates.GuiDocumentLabelTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDocumentLabelTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDocumentLabelTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiMultilineTextBoxTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiMultilineTextBoxTemplate_StyleProvider" Name="GuiMultilineTextBoxTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiMultilineTextBoxTemplate_StyleProvider@s:vl.presentation.templates.GuiMultilineTextBoxTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiMultilineTextBoxTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiMultilineTextBoxTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiDocumentViewerTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiDocumentViewerTemplate_StyleProvider" Name="GuiDocumentViewerTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiDocumentViewerTemplate_StyleProvider@s:vl.presentation.templates.GuiDocumentViewerTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDocumentViewerTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDocumentViewerTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiMenuTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiMenuTemplate_StyleProvider" Name="GuiMenuTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiMenuTemplate_StyleProvider@s:vl.presentation.templates.GuiMenuTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiMenuTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiMenuTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiWindowTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiWindowTemplate_StyleProvider" Name="GuiWindowTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiWindowTemplate_StyleProvider@s:vl.presentation.templates.GuiWindowTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiWindowTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiWindowTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiButtonTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiButtonTemplate_StyleProvider" Name="GuiButtonTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiButtonTemplate_StyleProvider@s:vl.presentation.templates.GuiButtonTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiButtonTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiButtonTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiSelectableButtonTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiSelectableButtonTemplate_StyleProvider" Name="GuiSelectableButtonTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiSelectableButtonTemplate_StyleProvider@s:vl.presentation.templates.GuiSelectableButtonTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiSelectableButtonTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiSelectableButtonTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiToolstripButtonTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiToolstripButtonTemplate_StyleProvider" Name="GuiToolstripButtonTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiToolstripButtonTemplate_StyleProvider@s:vl.presentation.templates.GuiToolstripButtonTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiToolstripButtonTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiToolstripButtonTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiListViewColumnHeaderTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiListViewColumnHeaderTemplate_StyleProvider" Name="GuiListViewColumnHeaderTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiListViewColumnHeaderTemplate_StyleProvider@s:vl.presentation.templates.GuiListViewColumnHeaderTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListViewColumnHeaderTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListViewColumnHeaderTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiComboBoxTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiComboBoxTemplate_StyleProvider" Name="GuiComboBoxTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiComboBoxTemplate_StyleProvider@s:vl.presentation.templates.GuiComboBoxTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiComboBoxTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiComboBoxTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiDatePickerTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiDatePickerTemplate_StyleProvider" Name="GuiDatePickerTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiDatePickerTemplate_StyleProvider@s:vl.presentation.templates.GuiDatePickerTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDatePickerTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDatePickerTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiDateComboBoxTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiDateComboBoxTemplate_StyleProvider" Name="GuiDateComboBoxTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiDateComboBoxTemplate_StyleProvider@s:vl.presentation.templates.GuiDateComboBoxTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDateComboBoxTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiDateComboBoxTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiScrollTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiScrollTemplate_StyleProvider" Name="GuiScrollTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiScrollTemplate_StyleProvider@s:vl.presentation.templates.GuiScrollTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiScrollTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiScrollTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiScrollViewTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiScrollViewTemplate_StyleProvider" Name="GuiScrollViewTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiScrollViewTemplate_StyleProvider@s:vl.presentation.templates.GuiScrollViewTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiScrollViewTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiScrollViewTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTextListTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTextListTemplate_StyleProvider" Name="GuiTextListTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTextListTemplate_StyleProvider@s:vl.presentation.templates.GuiTextListTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTextListTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTextListTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiListViewTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiListViewTemplate_StyleProvider" Name="GuiListViewTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiListViewTemplate_StyleProvider@s:vl.presentation.templates.GuiListViewTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListViewTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiListViewTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTreeViewTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTreeViewTemplate_StyleProvider" Name="GuiTreeViewTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTreeViewTemplate_StyleProvider@s:vl.presentation.templates.GuiTreeViewTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTreeViewTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTreeViewTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.templates.GuiTabTemplate_StyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::templates::GuiTabTemplate_StyleProvider" Name="GuiTabTemplate_StyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::templates::GuiTabTemplate_StyleProvider@s:vl.presentation.templates.GuiTabTemplate_StyleProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::templates" Name="templates">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::templates@ns:vl.presentation.templates" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTabTemplate_StyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::templates::GuiTabTemplate_StyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiApplication}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiApplication" Name="GuiApplication">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiApplication@s:vl.presentation.controls.GuiApplication" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiApplication&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiApplication&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.theme.ITheme}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::theme::ITheme" Name="ITheme">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::theme::ITheme@s:vl.presentation.theme.ITheme" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::theme" Name="theme">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::theme@ns:vl.presentation.theme" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::theme::ITheme&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::theme::ITheme&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDialogBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDialogBase" Name="GuiDialogBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDialogBase@s:vl.presentation.controls.GuiDialogBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDialogBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDialogBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiMessageDialog}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMessageDialog" Name="GuiMessageDialog">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiMessageDialog@s:vl.presentation.controls.GuiMessageDialog" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMessageDialog&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMessageDialog&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiColorDialog}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiColorDialog" Name="GuiColorDialog">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiColorDialog@s:vl.presentation.controls.GuiColorDialog" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiColorDialog&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiColorDialog&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiFontDialog}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiFontDialog" Name="GuiFontDialog">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiFontDialog@s:vl.presentation.controls.GuiFontDialog" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiFontDialog&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiFontDialog&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiFileDialogBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiFileDialogBase" Name="GuiFileDialogBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiFileDialogBase@s:vl.presentation.controls.GuiFileDialogBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiFileDialogBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiFileDialogBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiOpenFileDialog}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiOpenFileDialog" Name="GuiOpenFileDialog">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiOpenFileDialog@s:vl.presentation.controls.GuiOpenFileDialog" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiOpenFileDialog&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiOpenFileDialog&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiSaveFileDialog}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSaveFileDialog" Name="GuiSaveFileDialog">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiSaveFileDialog@s:vl.presentation.controls.GuiSaveFileDialog" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSaveFileDialog&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSaveFileDialog&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiControl}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiControl&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiControl&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiControl.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiControl::IStyleController@s:vl.presentation.controls.GuiControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiControl::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiControl::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiControl.IStyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl::IStyleProvider" Name="IStyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiControl::IStyleProvider@s:vl.presentation.controls.GuiControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiControl::IStyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiControl::IStyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiCustomControl}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiCustomControl" Name="GuiCustomControl">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiCustomControl@s:vl.presentation.controls.GuiCustomControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiCustomControl&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiCustomControl&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiLabel}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiLabel" Name="GuiLabel">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiLabel@s:vl.presentation.controls.GuiLabel" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiLabel&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiLabel&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiLabel.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiLabel::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiLabel::IStyleController@s:vl.presentation.controls.GuiLabel" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiLabel" Name="GuiLabel">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiLabel@s:vl.presentation.controls.GuiLabel" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiLabel::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiLabel::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiButton}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiButton" Name="GuiButton">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiButton@s:vl.presentation.controls.GuiButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiButton&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiButton&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiButton.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiButton::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiButton::IStyleController@s:vl.presentation.controls.GuiButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiButton" Name="GuiButton">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiButton@s:vl.presentation.controls.GuiButton" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiButton::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiButton::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiSelectableButton}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton" Name="GuiSelectableButton">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiSelectableButton@s:vl.presentation.controls.GuiSelectableButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableButton&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableButton&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiSelectableButton.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiSelectableButton::IStyleController@s:vl.presentation.controls.GuiSelectableButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton" Name="GuiSelectableButton">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiSelectableButton@s:vl.presentation.controls.GuiSelectableButton" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableButton::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableButton::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiSelectableButton.GroupController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton::GroupController" Name="GroupController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiSelectableButton::GroupController@s:vl.presentation.controls.GuiSelectableButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton" Name="GuiSelectableButton">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiSelectableButton@s:vl.presentation.controls.GuiSelectableButton" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableButton::GroupController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableButton::GroupController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiSelectableButton.MutexGroupController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton::MutexGroupController" Name="MutexGroupController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiSelectableButton::MutexGroupController@s:vl.presentation.controls.GuiSelectableButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableButton" Name="GuiSelectableButton">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiSelectableButton@s:vl.presentation.controls.GuiSelectableButton" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableButton::MutexGroupController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableButton::MutexGroupController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiScroll}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiScroll" Name="GuiScroll">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiScroll@s:vl.presentation.controls.GuiScroll" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScroll&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScroll&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiScroll.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiScroll::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiScroll::IStyleController@s:vl.presentation.controls.GuiScroll" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiScroll" Name="GuiScroll">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiScroll@s:vl.presentation.controls.GuiScroll" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScroll::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScroll::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiTabPage}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTabPage" Name="GuiTabPage">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiTabPage@s:vl.presentation.controls.GuiTabPage" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTabPage&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTabPage&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiTab}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTab" Name="GuiTab">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiTab@s:vl.presentation.controls.GuiTab" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTab&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTab&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiTab.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTab::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiTab::IStyleController@s:vl.presentation.controls.GuiTab" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTab" Name="GuiTab">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiTab@s:vl.presentation.controls.GuiTab" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTab::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTab::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiScrollView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiScrollView" Name="GuiScrollView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiScrollView@s:vl.presentation.controls.GuiScrollView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScrollView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScrollView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiScrollView.IStyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiScrollView::IStyleProvider" Name="IStyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiScrollView::IStyleProvider@s:vl.presentation.controls.GuiScrollView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiScrollView" Name="GuiScrollView">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiScrollView@s:vl.presentation.controls.GuiScrollView" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScrollView::IStyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScrollView::IStyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiScrollContainer}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiScrollContainer" Name="GuiScrollContainer">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiScrollContainer@s:vl.presentation.controls.GuiScrollContainer" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScrollContainer&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiScrollContainer&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiControlHost}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControlHost" Name="GuiControlHost">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiControlHost@s:vl.presentation.controls.GuiControlHost" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiControlHost&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiControlHost&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiWindow}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiWindow" Name="GuiWindow">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiWindow@s:vl.presentation.controls.GuiWindow" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiWindow&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiWindow&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiWindow.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiWindow::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiWindow::IStyleController@s:vl.presentation.controls.GuiWindow" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiWindow" Name="GuiWindow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiWindow@s:vl.presentation.controls.GuiWindow" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiWindow::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiWindow::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiPopup}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiPopup" Name="GuiPopup">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiPopup@s:vl.presentation.controls.GuiPopup" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiPopup&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiPopup&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiTooltip}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTooltip" Name="GuiTooltip">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiTooltip@s:vl.presentation.controls.GuiTooltip" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTooltip&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTooltip&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListControl}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl" Name="GuiListControl">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListControl@s:vl.presentation.controls.GuiListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListControl.IItemProviderCallback}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl::IItemProviderCallback" Name="IItemProviderCallback">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListControl::IItemProviderCallback@s:vl.presentation.controls.GuiListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl" Name="GuiListControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiListControl@s:vl.presentation.controls.GuiListControl" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl::IItemProviderCallback&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl::IItemProviderCallback&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListControl.IItemArrangerCallback}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl::IItemArrangerCallback" Name="IItemArrangerCallback">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListControl::IItemArrangerCallback@s:vl.presentation.controls.GuiListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl" Name="GuiListControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiListControl@s:vl.presentation.controls.GuiListControl" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl::IItemArrangerCallback&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl::IItemArrangerCallback&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListControl.IItemProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl::IItemProvider" Name="IItemProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListControl::IItemProvider@s:vl.presentation.controls.GuiListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl" Name="GuiListControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiListControl@s:vl.presentation.controls.GuiListControl" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl::IItemProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListControl.IItemArranger}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl::IItemArranger" Name="IItemArranger">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListControl::IItemArranger@s:vl.presentation.controls.GuiListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListControl" Name="GuiListControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiListControl@s:vl.presentation.controls.GuiListControl" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListControl::IItemArranger&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiSelectableListControl}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSelectableListControl" Name="GuiSelectableListControl">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiSelectableListControl@s:vl.presentation.controls.GuiSelectableListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableListControl&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSelectableListControl&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.ItemProviderBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ItemProviderBase" Name="ItemProviderBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::ItemProviderBase@s:vl.presentation.controls.list.ItemProviderBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ItemProviderBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ItemProviderBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.RangedItemArrangerBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::RangedItemArrangerBase" Name="RangedItemArrangerBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::RangedItemArrangerBase@s:vl.presentation.controls.list.RangedItemArrangerBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::RangedItemArrangerBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::RangedItemArrangerBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.FixedHeightItemArranger}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::FixedHeightItemArranger" Name="FixedHeightItemArranger">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::FixedHeightItemArranger@s:vl.presentation.controls.list.FixedHeightItemArranger" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::FixedHeightItemArranger&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::FixedHeightItemArranger&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.FixedSizeMultiColumnItemArranger}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::FixedSizeMultiColumnItemArranger" Name="FixedSizeMultiColumnItemArranger">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::FixedSizeMultiColumnItemArranger@s:vl.presentation.controls.list.FixedSizeMultiColumnItemArranger" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::FixedSizeMultiColumnItemArranger&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::FixedSizeMultiColumnItemArranger&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.FixedHeightMultiColumnItemArranger}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::FixedHeightMultiColumnItemArranger" Name="FixedHeightMultiColumnItemArranger">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::FixedHeightMultiColumnItemArranger@s:vl.presentation.controls.list.FixedHeightMultiColumnItemArranger" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::FixedHeightMultiColumnItemArranger&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::FixedHeightMultiColumnItemArranger&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.ITextItemView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ITextItemView" Name="ITextItemView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::ITextItemView@s:vl.presentation.controls.list.ITextItemView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ITextItemView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ITextItemView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.TextItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::TextItem" Name="TextItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::TextItem@s:vl.presentation.controls.list.TextItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::TextItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::TextItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.TextListView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::TextListView" Name="TextListView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::TextListView@s:vl.presentation.controls.TextListView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::TextListView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::TextListView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiVirtualTextList}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualTextList" Name="GuiVirtualTextList">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiVirtualTextList@s:vl.presentation.controls.GuiVirtualTextList" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTextList&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTextList&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiVirtualTextList.IStyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualTextList::IStyleProvider" Name="IStyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiVirtualTextList::IStyleProvider@s:vl.presentation.controls.GuiVirtualTextList" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualTextList" Name="GuiVirtualTextList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiVirtualTextList@s:vl.presentation.controls.GuiVirtualTextList" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTextList::IStyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTextList::IStyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiTextList}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTextList" Name="GuiTextList">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiTextList@s:vl.presentation.controls.GuiTextList" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTextList&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTextList&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListViewColumnHeader}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListViewColumnHeader" Name="GuiListViewColumnHeader">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListViewColumnHeader@s:vl.presentation.controls.GuiListViewColumnHeader" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListViewColumnHeader&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListViewColumnHeader&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListViewColumnHeader.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListViewColumnHeader::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListViewColumnHeader::IStyleController@s:vl.presentation.controls.GuiListViewColumnHeader" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListViewColumnHeader" Name="GuiListViewColumnHeader">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiListViewColumnHeader@s:vl.presentation.controls.GuiListViewColumnHeader" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListViewColumnHeader::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListViewColumnHeader::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListViewBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListViewBase" Name="GuiListViewBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListViewBase@s:vl.presentation.controls.GuiListViewBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListViewBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListViewBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListViewBase.IStyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListViewBase::IStyleProvider" Name="IStyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListViewBase::IStyleProvider@s:vl.presentation.controls.GuiListViewBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListViewBase" Name="GuiListViewBase">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiListViewBase@s:vl.presentation.controls.GuiListViewBase" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListViewBase::IStyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListViewBase::IStyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IListViewItemView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IListViewItemView" Name="IListViewItemView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IListViewItemView@s:vl.presentation.controls.list.IListViewItemView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IListViewItemView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IListViewItemView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.ListViewColumnItemArranger}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ListViewColumnItemArranger" Name="ListViewColumnItemArranger">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::ListViewColumnItemArranger@s:vl.presentation.controls.list.ListViewColumnItemArranger" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewColumnItemArranger&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewColumnItemArranger&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.ListViewColumnItemArranger.IColumnItemViewCallback}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback" Name="IColumnItemViewCallback">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback@s:vl.presentation.controls.list.ListViewColumnItemArranger" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ListViewColumnItemArranger" Name="ListViewColumnItemArranger">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list::ListViewColumnItemArranger@s:vl.presentation.controls.list.ListViewColumnItemArranger" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation@ns:vl.presentation" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemViewCallback&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.ListViewColumnItemArranger.IColumnItemView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemView" Name="IColumnItemView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::ListViewColumnItemArranger::IColumnItemView@s:vl.presentation.controls.list.ListViewColumnItemArranger" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ListViewColumnItemArranger" Name="ListViewColumnItemArranger">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list::ListViewColumnItemArranger@s:vl.presentation.controls.list.ListViewColumnItemArranger" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation@ns:vl.presentation" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewColumnItemArranger::IColumnItemView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.ListViewItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ListViewItem" Name="ListViewItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::ListViewItem@s:vl.presentation.controls.list.ListViewItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.ListViewColumn}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::ListViewColumn" Name="ListViewColumn">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::ListViewColumn@s:vl.presentation.controls.list.ListViewColumn" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewColumn&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::ListViewColumn&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.ListViewView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::ListViewView" Name="ListViewView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::ListViewView@s:vl.presentation.controls.ListViewView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::ListViewView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::ListViewView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiVirtualListView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualListView" Name="GuiVirtualListView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiVirtualListView@s:vl.presentation.controls.GuiVirtualListView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualListView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualListView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiListView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiListView" Name="GuiListView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiListView@s:vl.presentation.controls.GuiListView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiListView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.IGuiMenuService}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService" Name="IGuiMenuService">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::IGuiMenuService@s:vl.presentation.controls.IGuiMenuService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::IGuiMenuService&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::IGuiMenuService&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.IGuiMenuService.Direction}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService::Direction" Name="Direction">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::IGuiMenuService::Direction@s:vl.presentation.controls.IGuiMenuService" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::IGuiMenuService" Name="IGuiMenuService">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::IGuiMenuService@s:vl.presentation.controls.IGuiMenuService" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::IGuiMenuService::Direction&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::IGuiMenuService::Direction&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiMenu}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenu" Name="GuiMenu">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiMenu@s:vl.presentation.controls.GuiMenu" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMenu&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMenu&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiMenuBar}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuBar" Name="GuiMenuBar">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiMenuBar@s:vl.presentation.controls.GuiMenuBar" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMenuBar&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMenuBar&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiMenuButton}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuButton" Name="GuiMenuButton">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiMenuButton@s:vl.presentation.controls.GuiMenuButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMenuButton&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMenuButton&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiMenuButton.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuButton::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiMenuButton::IStyleController@s:vl.presentation.controls.GuiMenuButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMenuButton" Name="GuiMenuButton">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiMenuButton@s:vl.presentation.controls.GuiMenuButton" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMenuButton::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMenuButton::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.INodeProviderCallback}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProviderCallback" Name="INodeProviderCallback">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::INodeProviderCallback@s:vl.presentation.controls.tree.INodeProviderCallback" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::INodeProviderCallback&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::INodeProviderCallback&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.INodeProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::INodeProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::INodeProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.INodeRootProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeRootProvider" Name="INodeRootProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::INodeRootProvider@s:vl.presentation.controls.tree.INodeRootProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::INodeRootProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::INodeRootProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.INodeItemView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeItemView" Name="INodeItemView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::INodeItemView@s:vl.presentation.controls.tree.INodeItemView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::INodeItemView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::INodeItemView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.MemoryNodeProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeProvider" Name="MemoryNodeProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::MemoryNodeProvider@s:vl.presentation.controls.tree.MemoryNodeProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::MemoryNodeProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::MemoryNodeProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.NodeRootProviderBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::NodeRootProviderBase" Name="NodeRootProviderBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::NodeRootProviderBase@s:vl.presentation.controls.tree.NodeRootProviderBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::NodeRootProviderBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::NodeRootProviderBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.MemoryNodeRootProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::MemoryNodeRootProvider" Name="MemoryNodeRootProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::MemoryNodeRootProvider@s:vl.presentation.controls.tree.MemoryNodeRootProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::MemoryNodeRootProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::MemoryNodeRootProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiVirtualTreeListControl}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualTreeListControl" Name="GuiVirtualTreeListControl">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiVirtualTreeListControl@s:vl.presentation.controls.GuiVirtualTreeListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTreeListControl&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTreeListControl&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.ITreeViewItemView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::ITreeViewItemView" Name="ITreeViewItemView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::ITreeViewItemView@s:vl.presentation.controls.tree.ITreeViewItemView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::ITreeViewItemView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::ITreeViewItemView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.TreeViewItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::TreeViewItem" Name="TreeViewItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::TreeViewItem@s:vl.presentation.controls.tree.TreeViewItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::TreeViewItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::TreeViewItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.tree.TreeViewItemRootProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::TreeViewItemRootProvider" Name="TreeViewItemRootProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::tree::TreeViewItemRootProvider@s:vl.presentation.controls.tree.TreeViewItemRootProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::tree" Name="tree">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::tree@ns:vl.presentation.controls.tree" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::TreeViewItemRootProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::tree::TreeViewItemRootProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiVirtualTreeView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualTreeView" Name="GuiVirtualTreeView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiVirtualTreeView@s:vl.presentation.controls.GuiVirtualTreeView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTreeView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTreeView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiVirtualTreeView.IStyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualTreeView::IStyleProvider" Name="IStyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiVirtualTreeView::IStyleProvider@s:vl.presentation.controls.GuiVirtualTreeView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualTreeView" Name="GuiVirtualTreeView">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiVirtualTreeView@s:vl.presentation.controls.GuiVirtualTreeView" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTreeView::IStyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualTreeView::IStyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiTreeView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTreeView" Name="GuiTreeView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiTreeView@s:vl.presentation.controls.GuiTreeView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTreeView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTreeView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiComboBoxBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiComboBoxBase" Name="GuiComboBoxBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiComboBoxBase@s:vl.presentation.controls.GuiComboBoxBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComboBoxBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComboBoxBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiComboBoxBase.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiComboBoxBase::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiComboBoxBase::IStyleController@s:vl.presentation.controls.GuiComboBoxBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiComboBoxBase" Name="GuiComboBoxBase">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiComboBoxBase@s:vl.presentation.controls.GuiComboBoxBase" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComboBoxBase::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComboBoxBase::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiComboBoxListControl}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiComboBoxListControl" Name="GuiComboBoxListControl">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiComboBoxListControl@s:vl.presentation.controls.GuiComboBoxListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComboBoxListControl&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComboBoxListControl&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiComboBoxListControl.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiComboBoxListControl::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiComboBoxListControl::IStyleController@s:vl.presentation.controls.GuiComboBoxListControl" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiComboBoxListControl" Name="GuiComboBoxListControl">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiComboBoxListControl@s:vl.presentation.controls.GuiComboBoxListControl" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComboBoxListControl::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiComboBoxListControl::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiToolstripCommand}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiToolstripCommand" Name="GuiToolstripCommand">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiToolstripCommand@s:vl.presentation.controls.GuiToolstripCommand" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripCommand&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripCommand&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiToolstripMenu}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiToolstripMenu" Name="GuiToolstripMenu">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiToolstripMenu@s:vl.presentation.controls.GuiToolstripMenu" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripMenu&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripMenu&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiToolstripMenuBar}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiToolstripMenuBar" Name="GuiToolstripMenuBar">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiToolstripMenuBar@s:vl.presentation.controls.GuiToolstripMenuBar" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripMenuBar&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripMenuBar&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiToolstripToolBar}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiToolstripToolBar" Name="GuiToolstripToolBar">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiToolstripToolBar@s:vl.presentation.controls.GuiToolstripToolBar" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripToolBar&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripToolBar&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiToolstripButton}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiToolstripButton" Name="GuiToolstripButton">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiToolstripButton@s:vl.presentation.controls.GuiToolstripButton" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripButton&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiToolstripButton&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDocumentItem}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentItem" Name="GuiDocumentItem">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDocumentItem@s:vl.presentation.controls.GuiDocumentItem" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentItem&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentItem&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDocumentCommonInterface}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentCommonInterface" Name="GuiDocumentCommonInterface">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDocumentCommonInterface@s:vl.presentation.controls.GuiDocumentCommonInterface" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentCommonInterface&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentCommonInterface&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDocumentCommonInterface.EditMode}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentCommonInterface::EditMode" Name="EditMode">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDocumentCommonInterface::EditMode@s:vl.presentation.controls.GuiDocumentCommonInterface" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentCommonInterface" Name="GuiDocumentCommonInterface">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiDocumentCommonInterface@s:vl.presentation.controls.GuiDocumentCommonInterface" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentCommonInterface::EditMode&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentCommonInterface::EditMode&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDocumentViewer}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentViewer" Name="GuiDocumentViewer">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDocumentViewer@s:vl.presentation.controls.GuiDocumentViewer" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentViewer&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentViewer&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDocumentViewer.IStyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentViewer::IStyleProvider" Name="IStyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDocumentViewer::IStyleProvider@s:vl.presentation.controls.GuiDocumentViewer" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentViewer" Name="GuiDocumentViewer">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiDocumentViewer@s:vl.presentation.controls.GuiDocumentViewer" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentViewer::IStyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentViewer::IStyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDocumentLabel}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentLabel" Name="GuiDocumentLabel">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDocumentLabel@s:vl.presentation.controls.GuiDocumentLabel" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentLabel&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentLabel&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDocumentLabel.IStyleController}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentLabel::IStyleController" Name="IStyleController">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDocumentLabel::IStyleController@s:vl.presentation.controls.GuiDocumentLabel" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDocumentLabel" Name="GuiDocumentLabel">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiDocumentLabel@s:vl.presentation.controls.GuiDocumentLabel" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentLabel::IStyleController&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDocumentLabel::IStyleController&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiTextBoxCommonInterface}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiTextBoxCommonInterface" Name="GuiTextBoxCommonInterface">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiTextBoxCommonInterface@s:vl.presentation.controls.GuiTextBoxCommonInterface" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTextBoxCommonInterface&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiTextBoxCommonInterface&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiMultilineTextBox}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiMultilineTextBox" Name="GuiMultilineTextBox">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiMultilineTextBox@s:vl.presentation.controls.GuiMultilineTextBox" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMultilineTextBox&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiMultilineTextBox&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiSinglelineTextBox}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSinglelineTextBox" Name="GuiSinglelineTextBox">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiSinglelineTextBox@s:vl.presentation.controls.GuiSinglelineTextBox" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSinglelineTextBox&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSinglelineTextBox&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiSinglelineTextBox.IStyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSinglelineTextBox::IStyleProvider" Name="IStyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiSinglelineTextBox::IStyleProvider@s:vl.presentation.controls.GuiSinglelineTextBox" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiSinglelineTextBox" Name="GuiSinglelineTextBox">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiSinglelineTextBox@s:vl.presentation.controls.GuiSinglelineTextBox" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSinglelineTextBox::IStyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiSinglelineTextBox::IStyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataGridContext}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataGridContext" Name="IDataGridContext">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataGridContext@s:vl.presentation.controls.list.IDataGridContext" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataGridContext&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataGridContext&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataVisualizerFactory}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataVisualizerFactory" Name="IDataVisualizerFactory">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataVisualizerFactory@s:vl.presentation.controls.list.IDataVisualizerFactory" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataVisualizerFactory&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataVisualizerFactory&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataVisualizer}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataVisualizer" Name="IDataVisualizer">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataVisualizer@s:vl.presentation.controls.list.IDataVisualizer" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataVisualizer&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataVisualizer&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataEditorFactory}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataEditorFactory" Name="IDataEditorFactory">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataEditorFactory@s:vl.presentation.controls.list.IDataEditorFactory" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataEditorFactory&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataEditorFactory&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataEditor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataEditor" Name="IDataEditor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataEditor@s:vl.presentation.controls.list.IDataEditor" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataEditor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataEditor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataGridView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataGridView" Name="IDataGridView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataGridView@s:vl.presentation.controls.list.IDataGridView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataGridView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataGridView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiVirtualDataGrid}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiVirtualDataGrid" Name="GuiVirtualDataGrid">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiVirtualDataGrid@s:vl.presentation.controls.GuiVirtualDataGrid" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualDataGrid&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiVirtualDataGrid&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataVisualizerBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataVisualizerBase" Name="DataVisualizerBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataVisualizerBase@s:vl.presentation.controls.list.DataVisualizerBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataVisualizerBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataVisualizerBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataVisualizerFactory}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataVisualizerFactory" Name="DataVisualizerFactory">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataVisualizerFactory@s:vl.presentation.controls.list.DataVisualizerFactory" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataVisualizerFactory&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataVisualizerFactory&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataEditorBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataEditorBase" Name="DataEditorBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataEditorBase@s:vl.presentation.controls.list.DataEditorBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataEditorBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataEditorBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataEditorFactory}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataEditorFactory" Name="DataEditorFactory">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataEditorFactory@s:vl.presentation.controls.list.DataEditorFactory" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataEditorFactory&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataEditorFactory&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.MainColumnVisualizerTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::MainColumnVisualizerTemplate" Name="MainColumnVisualizerTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::MainColumnVisualizerTemplate@s:vl.presentation.controls.list.MainColumnVisualizerTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::MainColumnVisualizerTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::MainColumnVisualizerTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.SubColumnVisualizerTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::SubColumnVisualizerTemplate" Name="SubColumnVisualizerTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::SubColumnVisualizerTemplate@s:vl.presentation.controls.list.SubColumnVisualizerTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::SubColumnVisualizerTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::SubColumnVisualizerTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.HyperlinkVisualizerTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::HyperlinkVisualizerTemplate" Name="HyperlinkVisualizerTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::HyperlinkVisualizerTemplate@s:vl.presentation.controls.list.HyperlinkVisualizerTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::HyperlinkVisualizerTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::HyperlinkVisualizerTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.CellBorderVisualizerTemplate}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::CellBorderVisualizerTemplate" Name="CellBorderVisualizerTemplate">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::CellBorderVisualizerTemplate@s:vl.presentation.controls.list.CellBorderVisualizerTemplate" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::CellBorderVisualizerTemplate&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::CellBorderVisualizerTemplate&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDatePicker}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDatePicker" Name="GuiDatePicker">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDatePicker@s:vl.presentation.controls.GuiDatePicker" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDatePicker&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDatePicker&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDatePicker.IStyleProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDatePicker::IStyleProvider" Name="IStyleProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDatePicker::IStyleProvider@s:vl.presentation.controls.GuiDatePicker" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDatePicker" Name="GuiDatePicker">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiDatePicker@s:vl.presentation.controls.GuiDatePicker" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDatePicker::IStyleProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDatePicker::IStyleProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiDateComboBox}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiDateComboBox" Name="GuiDateComboBox">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiDateComboBox@s:vl.presentation.controls.GuiDateComboBox" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDateComboBox&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiDateComboBox&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiBindableTextList}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiBindableTextList" Name="GuiBindableTextList">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiBindableTextList@s:vl.presentation.controls.GuiBindableTextList" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiBindableTextList&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiBindableTextList&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiBindableListView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiBindableListView" Name="GuiBindableListView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiBindableListView@s:vl.presentation.controls.GuiBindableListView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiBindableListView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiBindableListView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiBindableTreeView}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiBindableTreeView" Name="GuiBindableTreeView">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiBindableTreeView@s:vl.presentation.controls.GuiBindableTreeView" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiBindableTreeView&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiBindableTreeView&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataProcessorCallback}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataProcessorCallback" Name="IDataProcessorCallback">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataProcessorCallback@s:vl.presentation.controls.list.IDataProcessorCallback" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataProcessorCallback&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataProcessorCallback&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataFilter}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataFilter" Name="IDataFilter">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataFilter@s:vl.presentation.controls.list.IDataFilter" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataFilter&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataFilter&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.IDataSorter}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::IDataSorter" Name="IDataSorter">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::IDataSorter@s:vl.presentation.controls.list.IDataSorter" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataSorter&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::IDataSorter&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataFilterBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataFilterBase" Name="DataFilterBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataFilterBase@s:vl.presentation.controls.list.DataFilterBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataFilterBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataFilterBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataMultipleFilter}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataMultipleFilter" Name="DataMultipleFilter">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataMultipleFilter@s:vl.presentation.controls.list.DataMultipleFilter" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataMultipleFilter&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataMultipleFilter&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataAndFilter}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataAndFilter" Name="DataAndFilter">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataAndFilter@s:vl.presentation.controls.list.DataAndFilter" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataAndFilter&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataAndFilter&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataOrFilter}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataOrFilter" Name="DataOrFilter">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataOrFilter@s:vl.presentation.controls.list.DataOrFilter" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataOrFilter&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataOrFilter&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataNotFilter}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataNotFilter" Name="DataNotFilter">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataNotFilter@s:vl.presentation.controls.list.DataNotFilter" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataNotFilter&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataNotFilter&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataSorterBase}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataSorterBase" Name="DataSorterBase">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataSorterBase@s:vl.presentation.controls.list.DataSorterBase" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataSorterBase&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataSorterBase&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataMultipleSorter}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataMultipleSorter" Name="DataMultipleSorter">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataMultipleSorter@s:vl.presentation.controls.list.DataMultipleSorter" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataMultipleSorter&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataMultipleSorter&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataReverseSorter}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataReverseSorter" Name="DataReverseSorter">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataReverseSorter@s:vl.presentation.controls.list.DataReverseSorter" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataReverseSorter&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataReverseSorter&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataColumn}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataColumn" Name="DataColumn">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataColumn@s:vl.presentation.controls.list.DataColumn" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataColumn&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataColumn&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.list.DataProvider}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list::DataProvider" Name="DataProvider">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::list::DataProvider@s:vl.presentation.controls.list.DataProvider" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::list" Name="list">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::list@ns:vl.presentation.controls.list" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation@ns:vl.presentation" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataProvider&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::list::DataProvider&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.controls.GuiBindableDataGrid}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiBindableDataGrid" Name="GuiBindableDataGrid">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::controls::GuiBindableDataGrid@s:vl.presentation.controls.GuiBindableDataGrid" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::controls" Name="controls">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls@ns:vl.presentation.controls" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiBindableDataGrid&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::controls::GuiBindableDataGrid&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.presentation.GuiIqQuery}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqQuery" Name="GuiIqQuery">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiIqQuery@s:vl.presentation.GuiIqQuery" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqQuery&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqQuery&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.presentation.GuiIqNameOption}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqNameOption" Name="GuiIqNameOption">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiIqNameOption@s:vl.presentation.GuiIqNameOption" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqNameOption&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqNameOption&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.presentation.GuiIqChildOption}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqChildOption" Name="GuiIqChildOption">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiIqChildOption@s:vl.presentation.GuiIqChildOption" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqChildOption&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqChildOption&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.presentation.GuiIqPrimaryQuery}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqPrimaryQuery" Name="GuiIqPrimaryQuery">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiIqPrimaryQuery@s:vl.presentation.GuiIqPrimaryQuery" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqPrimaryQuery&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqPrimaryQuery&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.presentation.GuiIqCascadeQuery}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqCascadeQuery" Name="GuiIqCascadeQuery">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiIqCascadeQuery@s:vl.presentation.GuiIqCascadeQuery" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqCascadeQuery&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqCascadeQuery&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.presentation.GuiIqBinaryOperator}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqBinaryOperator" Name="GuiIqBinaryOperator">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiIqBinaryOperator@s:vl.presentation.GuiIqBinaryOperator" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqBinaryOperator&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqBinaryOperator&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.presentation.GuiIqSetQuery}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqSetQuery" Name="GuiIqSetQuery">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiIqSetQuery@s:vl.presentation.GuiIqSetQuery" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation@ns:vl.presentation" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl@ns:vl" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqSetQuery&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqSetQuery&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{vl.presentation.GuiIqQuery.IVisitor}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqQuery::IVisitor" Name="IVisitor">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::GuiIqQuery::IVisitor@s:vl.presentation.GuiIqQuery" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::GuiIqQuery" Name="GuiIqQuery">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::GuiIqQuery@s:vl.presentation.GuiIqQuery" />
              </ReferencingOverloadKeys>
              <Parent>
                <SubTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl@ns:vl" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqQuery::IVisitor&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;vl::presentation::GuiIqQuery::IVisitor&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.TypeInfo`0{presentation.helper_types.SiteValue}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters />
      <Specialization>
        <SubTypeDecl ReferencingNameKey="::vl::presentation::helper_types::SiteValue" Name="SiteValue">
          <ReferencingOverloadKeys>
            <Key Value="::vl::presentation::helper_types::SiteValue@s:vl.presentation.helper_types.SiteValue" />
          </ReferencingOverloadKeys>
          <Parent>
            <SubTypeDecl ReferencingNameKey="::vl::presentation::helper_types" Name="helper_types">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::helper_types@ns:vl.presentation.helper_types" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::presentation" Name="presentation">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation@ns:vl.presentation" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="TypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::helper_types::SiteValue&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="content" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::TypeInfo::content" OverloadKey="::vl::reflection::description::TypeInfo`0&lt;presentation::helper_types::SiteValue&gt;::content" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoContent" Name="TypeInfoContent">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeInfoContent@s:vl.reflection.description.TypeInfoContent" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>