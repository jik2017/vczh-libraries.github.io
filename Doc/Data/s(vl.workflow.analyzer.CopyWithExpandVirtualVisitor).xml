<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.analyzer.CopyWithExpandVirtualVisitor">
    <ClassDecl Access="Public" Name="CopyWithExpandVirtualVisitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor" ClassType="Class">
      <Children>
        <VarDecl Access="Private" Name="expandVirtualAst" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::expandVirtualAst" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::expandVirtualAst" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <FuncDecl Access="Private" Name="Expand" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Expand" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Expand(&amp; collections::List&lt;Ptr&lt;WfDeclaration&gt;&gt;)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="decls" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Expand::decls" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Expand(&amp; collections::List&lt;Ptr&lt;WfDeclaration&gt;&gt;)::decls" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <GenericTypeDecl>
                          <Element>
                            <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                              </ReferencingOverloadKeys>
                              <Parent>
                                <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::collections@ns:vl.collections" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Parent>
                            </SubTypeDecl>
                          </Element>
                          <TypeArguments>
                            <GenericTypeDecl>
                              <Element>
                                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </Element>
                              <TypeArguments>
                                <RefTypeDecl ReferencingNameKey="::vl::workflow::WfDeclaration" Name="WfDeclaration">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::workflow::WfDeclaration@s:vl.workflow.WfDeclaration" />
                                  </ReferencingOverloadKeys>
                                </RefTypeDecl>
                              </TypeArguments>
                            </GenericTypeDecl>
                          </TypeArguments>
                        </GenericTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CopyWithExpandVirtualVisitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::CopyWithExpandVirtualVisitor" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::CopyWithExpandVirtualVisitor(bool)" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="_expandVirtualAst" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::CopyWithExpandVirtualVisitor::_expandVirtualAst" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::CopyWithExpandVirtualVisitor(bool)::_expandVirtualAst" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch(* WfVirtualCfeExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch::node" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch(* WfVirtualCfeExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCfeExpression" Name="WfVirtualCfeExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCfeExpression@s:vl.workflow.WfVirtualCfeExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch(* WfVirtualCseExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch::node" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch(* WfVirtualCseExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseExpression" Name="WfVirtualCseExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCseExpression@s:vl.workflow.WfVirtualCseExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Dispatch" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch(* WfVirtualCseStatement)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <SubTypeDecl ReferencingNameKey="::vl::parsing::ParsingTreeCustomBase" Name="ParsingTreeCustomBase">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::parsing::ParsingTreeCustomBase@s:vl.parsing.ParsingTreeCustomBase" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::parsing" Name="parsing">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::parsing@ns:vl.parsing" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch::node" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Dispatch(* WfVirtualCseStatement)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualCseStatement" Name="WfVirtualCseStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualCseStatement@s:vl.workflow.WfVirtualCseStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit(* WfNamespaceDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit::node" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit(* WfNamespaceDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNamespaceDeclaration" Name="WfNamespaceDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNamespaceDeclaration@s:vl.workflow.WfNamespaceDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit(* WfClassDeclaration)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit::node" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit(* WfClassDeclaration)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfClassDeclaration" Name="WfClassDeclaration">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfClassDeclaration@s:vl.workflow.WfClassDeclaration" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit(* WfNewInterfaceExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit::node" OverloadKey="::vl::workflow::analyzer::CopyWithExpandVirtualVisitor::Visit(* WfNewInterfaceExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewInterfaceExpression" Name="WfNewInterfaceExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewInterfaceExpression@s:vl.workflow.WfNewInterfaceExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::copy_visitor::ModuleVisitor" Name="ModuleVisitor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::copy_visitor::ModuleVisitor@s:vl.workflow.copy_visitor.ModuleVisitor" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::copy_visitor" Name="copy_visitor">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::copy_visitor@ns:vl.workflow.copy_visitor" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>