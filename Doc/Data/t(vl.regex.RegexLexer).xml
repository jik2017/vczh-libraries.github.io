<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbolTrees>
  <OverloadingSymbolTree Key="vl.regex.RegexLexer">
    <SymbolTree NamespaceUrlName="vl.regex">
      <SymbolParentMapping />
      <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer" DisplayName="RegexLexer class" Doc="true">
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::pure" DisplayName="pure field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::ids" DisplayName="ids field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::stateTokens" DisplayName="stateTokens field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::proc" DisplayName="proc field" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::RegexLexer(&amp; const collections::IEnumerable&lt;WString&gt;,RegexProc)" DisplayName="RegexLexer constructor" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::~RegexLexer()" DisplayName="~RegexLexer destructor" Doc="false" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::Parse(&amp; const WString,vint)const" DisplayName="Parse method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::Walk()const" DisplayName="Walk method" Doc="true" />
        <Symbol Tags="x64, Windows;x86, Windows" Key="::vl::regex::RegexLexer::Colorize()const" DisplayName="Colorize method" Doc="true" />
      </Symbol>
    </SymbolTree>
  </OverloadingSymbolTree>
</OverloadingSymbolTrees>