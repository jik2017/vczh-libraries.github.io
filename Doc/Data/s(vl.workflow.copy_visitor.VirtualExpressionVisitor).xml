<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.workflow.copy_visitor.VirtualExpressionVisitor">
    <ClassDecl Access="Public" Name="VirtualExpressionVisitor" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor" ClassType="Class">
      <Children>
        <FuncDecl Access="Public" Name="CopyFields" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfBindExpression,* WfBindExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfBindExpression,* WfBindExpression)::from" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBindExpression" Name="WfBindExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBindExpression@s:vl.workflow.WfBindExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="to" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::to" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfBindExpression,* WfBindExpression)::to" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBindExpression" Name="WfBindExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBindExpression@s:vl.workflow.WfBindExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CopyFields" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfVirtualExpression,* WfVirtualExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfVirtualExpression,* WfVirtualExpression)::from" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualExpression" Name="WfVirtualExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualExpression@s:vl.workflow.WfVirtualExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="to" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::to" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfVirtualExpression,* WfVirtualExpression)::to" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualExpression" Name="WfVirtualExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfVirtualExpression@s:vl.workflow.WfVirtualExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CopyFields" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfExpression,* WfExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfExpression,* WfExpression)::from" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="to" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::to" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfExpression,* WfExpression)::to" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CopyFields" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfFormatExpression,* WfFormatExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfFormatExpression,* WfFormatExpression)::from" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFormatExpression" Name="WfFormatExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFormatExpression@s:vl.workflow.WfFormatExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="to" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::to" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfFormatExpression,* WfFormatExpression)::to" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFormatExpression" Name="WfFormatExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFormatExpression@s:vl.workflow.WfFormatExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CopyFields" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfNewCoroutineExpression,* WfNewCoroutineExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfNewCoroutineExpression,* WfNewCoroutineExpression)::from" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewCoroutineExpression" Name="WfNewCoroutineExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewCoroutineExpression@s:vl.workflow.WfNewCoroutineExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="to" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::to" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfNewCoroutineExpression,* WfNewCoroutineExpression)::to" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewCoroutineExpression" Name="WfNewCoroutineExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewCoroutineExpression@s:vl.workflow.WfNewCoroutineExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CopyFields" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfMixinCastExpression,* WfMixinCastExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfMixinCastExpression,* WfMixinCastExpression)::from" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfMixinCastExpression" Name="WfMixinCastExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfMixinCastExpression@s:vl.workflow.WfMixinCastExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="to" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::to" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfMixinCastExpression,* WfMixinCastExpression)::to" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfMixinCastExpression" Name="WfMixinCastExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfMixinCastExpression@s:vl.workflow.WfMixinCastExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CopyFields" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfExpectedTypeCastExpression,* WfExpectedTypeCastExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfExpectedTypeCastExpression,* WfExpectedTypeCastExpression)::from" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpectedTypeCastExpression" Name="WfExpectedTypeCastExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpectedTypeCastExpression@s:vl.workflow.WfExpectedTypeCastExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="to" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields::to" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CopyFields(* WfExpectedTypeCastExpression,* WfExpectedTypeCastExpression)::to" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpectedTypeCastExpression" Name="WfExpectedTypeCastExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpectedTypeCastExpression@s:vl.workflow.WfExpectedTypeCastExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CreateField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField(vl::Ptr&lt;WfExpression&gt;)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl@ns:vl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField(vl::Ptr&lt;WfExpression&gt;)::from" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl@ns:vl" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpression" Name="WfExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpression@s:vl.workflow.WfExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CreateField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField(vl::Ptr&lt;WfStatement&gt;)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl@ns:vl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField(vl::Ptr&lt;WfStatement&gt;)::from" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl@ns:vl" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfStatement" Name="WfStatement">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfStatement@s:vl.workflow.WfStatement" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CreateField" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField(vl::Ptr&lt;WfType&gt;)" Virtual="Abstract" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <GenericTypeDecl>
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl@ns:vl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="from" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField::from" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::CreateField(vl::Ptr&lt;WfType&gt;)::from" Static="False">
                  <Type>
                    <GenericTypeDecl>
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl" Name="vl">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl@ns:vl" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfType" Name="WfType">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfType@s:vl.workflow.WfType" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfBindExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfBindExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfBindExpression" Name="WfBindExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfBindExpression@s:vl.workflow.WfBindExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfFormatExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfFormatExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfFormatExpression" Name="WfFormatExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfFormatExpression@s:vl.workflow.WfFormatExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfNewCoroutineExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfNewCoroutineExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfNewCoroutineExpression" Name="WfNewCoroutineExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfNewCoroutineExpression@s:vl.workflow.WfNewCoroutineExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfMixinCastExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfMixinCastExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfMixinCastExpression" Name="WfMixinCastExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfMixinCastExpression@s:vl.workflow.WfMixinCastExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="Visit" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfExpectedTypeCastExpression)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit::node" OverloadKey="::vl::workflow::copy_visitor::VirtualExpressionVisitor::Visit(* WfExpectedTypeCastExpression)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::workflow::WfExpectedTypeCastExpression" Name="WfExpectedTypeCastExpression">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::workflow::WfExpectedTypeCastExpression@s:vl.workflow.WfExpectedTypeCastExpression" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::workflow::copy_visitor::VisitorBase" Name="VisitorBase">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::copy_visitor::VisitorBase@s:vl.workflow.copy_visitor.VisitorBase" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <SubTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualExpression::IVisitor" Name="IVisitor">
              <ReferencingOverloadKeys>
                <Key Value="::vl::workflow::WfVirtualExpression::IVisitor@s:vl.workflow.WfVirtualExpression" />
              </ReferencingOverloadKeys>
              <Parent>
                <RefTypeDecl ReferencingNameKey="::vl::workflow::WfVirtualExpression" Name="WfVirtualExpression">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::workflow::WfVirtualExpression@s:vl.workflow.WfVirtualExpression" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Parent>
            </SubTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>