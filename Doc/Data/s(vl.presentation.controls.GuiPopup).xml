<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.GuiPopup">
    <ClassDecl Access="Public" Name="GuiPopup" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup" OverloadKey="::vl::presentation::controls::GuiPopup" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents a popup window. When the mouse click on other window or the desktop, the popup window will be closed automatically.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <ClassDecl Access="Protected" Name="PopupInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo" ClassType="Union">
          <Children>
            <ClassDecl Access="Public" Name="_s1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s1" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s1" ClassType="Struct">
              <Children>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s1::location" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s1::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="screen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s1::screen" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s1::screen" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeScreen" Name="INativeScreen">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeScreen@s:vl.presentation.INativeScreen" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Children>
              <BaseTypes />
            </ClassDecl>
            <ClassDecl Access="Public" Name="_s2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2" ClassType="Struct">
              <Children>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2::control" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="controlWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2::controlWindow" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2::controlWindow" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="bounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2::bounds" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2::bounds" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="preferredTopBottomSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2::preferredTopBottomSide" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2::preferredTopBottomSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Children>
              <BaseTypes />
            </ClassDecl>
            <ClassDecl Access="Public" Name="_s3" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3" ClassType="Struct">
              <Children>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3::control" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="controlWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3::controlWindow" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3::controlWindow" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3::location" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Children>
              <BaseTypes />
            </ClassDecl>
            <ClassDecl Access="Public" Name="_s4" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4" ClassType="Struct">
              <Children>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4::control" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="controlWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4::controlWindow" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4::controlWindow" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="preferredTopBottomSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4::preferredTopBottomSide" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4::preferredTopBottomSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Children>
              <BaseTypes />
            </ClassDecl>
            <VarDecl Access="Public" Name="_1" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_1" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_1" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s1" Name="_s1">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiPopup::PopupInfo::_s1@s:vl.presentation.controls.GuiPopup" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="_2" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_2" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_2" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s2" Name="_s2">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiPopup::PopupInfo::_s2@s:vl.presentation.controls.GuiPopup" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="_3" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_3" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_3" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s3" Name="_s3">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiPopup::PopupInfo::_s3@s:vl.presentation.controls.GuiPopup" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <VarDecl Access="Public" Name="_4" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_4" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::_4" Static="False">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiPopup::PopupInfo::_s4" Name="_s4">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiPopup::PopupInfo::_s4@s:vl.presentation.controls.GuiPopup" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </VarDecl>
            <FuncDecl Access="Public" Name="PopupInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupInfo::PopupInfo" OverloadKey="::vl::presentation::controls::GuiPopup::PopupInfo::PopupInfo()" Virtual="Normal" Function="Constructor">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <RefTypeDecl Name="void" />
                  </ReturnType>
                  <Parameters />
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
        <VarDecl Access="Protected" Name="popupType" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::popupType" OverloadKey="::vl::presentation::controls::GuiPopup::popupType" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="popupInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::popupInfo" OverloadKey="::vl::presentation::controls::GuiPopup::popupInfo" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiPopup::PopupInfo" Name="PopupInfo">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiPopup::PopupInfo@s:vl.presentation.controls.GuiPopup" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="UpdateClientSizeAfterRendering" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::UpdateClientSizeAfterRendering" OverloadKey="::vl::presentation::controls::GuiPopup::UpdateClientSizeAfterRendering(Size)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="clientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::UpdateClientSizeAfterRendering::clientSize" OverloadKey="::vl::presentation::controls::GuiPopup::UpdateClientSizeAfterRendering(Size)::clientSize" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="MouseClickedOnOtherWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::MouseClickedOnOtherWindow" OverloadKey="::vl::presentation::controls::GuiPopup::MouseClickedOnOtherWindow(* GuiWindow)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="window" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::MouseClickedOnOtherWindow::window" OverloadKey="::vl::presentation::controls::GuiPopup::MouseClickedOnOtherWindow(* GuiWindow)::window" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiWindow" Name="GuiWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiWindow@s:vl.presentation.controls.GuiWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="PopupOpened" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupOpened" OverloadKey="::vl::presentation::controls::GuiPopup::PopupOpened(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="sender" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupOpened::sender" OverloadKey="::vl::presentation::controls::GuiPopup::PopupOpened(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::sender" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupOpened::arguments" OverloadKey="::vl::presentation::controls::GuiPopup::PopupOpened(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="PopupClosed" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupClosed" OverloadKey="::vl::presentation::controls::GuiPopup::PopupClosed(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="sender" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupClosed::sender" OverloadKey="::vl::presentation::controls::GuiPopup::PopupClosed(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::sender" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::PopupClosed::arguments" OverloadKey="::vl::presentation::controls::GuiPopup::PopupClosed(* compositions::GuiGraphicsComposition,&amp; compositions::GuiEventArgs)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnKeyDown" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::OnKeyDown" OverloadKey="::vl::presentation::controls::GuiPopup::OnKeyDown(* compositions::GuiGraphicsComposition,&amp; compositions::GuiKeyEventArgs)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="sender" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::OnKeyDown::sender" OverloadKey="::vl::presentation::controls::GuiPopup::OnKeyDown(* compositions::GuiGraphicsComposition,&amp; compositions::GuiKeyEventArgs)::sender" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::OnKeyDown::arguments" OverloadKey="::vl::presentation::controls::GuiPopup::OnKeyDown(* compositions::GuiGraphicsComposition,&amp; compositions::GuiKeyEventArgs)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <SubTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiKeyEventArgs" Name="GuiKeyEventArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiKeyEventArgs@s:vl.presentation.compositions.GuiKeyEventArgs" />
                          </ReferencingOverloadKeys>
                          <Parent>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions" Name="compositions">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::compositions@ns:vl.presentation.compositions" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Parent>
                        </SubTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="IsClippedByScreen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen" OverloadKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen(Size,Point,* INativeScreen)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen::size" OverloadKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen(Size,Point,* INativeScreen)::size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen::location" OverloadKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen(Size,Point,* INativeScreen)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="screen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen::screen" OverloadKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen(Size,Point,* INativeScreen)::screen" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeScreen" Name="INativeScreen">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeScreen@s:vl.presentation.INativeScreen" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="CalculatePopupPosition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,Point,* INativeScreen)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::size" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,Point,* INativeScreen)::size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::location" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,Point,* INativeScreen)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="screen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::screen" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,Point,* INativeScreen)::screen" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeScreen" Name="INativeScreen">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeScreen@s:vl.presentation.INativeScreen" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="CalculatePopupPosition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Rect,bool)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::size" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Rect,bool)::size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::control" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Rect,bool)::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="controlWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::controlWindow" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Rect,bool)::controlWindow" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="bounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::bounds" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Rect,bool)::bounds" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="preferredTopBottomSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::preferredTopBottomSide" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Rect,bool)::preferredTopBottomSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="CalculatePopupPosition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Point)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::size" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Point)::size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::control" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Point)::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="controlWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::controlWindow" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Point)::controlWindow" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::location" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,Point)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="CalculatePopupPosition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,bool)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::size" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,bool)::size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::control" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,bool)::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="controlWindow" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::controlWindow" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,bool)::controlWindow" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeWindow" Name="INativeWindow">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeWindow@s:vl.presentation.INativeWindow" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="preferredTopBottomSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::preferredTopBottomSide" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,* GuiControl,* INativeWindow,bool)::preferredTopBottomSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="CalculatePopupPosition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,vint,&amp; const PopupInfo)" Virtual="Static" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="size" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::size" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,vint,&amp; const PopupInfo)::size" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="popupType" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::popupType" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,vint,&amp; const PopupInfo)::popupType" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="popupInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition::popupInfo" OverloadKey="::vl::presentation::controls::GuiPopup::CalculatePopupPosition(Size,vint,&amp; const PopupInfo)::popupInfo" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <DecorateTypeDecl Decoration="Const">
                          <Element>
                            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiPopup::PopupInfo" Name="PopupInfo">
                              <ReferencingOverloadKeys>
                                <Key Value="::vl::presentation::controls::GuiPopup::PopupInfo@s:vl.presentation.controls.GuiPopup" />
                              </ReferencingOverloadKeys>
                            </RefTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="ShowPopupInternal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopupInternal" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopupInternal()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiPopup" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::GuiPopup" OverloadKey="::vl::presentation::controls::GuiPopup::GuiPopup(theme::ThemeName)" Virtual="Normal" Function="Constructor">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Create a control with a specified default theme.&lt;/summary&gt;
  &lt;param name="themeName"&gt;The theme name for retriving a default control template.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="themeName" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::GuiPopup::themeName" OverloadKey="::vl::presentation::controls::GuiPopup::GuiPopup(theme::ThemeName)::themeName" Static="False">
                  <Type>
                    <SubTypeDecl ReferencingNameKey="::vl::presentation::theme::ThemeName" Name="ThemeName">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::theme::ThemeName@s:vl.presentation.theme.ThemeName" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::theme" Name="theme">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::theme@ns:vl.presentation.theme" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiPopup" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::~GuiPopup" OverloadKey="::vl::presentation::controls::GuiPopup::~GuiPopup()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsClippedByScreen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen" OverloadKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen(Point)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test will the whole popup window be in the screen if the popup's left-top position is set to a specified value.&lt;/summary&gt;
  &lt;returns&gt;Returns true if the whole popup window will be in the screen.&lt;/returns&gt;
  &lt;param name="location"&gt;The specified left-top position.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen::location" OverloadKey="::vl::presentation::controls::GuiPopup::IsClippedByScreen(Point)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ShowPopup" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(Point,* INativeScreen)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Show the popup window with the left-top position set to a specified value. The position of the popup window will be adjusted to make it totally inside the screen if possible.&lt;/summary&gt;
  &lt;param name="location"&gt;The specified left-top position.&lt;/param&gt;
  &lt;param name="screen"&gt;The expected screen. If you don't want to specify any screen, don't set this parameter.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::location" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(Point,* INativeScreen)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="screen" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::screen" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(Point,* INativeScreen)::screen" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::INativeScreen" Name="INativeScreen">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::INativeScreen@s:vl.presentation.INativeScreen" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ShowPopup" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,Rect,bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Show the popup window with the bounds set to a specified control-relative value. The position of the popup window will be adjusted to make it totally inside the screen if possible.&lt;/summary&gt;
  &lt;param name="control"&gt;The control that owns this popup temporary. And the location is relative to this control.&lt;/param&gt;
  &lt;param name="bounds"&gt;The specified bounds.&lt;/param&gt;
  &lt;param name="preferredTopBottomSide"&gt;Set to true if the popup window is expected to be opened at the top or bottom side of that bounds.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::control" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,Rect,bool)::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="bounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::bounds" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,Rect,bool)::bounds" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="preferredTopBottomSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::preferredTopBottomSide" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,Rect,bool)::preferredTopBottomSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ShowPopup" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,Point)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Show the popup window with the left-top position set to a specified control-relative value. The position of the popup window will be adjusted to make it totally inside the screen if possible.&lt;/summary&gt;
  &lt;param name="control"&gt;The control that owns this popup temporary. And the location is relative to this control.&lt;/param&gt;
  &lt;param name="location"&gt;The specified left-top position.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::control" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,Point)::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="location" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::location" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,Point)::location" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Point" Name="Point">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Point@s:vl.presentation.Point" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ShowPopup" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,bool)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Show the popup window aligned with a specified control. The position of the popup window will be adjusted to make it totally inside the screen if possible.&lt;/summary&gt;
  &lt;param name="control"&gt;The control that owns this popup temporary.&lt;/param&gt;
  &lt;param name="preferredTopBottomSide"&gt;Set to true if the popup window is expected to be opened at the top or bottom side of that control.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="control" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::control" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,bool)::control" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiControl" Name="GuiControl">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::GuiControl@s:vl.presentation.controls.GuiControl" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="preferredTopBottomSide" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::GuiPopup::ShowPopup::preferredTopBottomSide" OverloadKey="::vl::presentation::controls::GuiPopup::ShowPopup(* GuiControl,bool)::preferredTopBottomSide" Static="False">
                  <Type>
                    <RefTypeDecl Name="bool" />
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiWindow" Name="GuiWindow">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::controls::GuiWindow@s:vl.presentation.controls.GuiWindow" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::GuiPopup" Name="GuiPopup">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::GuiPopup@s:vl.presentation.controls.GuiPopup" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>