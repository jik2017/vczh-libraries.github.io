<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;" ClassType="Struct">
          <Children>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <DecorateTypeDecl Decoration="Const">
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
        </DecorateTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Type">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" Name="Type">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <DecorateTypeDecl Decoration="Volatile">
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
        </DecorateTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Type">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" Name="Type">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <DecorateTypeDecl Decoration="Pointer">
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
        </DecorateTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Type">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" Name="Type">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <GenericTypeDecl>
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
          <TypeArguments>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </TypeArguments>
        </GenericTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" Name="Type">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <GenericTypeDecl>
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::Nullable" Name="Nullable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Nullable`1@s:vl.Nullable`1" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
          <TypeArguments>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </TypeArguments>
        </GenericTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" Name="Type">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Nullable" Name="Nullable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Nullable`1@s:vl.Nullable`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Nullable" Name="Nullable">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Nullable`1@s:vl.Nullable`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::Nullable" Name="Nullable">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::Nullable`1@s:vl.Nullable`1" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <DecorateTypeDecl Decoration="LeftRef">
          <Element>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Element>
        </DecorateTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Type">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" Name="Type">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Type@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType">
              <Type>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::EnumerableType" Name="EnumerableType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::EnumerableType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueEnumerable" Name="IValueEnumerable">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueEnumerable@s:vl.reflection.description.IValueEnumerable" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" Name="ResultReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" Name="ResultNonReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::ReadonlyListType" Name="ReadonlyListType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::ReadonlyListType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueReadonlyList" Name="IValueReadonlyList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueReadonlyList@s:vl.reflection.description.IValueReadonlyList" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" Name="ResultReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" Name="ResultNonReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::ListType" Name="ListType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::ListType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueList" Name="IValueList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueList@s:vl.reflection.description.IValueList" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" Name="ResultReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" Name="ResultNonReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::ObservableListType" Name="ObservableListType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::ObservableListType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueObservableList" Name="IValueObservableList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueObservableList@s:vl.reflection.description.IValueObservableList" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" Name="ResultReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" Name="ResultNonReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::ReadonlyDictionaryType" Name="ReadonlyDictionaryType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::ReadonlyDictionaryType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueReadonlyList" Name="IValueReadonlyList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueReadonlyList@s:vl.reflection.description.IValueReadonlyList" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" Name="ResultReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" Name="ResultNonReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
  <Symbols Key="vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::reflection::description::T" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::T" />
      </TypeParameters>
      <Specialization>
        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
          </ReferencingOverloadKeys>
        </RefTypeDecl>
        <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::DictionaryType" Name="DictionaryType">
          <ReferencingOverloadKeys>
            <Key Value="::vl::reflection::description::TypeFlags::DictionaryType@s:vl.reflection.description.TypeFlags" />
          </ReferencingOverloadKeys>
          <Parent>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Parent>
        </SubTypeDecl>
      </Specialization>
      <Element>
        <ClassDecl Access="Public" Name="DetailTypeInfoRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;" ClassType="Struct">
          <Children>
            <TypedefDecl Access="Public" Name="UpLevelRetriver" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::UpLevelRetriver">
              <Type>
                <GenericTypeDecl>
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver" Name="DetailTypeInfoRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;const Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`2{const Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                  <TypeArguments>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::T" Name="T">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::T@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags::NonGenericType" Name="NonGenericType">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::TypeFlags::NonGenericType@s:vl.reflection.description.TypeFlags" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeFlags" Name="TypeFlags">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeFlags@s:vl.reflection.description.TypeFlags" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </TypeArguments>
                </GenericTypeDecl>
              </Type>
            </TypedefDecl>
            <VarDecl Access="Public" Name="Decorator" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Decorator" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Decorator" Static="True">
              <Type>
                <DecorateTypeDecl Decoration="Const">
                  <Element>
                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo::Decorator" Name="Decorator">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::ITypeInfo::Decorator@s:vl.reflection.description.ITypeInfo" />
                      </ReferencingOverloadKeys>
                      <Parent>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Parent>
                    </SubTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Type>
            </VarDecl>
            <TypedefDecl Access="Public" Name="Type" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::Type" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::Type">
              <Type>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::IValueReadonlyList" Name="IValueReadonlyList">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::IValueReadonlyList@s:vl.reflection.description.IValueReadonlyList" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="TempValueType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::TempValueType" Name="TempValueType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::TempValueType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultReferenceType" Name="ResultReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <TypedefDecl Access="Public" Name="ResultNonReferenceType" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType">
              <Type>
                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::ResultNonReferenceType" Name="ResultNonReferenceType">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;const T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{const T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;volatile T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{volatile T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;* T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{^ T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Ptr&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Ptr{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;Nullable&lt;T&gt;,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{Nullable{T},TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;&amp; T,TypeFlags::NonGenericType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{&amp; T,TypeFlags.NonGenericType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`2&lt;Func&lt;function (... TArgs) : R&gt;,TypeFlags::FunctionType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`2{Func{function (... TArgs) # R},TypeFlags.FunctionType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::EnumerableType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.EnumerableType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ObservableListType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ObservableListType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::ReadonlyDictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.ReadonlyDictionaryType}" />
                    <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::ResultNonReferenceType@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::reflection::description::DetailTypeInfoRetriver::UpLevelRetriver" Name="UpLevelRetriver">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::UpLevelRetriver@s:vl.reflection.description.DetailTypeInfoRetriver`1{T,TypeFlags.DictionaryType}" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Type>
            </TypedefDecl>
            <FuncDecl Access="Public" Name="CreateTypeInfo" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::CreateTypeInfo(TypeInfoHint)" Virtual="Static" Function="Function">
              <Type>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <GenericTypeDecl>
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                      <TypeArguments>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ITypeInfo" Name="ITypeInfo">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::ITypeInfo@s:vl.reflection.description.ITypeInfo" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </TypeArguments>
                    </GenericTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Name="hint" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::DetailTypeInfoRetriver::CreateTypeInfo::hint" OverloadKey="::vl::reflection::description::DetailTypeInfoRetriver`1&lt;T,TypeFlags::DictionaryType&gt;::CreateTypeInfo(TypeInfoHint)::hint" Static="False">
                      <Type>
                        <RefTypeDecl ReferencingNameKey="::vl::reflection::description::TypeInfoHint" Name="TypeInfoHint">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::reflection::description::TypeInfoHint@s:vl.reflection.description.TypeInfoHint" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </Type>
            </FuncDecl>
          </Children>
          <BaseTypes />
        </ClassDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>