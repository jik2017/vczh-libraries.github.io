<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.controls.tree.INodeItemView">
    <ClassDecl Access="Public" Name="INodeItemView" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::INodeItemView" OverloadKey="::vl::presentation::controls::tree::INodeItemView" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;The required &lt;links&gt;&lt;link cref="::vl::presentation::controls::GuiListControl::IItemProvider@s:vl.presentation.controls.GuiListControl" /&gt;&lt;/links&gt; view for [T:vl.presentation.controls.tree.NodeItemStyleProvider][T:vl.presentation.controls.tree.NodeItemStyleProvider]. &lt;links&gt;&lt;link cref="::vl::presentation::controls::tree::NodeItemProvider@s:vl.presentation.controls.tree.NodeItemProvider" /&gt;&lt;/links&gt; provides this view. In most of the cases, the NodeItemProvider class and this view is not required users to create, or even to touch. &lt;links&gt;&lt;link cref="::vl::presentation::controls::GuiVirtualTreeListControl@s:vl.presentation.controls.GuiVirtualTreeListControl" /&gt;&lt;/links&gt; already handled all of this.&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <VarDecl Access="Public" Name="Identifier" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::INodeItemView::Identifier" OverloadKey="::vl::presentation::controls::tree::INodeItemView::Identifier" Static="True">
          <Document>&lt;Document&gt;
  &lt;summary&gt;The identifier of this view.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Type>
            <DecorateTypeDecl Decoration="Const">
              <Element>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl Name="wchar_t" />
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Public" Name="RequestNode" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::INodeItemView::RequestNode" OverloadKey="::vl::presentation::controls::tree::INodeItemView::RequestNode(vint)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get an instance of a node by the index in all visible nodes. If the node is no longer needed, a call to &lt;links&gt;&lt;link cref="::vl::presentation::controls::tree::INodeItemView::ReleaseNode(* INodeProvider)@s:vl.presentation.controls.tree.INodeItemView" /&gt;&lt;/links&gt; is required.&lt;/summary&gt;
  &lt;returns&gt;The instance of a node by the index in all visible nodes.&lt;/returns&gt;
  &lt;param name="index"&gt;The index in all visible nodes.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::INodeItemView::RequestNode::index" OverloadKey="::vl::presentation::controls::tree::INodeItemView::RequestNode(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ReleaseNode" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::INodeItemView::ReleaseNode" OverloadKey="::vl::presentation::controls::tree::INodeItemView::ReleaseNode(* INodeProvider)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Release an instance of a node.&lt;/summary&gt;
  &lt;param name="node"&gt;The instance of a node.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::INodeItemView::ReleaseNode::node" OverloadKey="::vl::presentation::controls::tree::INodeItemView::ReleaseNode(* INodeProvider)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="CalculateNodeVisibilityIndex" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::INodeItemView::CalculateNodeVisibilityIndex" OverloadKey="::vl::presentation::controls::tree::INodeItemView::CalculateNodeVisibilityIndex(* INodeProvider)" Virtual="Abstract" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the index in all visible nodes of a node.&lt;/summary&gt;
  &lt;returns&gt;The index in all visible nodes of a node.&lt;/returns&gt;
  &lt;param name="node"&gt;The node to calculate the index.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="node" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::controls::tree::INodeItemView::CalculateNodeVisibilityIndex::node" OverloadKey="::vl::presentation::controls::tree::INodeItemView::CalculateNodeVisibilityIndex(* INodeProvider)::node" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeProvider" Name="INodeProvider">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::controls::tree::INodeProvider@s:vl.presentation.controls.tree.INodeProvider" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::reflection::IDescriptable" Name="IDescriptable">
              <ReferencingOverloadKeys>
                <Key Value="::vl::reflection::IDescriptable@s:vl.reflection.IDescriptable" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::controls::tree::INodeItemView" Name="INodeItemView">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::controls::tree::INodeItemView@s:vl.presentation.controls.tree.INodeItemView" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>