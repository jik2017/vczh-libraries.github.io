<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.reflection.description.StateMachine">
    <ClassDecl Access="Public" Name="StateMachine" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine" OverloadKey="::vl::reflection::description::StateMachine" ClassType="Class">
      <Children>
        <VarDecl Access="Protected" Name="stateMachineInitialized" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine::stateMachineInitialized" OverloadKey="::vl::reflection::description::StateMachine::stateMachineInitialized" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="stateMachineStopped" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine::stateMachineStopped" OverloadKey="::vl::reflection::description::StateMachine::stateMachineStopped" Static="False">
          <Type>
            <RefTypeDecl Name="bool" />
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="stateMachineInput" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine::stateMachineInput" OverloadKey="::vl::reflection::description::StateMachine::stateMachineInput" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="stateMachineCoroutine" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine::stateMachineCoroutine" OverloadKey="::vl::reflection::description::StateMachine::stateMachineCoroutine" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Ptr" Name="Ptr">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Ptr`1@s:vl.Ptr`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::ICoroutine" Name="ICoroutine">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::ICoroutine@s:vl.reflection.description.ICoroutine" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="ResumeStateMachine" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine::ResumeStateMachine" OverloadKey="::vl::reflection::description::StateMachine::ResumeStateMachine()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="StateMachine" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine::StateMachine" OverloadKey="::vl::reflection::description::StateMachine::StateMachine()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~StateMachine" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine::~StateMachine" OverloadKey="::vl::reflection::description::StateMachine::~StateMachine()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetStateMachineStatus" Tags="x64, Windows;x86, Windows" NameKey="::vl::reflection::description::StateMachine::GetStateMachineStatus" OverloadKey="::vl::reflection::description::StateMachine::GetStateMachineStatus()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::CoroutineStatus" Name="CoroutineStatus">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::CoroutineStatus@s:vl.reflection.description.CoroutineStatus" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::Object" Name="Object">
              <ReferencingOverloadKeys>
                <Key Value="::vl::Object@s:vl.Object" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::AggregatableDescription" Name="AggregatableDescription">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::AggregatableDescription`1@s:vl.reflection.AggregatableDescription`1" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::description::StateMachine" Name="StateMachine">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::description::StateMachine@s:vl.reflection.description.StateMachine" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>