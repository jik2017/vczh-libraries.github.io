<?xml version="1.0" encoding="utf-8"?>
<Namespace DisplayName="::vl::presentation">
  <Overloads DisplayName="Alignment enum">
    <Symbol Key="::vl::presentation::Alignment" UrlName="vl.presentation.Alignment" Doc="true" />
  </Overloads>
  <Overloads DisplayName="ApplyStyle function">
    <Symbol Key="::vl::presentation::ApplyStyle(Ptr&lt;GuiInstanceStyle&gt;,Ptr&lt;GuiConstructorRepr&gt;)" UrlName="vl.presentation.ApplyStyle(Ptr{GuiInstanceStyle},Ptr{GuiConstructorRepr})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="AxisDirection enum">
    <Symbol Key="::vl::presentation::AxisDirection" UrlName="vl.presentation.AxisDirection" Doc="true" />
  </Overloads>
  <Overloads DisplayName="BinaryToHex function">
    <Symbol Key="::vl::presentation::BinaryToHex(&amp; stream::IStream)" UrlName="vl.presentation.BinaryToHex(&amp; stream.IStream)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Color struct">
    <Symbol Key="::vl::presentation::Color" UrlName="vl.presentation.Color" Doc="true" />
  </Overloads>
  <Overloads DisplayName="CompressStream function">
    <Symbol Key="::vl::presentation::CompressStream(&amp; stream::IStream,&amp; stream::IStream)" UrlName="vl.presentation.CompressStream(&amp; stream.IStream,&amp; stream.IStream)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="CopyStream function">
    <Symbol Key="::vl::presentation::CopyStream(&amp; stream::IStream,&amp; stream::IStream)" UrlName="vl.presentation.CopyStream(&amp; stream.IStream,&amp; stream.IStream)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="DecompressStream function">
    <Symbol Key="::vl::presentation::DecompressStream(&amp; stream::IStream,&amp; stream::IStream)" UrlName="vl.presentation.DecompressStream(&amp; stream.IStream,&amp; stream.IStream)" Doc="false" />
    <Symbol Key="::vl::presentation::DecompressStream(* * const char,bool,vint,vint,vint,&amp; stream::IStream)" UrlName="vl.presentation.DecompressStream(^ ^ const char,bool,vint,vint,vint,&amp; stream.IStream)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="DocumentContainerRun class">
    <Symbol Key="::vl::presentation::DocumentContainerRun" UrlName="vl.presentation.DocumentContainerRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentContentRun class">
    <Symbol Key="::vl::presentation::DocumentContentRun" UrlName="vl.presentation.DocumentContentRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentEmbeddedObjectRun class">
    <Symbol Key="::vl::presentation::DocumentEmbeddedObjectRun" UrlName="vl.presentation.DocumentEmbeddedObjectRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentFontSize struct">
    <Symbol Key="::vl::presentation::DocumentFontSize" UrlName="vl.presentation.DocumentFontSize" Doc="false" />
  </Overloads>
  <Overloads DisplayName="DocumentHyperlinkRun class">
    <Symbol Key="::vl::presentation::DocumentHyperlinkRun" UrlName="vl.presentation.DocumentHyperlinkRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentImageRun class">
    <Symbol Key="::vl::presentation::DocumentImageRun" UrlName="vl.presentation.DocumentImageRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentInlineObjectRun class">
    <Symbol Key="::vl::presentation::DocumentInlineObjectRun" UrlName="vl.presentation.DocumentInlineObjectRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentModel class">
    <Symbol Key="::vl::presentation::DocumentModel" UrlName="vl.presentation.DocumentModel" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentParagraphRun class">
    <Symbol Key="::vl::presentation::DocumentParagraphRun" UrlName="vl.presentation.DocumentParagraphRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentRun class">
    <Symbol Key="::vl::presentation::DocumentRun" UrlName="vl.presentation.DocumentRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentStyle class">
    <Symbol Key="::vl::presentation::DocumentStyle" UrlName="vl.presentation.DocumentStyle" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentStyleApplicationRun class">
    <Symbol Key="::vl::presentation::DocumentStyleApplicationRun" UrlName="vl.presentation.DocumentStyleApplicationRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentStyleProperties class">
    <Symbol Key="::vl::presentation::DocumentStyleProperties" UrlName="vl.presentation.DocumentStyleProperties" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentStylePropertiesRun class">
    <Symbol Key="::vl::presentation::DocumentStylePropertiesRun" UrlName="vl.presentation.DocumentStylePropertiesRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="DocumentTextRun class">
    <Symbol Key="::vl::presentation::DocumentTextRun" UrlName="vl.presentation.DocumentTextRun" Doc="true" />
  </Overloads>
  <Overloads DisplayName="ExecuteQuery function">
    <Symbol Key="::vl::presentation::ExecuteQuery(Ptr&lt;GuiIqQuery&gt;,Ptr&lt;GuiInstanceContext&gt;,&amp; collections::List&lt;Ptr&lt;GuiConstructorRepr&gt;&gt;,&amp; collections::List&lt;Ptr&lt;GuiConstructorRepr&gt;&gt;)" UrlName="vl.presentation.ExecuteQuery(Ptr{GuiIqQuery},Ptr{GuiInstanceContext},&amp; collections.List{Ptr{GuiConstructorRepr}},&amp; collections.List{Ptr{GuiConstructorRepr}})" Doc="false" />
    <Symbol Key="::vl::presentation::ExecuteQuery(Ptr&lt;GuiIqQuery&gt;,Ptr&lt;GuiInstanceContext&gt;,&amp; collections::List&lt;Ptr&lt;GuiConstructorRepr&gt;&gt;)" UrlName="vl.presentation.ExecuteQuery(Ptr{GuiIqQuery},Ptr{GuiInstanceContext},&amp; collections.List{Ptr{GuiConstructorRepr}})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="FindInstanceLoadingSource function">
    <Symbol Key="::vl::presentation::FindInstanceLoadingSource(Ptr&lt;GuiInstanceContext&gt;,GlobalStringKey,&amp; const WString)" UrlName="vl.presentation.FindInstanceLoadingSource(Ptr{GuiInstanceContext},GlobalStringKey,&amp; const WString)" Doc="false" />
    <Symbol Key="::vl::presentation::FindInstanceLoadingSource(Ptr&lt;GuiInstanceContext&gt;,* GuiConstructorRepr)" UrlName="vl.presentation.FindInstanceLoadingSource(Ptr{GuiInstanceContext},^ GuiConstructorRepr)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="FontProperties struct">
    <Symbol Key="::vl::presentation::FontProperties" UrlName="vl.presentation.FontProperties" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GetCurrentController function">
    <Symbol Key="::vl::presentation::GetCurrentController()" UrlName="vl.presentation.GetCurrentController()" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GetFileName function">
    <Symbol Key="::vl::presentation::GetFileName(&amp; const WString)" UrlName="vl.presentation.GetFileName(&amp; const WString)" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GetFolderPath function">
    <Symbol Key="::vl::presentation::GetFolderPath(&amp; const WString)" UrlName="vl.presentation.GetFolderPath(&amp; const WString)" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GetInstanceLoaderManager function">
    <Symbol Key="::vl::presentation::GetInstanceLoaderManager()" UrlName="vl.presentation.GetInstanceLoaderManager()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GetParser function">
    <Symbol Key="::vl::presentation::GetParser`1(&amp; const WString)" UrlName="vl.presentation.GetParser`1(&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GetParserManager function">
    <Symbol Key="::vl::presentation::GetParserManager()" UrlName="vl.presentation.GetParserManager()" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GetResourceManager function">
    <Symbol Key="::vl::presentation::GetResourceManager()" UrlName="vl.presentation.GetResourceManager()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GetResourceResolverManager function">
    <Symbol Key="::vl::presentation::GetResourceResolverManager()" UrlName="vl.presentation.GetResourceResolverManager()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GlobalStringKey struct">
    <Symbol Key="::vl::presentation::GlobalStringKey" UrlName="vl.presentation.GlobalStringKey" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GridPos struct">
    <Symbol Key="::vl::presentation::GridPos" UrlName="vl.presentation.GridPos" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiAttSetterRepr class">
    <Symbol Key="::vl::presentation::GuiAttSetterRepr" UrlName="vl.presentation.GuiAttSetterRepr" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiConstructorRepr class">
    <Symbol Key="::vl::presentation::GuiConstructorRepr" UrlName="vl.presentation.GuiConstructorRepr" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiImageData class">
    <Symbol Key="::vl::presentation::GuiImageData" UrlName="vl.presentation.GuiImageData" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiInstanceCompiledWorkflow class">
    <Symbol Key="::vl::presentation::GuiInstanceCompiledWorkflow" UrlName="vl.presentation.GuiInstanceCompiledWorkflow" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiInstanceContext class">
    <Symbol Key="::vl::presentation::GuiInstanceContext" UrlName="vl.presentation.GuiInstanceContext" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiInstanceNamespace class">
    <Symbol Key="::vl::presentation::GuiInstanceNamespace" UrlName="vl.presentation.GuiInstanceNamespace" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiInstanceParameter class">
    <Symbol Key="::vl::presentation::GuiInstanceParameter" UrlName="vl.presentation.GuiInstanceParameter" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiInstancePropertyInfo class">
    <Symbol Key="::vl::presentation::GuiInstancePropertyInfo" UrlName="vl.presentation.GuiInstancePropertyInfo" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiInstanceSharedScript class">
    <Symbol Key="::vl::presentation::GuiInstanceSharedScript" UrlName="vl.presentation.GuiInstanceSharedScript" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiInstanceStyle class">
    <Symbol Key="::vl::presentation::GuiInstanceStyle" UrlName="vl.presentation.GuiInstanceStyle" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiInstanceStyleContext class">
    <Symbol Key="::vl::presentation::GuiInstanceStyleContext" UrlName="vl.presentation.GuiInstanceStyleContext" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqBinaryOperator enum">
    <Symbol Key="::vl::presentation::GuiIqBinaryOperator" UrlName="vl.presentation.GuiIqBinaryOperator" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqCascadeQuery class">
    <Symbol Key="::vl::presentation::GuiIqCascadeQuery" UrlName="vl.presentation.GuiIqCascadeQuery" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqChildOption enum">
    <Symbol Key="::vl::presentation::GuiIqChildOption" UrlName="vl.presentation.GuiIqChildOption" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqConvertParsingTreeNode function">
    <Symbol Key="::vl::presentation::GuiIqConvertParsingTreeNode(vl::Ptr&lt;vl::parsing::ParsingTreeNode&gt;,&amp; const vl::collections::List&lt;vl::regex::RegexToken&gt;)" UrlName="vl.presentation.GuiIqConvertParsingTreeNode(vl.Ptr{vl.parsing.ParsingTreeNode},&amp; const vl.collections.List{vl.regex.RegexToken})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqGetParserTextBuffer function">
    <Symbol Key="::vl::presentation::GuiIqGetParserTextBuffer()" UrlName="vl.presentation.GuiIqGetParserTextBuffer()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqLoadTable function">
    <Symbol Key="::vl::presentation::GuiIqLoadTable()" UrlName="vl.presentation.GuiIqLoadTable()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqNameOption enum">
    <Symbol Key="::vl::presentation::GuiIqNameOption" UrlName="vl.presentation.GuiIqNameOption" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqParse function">
    <Symbol Key="::vl::presentation::GuiIqParse(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,&amp; vl::collections::List&lt;vl::Ptr&lt;vl::parsing::ParsingError&gt;&gt;,vl::vint)" UrlName="vl.presentation.GuiIqParse(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},&amp; vl.collections.List{vl.Ptr{vl.parsing.ParsingError}},vl.vint)" Doc="false" />
    <Symbol Key="::vl::presentation::GuiIqParse(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,vl::vint)" UrlName="vl.presentation.GuiIqParse(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},vl.vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqParseAsParsingTreeNode function">
    <Symbol Key="::vl::presentation::GuiIqParseAsParsingTreeNode(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,&amp; vl::collections::List&lt;vl::Ptr&lt;vl::parsing::ParsingError&gt;&gt;,vl::vint)" UrlName="vl.presentation.GuiIqParseAsParsingTreeNode(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},&amp; vl.collections.List{vl.Ptr{vl.parsing.ParsingError}},vl.vint)" Doc="false" />
    <Symbol Key="::vl::presentation::GuiIqParseAsParsingTreeNode(&amp; const vl::WString,vl::Ptr&lt;vl::parsing::tabling::ParsingTable&gt;,vl::vint)" UrlName="vl.presentation.GuiIqParseAsParsingTreeNode(&amp; const vl.WString,vl.Ptr{vl.parsing.tabling.ParsingTable},vl.vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqParserTokenIndex enum">
    <Symbol Key="::vl::presentation::GuiIqParserTokenIndex" UrlName="vl.presentation.GuiIqParserTokenIndex" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqPrimaryQuery class">
    <Symbol Key="::vl::presentation::GuiIqPrimaryQuery" UrlName="vl.presentation.GuiIqPrimaryQuery" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqPrint function">
    <Symbol Key="::vl::presentation::GuiIqPrint(Ptr&lt;GuiIqQuery&gt;,&amp; stream::StreamWriter)" UrlName="vl.presentation.GuiIqPrint(Ptr{GuiIqQuery},&amp; stream.StreamWriter)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqQuery class">
    <Symbol Key="::vl::presentation::GuiIqQuery" UrlName="vl.presentation.GuiIqQuery" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiIqSetQuery class">
    <Symbol Key="::vl::presentation::GuiIqSetQuery" UrlName="vl.presentation.GuiIqSetQuery" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiResource class">
    <Symbol Key="::vl::presentation::GuiResource" UrlName="vl.presentation.GuiResource" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResourceClassNameRecord class">
    <Symbol Key="::vl::presentation::GuiResourceClassNameRecord" UrlName="vl.presentation.GuiResourceClassNameRecord" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiResourceError struct">
    <Symbol Key="::vl::presentation::GuiResourceError" UrlName="vl.presentation.GuiResourceError" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiResourceFolder class">
    <Symbol Key="::vl::presentation::GuiResourceFolder" UrlName="vl.presentation.GuiResourceFolder" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResourceInitializeContext struct">
    <Symbol Key="::vl::presentation::GuiResourceInitializeContext" UrlName="vl.presentation.GuiResourceInitializeContext" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResourceItem class">
    <Symbol Key="::vl::presentation::GuiResourceItem" UrlName="vl.presentation.GuiResourceItem" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResourceLocation struct">
    <Symbol Key="::vl::presentation::GuiResourceLocation" UrlName="vl.presentation.GuiResourceLocation" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiResourceNodeBase class">
    <Symbol Key="::vl::presentation::GuiResourceNodeBase" UrlName="vl.presentation.GuiResourceNodeBase" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResourcePathResolver class">
    <Symbol Key="::vl::presentation::GuiResourcePathResolver" UrlName="vl.presentation.GuiResourcePathResolver" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResourcePrecompileContext struct">
    <Symbol Key="::vl::presentation::GuiResourcePrecompileContext" UrlName="vl.presentation.GuiResourcePrecompileContext" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiResourceTextPos struct">
    <Symbol Key="::vl::presentation::GuiResourceTextPos" UrlName="vl.presentation.GuiResourceTextPos" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiResourceUsage enum">
    <Symbol Key="::vl::presentation::GuiResourceUsage" UrlName="vl.presentation.GuiResourceUsage" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiStrongTypedTableParser class">
    <Symbol Key="::vl::presentation::GuiStrongTypedTableParser`1" UrlName="vl.presentation.GuiStrongTypedTableParser`1" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiTextData class">
    <Symbol Key="::vl::presentation::GuiTextData" UrlName="vl.presentation.GuiTextData" Doc="true" />
  </Overloads>
  <Overloads DisplayName="GuiTextRepr class">
    <Symbol Key="::vl::presentation::GuiTextRepr" UrlName="vl.presentation.GuiTextRepr" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GuiValueRepr class">
    <Symbol Key="::vl::presentation::GuiValueRepr" UrlName="vl.presentation.GuiValueRepr" Doc="false" />
  </Overloads>
  <Overloads DisplayName="HexToBinary function">
    <Symbol Key="::vl::presentation::HexToBinary(&amp; stream::IStream,&amp; const WString)" UrlName="vl.presentation.HexToBinary(&amp; stream.IStream,&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiGeneralParser class">
    <Symbol Key="::vl::presentation::IGuiGeneralParser" UrlName="vl.presentation.IGuiGeneralParser" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiInstanceBinder class">
    <Symbol Key="::vl::presentation::IGuiInstanceBinder" UrlName="vl.presentation.IGuiInstanceBinder" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiInstanceDeserializer class">
    <Symbol Key="::vl::presentation::IGuiInstanceDeserializer" UrlName="vl.presentation.IGuiInstanceDeserializer" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiInstanceEventBinder class">
    <Symbol Key="::vl::presentation::IGuiInstanceEventBinder" UrlName="vl.presentation.IGuiInstanceEventBinder" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiInstanceLoader class">
    <Symbol Key="::vl::presentation::IGuiInstanceLoader" UrlName="vl.presentation.IGuiInstanceLoader" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiInstanceLoaderManager class">
    <Symbol Key="::vl::presentation::IGuiInstanceLoaderManager" UrlName="vl.presentation.IGuiInstanceLoaderManager" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiParser class">
    <Symbol Key="::vl::presentation::IGuiParser`1" UrlName="vl.presentation.IGuiParser`1" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiParserManager class">
    <Symbol Key="::vl::presentation::IGuiParserManager" UrlName="vl.presentation.IGuiParserManager" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourceManager class">
    <Symbol Key="::vl::presentation::IGuiResourceManager" UrlName="vl.presentation.IGuiResourceManager" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiResourcePathResolver class">
    <Symbol Key="::vl::presentation::IGuiResourcePathResolver" UrlName="vl.presentation.IGuiResourcePathResolver" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourcePathResolverFactory class">
    <Symbol Key="::vl::presentation::IGuiResourcePathResolverFactory" UrlName="vl.presentation.IGuiResourcePathResolverFactory" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourcePrecompileCallback class">
    <Symbol Key="::vl::presentation::IGuiResourcePrecompileCallback" UrlName="vl.presentation.IGuiResourcePrecompileCallback" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IGuiResourceResolverManager class">
    <Symbol Key="::vl::presentation::IGuiResourceResolverManager" UrlName="vl.presentation.IGuiResourceResolverManager" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourceTypeResolver class">
    <Symbol Key="::vl::presentation::IGuiResourceTypeResolver" UrlName="vl.presentation.IGuiResourceTypeResolver" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourceTypeResolver_DirectLoadStream class">
    <Symbol Key="::vl::presentation::IGuiResourceTypeResolver_DirectLoadStream" UrlName="vl.presentation.IGuiResourceTypeResolver_DirectLoadStream" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourceTypeResolver_DirectLoadXml class">
    <Symbol Key="::vl::presentation::IGuiResourceTypeResolver_DirectLoadXml" UrlName="vl.presentation.IGuiResourceTypeResolver_DirectLoadXml" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourceTypeResolver_IndirectLoad class">
    <Symbol Key="::vl::presentation::IGuiResourceTypeResolver_IndirectLoad" UrlName="vl.presentation.IGuiResourceTypeResolver_IndirectLoad" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourceTypeResolver_Initialize class">
    <Symbol Key="::vl::presentation::IGuiResourceTypeResolver_Initialize" UrlName="vl.presentation.IGuiResourceTypeResolver_Initialize" Doc="true" />
  </Overloads>
  <Overloads DisplayName="IGuiResourceTypeResolver_Precompile class">
    <Symbol Key="::vl::presentation::IGuiResourceTypeResolver_Precompile" UrlName="vl.presentation.IGuiResourceTypeResolver_Precompile" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeAsyncService class">
    <Symbol Key="::vl::presentation::INativeAsyncService" UrlName="vl.presentation.INativeAsyncService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeCallbackService class">
    <Symbol Key="::vl::presentation::INativeCallbackService" UrlName="vl.presentation.INativeCallbackService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeClipboardService class">
    <Symbol Key="::vl::presentation::INativeClipboardService" UrlName="vl.presentation.INativeClipboardService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeController class">
    <Symbol Key="::vl::presentation::INativeController" UrlName="vl.presentation.INativeController" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeControllerListener class">
    <Symbol Key="::vl::presentation::INativeControllerListener" UrlName="vl.presentation.INativeControllerListener" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeCursor class">
    <Symbol Key="::vl::presentation::INativeCursor" UrlName="vl.presentation.INativeCursor" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeDelay class">
    <Symbol Key="::vl::presentation::INativeDelay" UrlName="vl.presentation.INativeDelay" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeDialogService class">
    <Symbol Key="::vl::presentation::INativeDialogService" UrlName="vl.presentation.INativeDialogService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeImage class">
    <Symbol Key="::vl::presentation::INativeImage" UrlName="vl.presentation.INativeImage" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeImageFrame class">
    <Symbol Key="::vl::presentation::INativeImageFrame" UrlName="vl.presentation.INativeImageFrame" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeImageFrameCache class">
    <Symbol Key="::vl::presentation::INativeImageFrameCache" UrlName="vl.presentation.INativeImageFrameCache" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeImageService class">
    <Symbol Key="::vl::presentation::INativeImageService" UrlName="vl.presentation.INativeImageService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeInputService class">
    <Symbol Key="::vl::presentation::INativeInputService" UrlName="vl.presentation.INativeInputService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeResourceService class">
    <Symbol Key="::vl::presentation::INativeResourceService" UrlName="vl.presentation.INativeResourceService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeScreen class">
    <Symbol Key="::vl::presentation::INativeScreen" UrlName="vl.presentation.INativeScreen" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeScreenService class">
    <Symbol Key="::vl::presentation::INativeScreenService" UrlName="vl.presentation.INativeScreenService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeWindow class">
    <Symbol Key="::vl::presentation::INativeWindow" UrlName="vl.presentation.INativeWindow" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeWindowListener class">
    <Symbol Key="::vl::presentation::INativeWindowListener" UrlName="vl.presentation.INativeWindowListener" Doc="true" />
  </Overloads>
  <Overloads DisplayName="INativeWindowService class">
    <Symbol Key="::vl::presentation::INativeWindowService" UrlName="vl.presentation.INativeWindowService" Doc="true" />
  </Overloads>
  <Overloads DisplayName="InstanceLoadingSource struct">
    <Symbol Key="::vl::presentation::InstanceLoadingSource" UrlName="vl.presentation.InstanceLoadingSource" Doc="false" />
  </Overloads>
  <Overloads DisplayName="IsResourceUrl function">
    <Symbol Key="::vl::presentation::IsResourceUrl(&amp; const WString,&amp; WString,&amp; WString)" UrlName="vl.presentation.IsResourceUrl(&amp; const WString,&amp; WString,&amp; WString)" Doc="true" />
  </Overloads>
  <Overloads DisplayName="ItemProperty typedecl">
    <Symbol Key="::vl::presentation::ItemProperty`1" UrlName="vl.presentation.ItemProperty`1" Doc="false" />
  </Overloads>
  <Overloads DisplayName="LoadTextFile function">
    <Symbol Key="::vl::presentation::LoadTextFile(&amp; const WString,&amp; WString)" UrlName="vl.presentation.LoadTextFile(&amp; const WString,&amp; WString)" Doc="true" />
  </Overloads>
  <Overloads DisplayName="Margin struct">
    <Symbol Key="::vl::presentation::Margin" UrlName="vl.presentation.Margin" Doc="true" />
  </Overloads>
  <Overloads DisplayName="NativeWindowCharInfo struct">
    <Symbol Key="::vl::presentation::NativeWindowCharInfo" UrlName="vl.presentation.NativeWindowCharInfo" Doc="true" />
  </Overloads>
  <Overloads DisplayName="NativeWindowKeyInfo struct">
    <Symbol Key="::vl::presentation::NativeWindowKeyInfo" UrlName="vl.presentation.NativeWindowKeyInfo" Doc="true" />
  </Overloads>
  <Overloads DisplayName="NativeWindowMouseInfo struct">
    <Symbol Key="::vl::presentation::NativeWindowMouseInfo" UrlName="vl.presentation.NativeWindowMouseInfo" Doc="true" />
  </Overloads>
  <Overloads DisplayName="operator - function">
    <Symbol Key="::vl::presentation::operator -(Point,Size)" UrlName="vl.presentation.operator -(Point,Size)" Doc="false" />
    <Symbol Key="::vl::presentation::operator -(Point,Point)" UrlName="vl.presentation.operator -(Point,Point)" Doc="false" />
    <Symbol Key="::vl::presentation::operator -(Size,Size)" UrlName="vl.presentation.operator -(Size,Size)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="operator &amp; function">
    <Symbol Key="::vl::presentation::operator &amp;(INativeDialogService::FileDialogOptions,INativeDialogService::FileDialogOptions)" UrlName="vl.presentation.operator &amp;(INativeDialogService.FileDialogOptions,INativeDialogService.FileDialogOptions)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="operator * function">
    <Symbol Key="::vl::presentation::operator *(Size,vint)" UrlName="vl.presentation.operator ^(Size,vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="operator / function">
    <Symbol Key="::vl::presentation::operator /(Size,vint)" UrlName="vl.presentation.operator %(Size,vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="operator | function">
    <Symbol Key="::vl::presentation::operator |(INativeDialogService::FileDialogOptions,INativeDialogService::FileDialogOptions)" UrlName="vl.presentation.operator $(INativeDialogService.FileDialogOptions,INativeDialogService.FileDialogOptions)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="operator + function">
    <Symbol Key="::vl::presentation::operator +(Point,Size)" UrlName="vl.presentation.operator +(Point,Size)" Doc="false" />
    <Symbol Key="::vl::presentation::operator +(Size,Point)" UrlName="vl.presentation.operator +(Size,Point)" Doc="false" />
    <Symbol Key="::vl::presentation::operator +(Size,Size)" UrlName="vl.presentation.operator +(Size,Size)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="operator += function">
    <Symbol Key="::vl::presentation::operator +=(&amp; Point,Size)" UrlName="vl.presentation.operator +=(&amp; Point,Size)" Doc="false" />
    <Symbol Key="::vl::presentation::operator +=(&amp; Size,Size)" UrlName="vl.presentation.operator +=(&amp; Size,Size)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="operator -= function">
    <Symbol Key="::vl::presentation::operator -=(&amp; Point,Size)" UrlName="vl.presentation.operator -=(&amp; Point,Size)" Doc="false" />
    <Symbol Key="::vl::presentation::operator -=(&amp; Size,Size)" UrlName="vl.presentation.operator -=(&amp; Size,Size)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Point struct">
    <Symbol Key="::vl::presentation::Point" UrlName="vl.presentation.Point" Doc="true" />
  </Overloads>
  <Overloads DisplayName="PrecompileAndWriteErrors function">
    <Symbol Key="::vl::presentation::PrecompileAndWriteErrors(Ptr&lt;GuiResource&gt;,* IGuiResourcePrecompileCallback,&amp; collections::List&lt;GuiResourceError&gt;,&amp; const filesystem::FilePath)" UrlName="vl.presentation.PrecompileAndWriteErrors(Ptr{GuiResource},^ IGuiResourcePrecompileCallback,&amp; collections.List{GuiResourceError},&amp; const filesystem.FilePath)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Rect struct">
    <Symbol Key="::vl::presentation::Rect" UrlName="vl.presentation.Rect" Doc="true" />
  </Overloads>
  <Overloads DisplayName="RunRange typedecl">
    <Symbol Key="::vl::presentation::RunRange" UrlName="vl.presentation.RunRange" Doc="false" />
  </Overloads>
  <Overloads DisplayName="RunRangeMap typedecl">
    <Symbol Key="::vl::presentation::RunRangeMap" UrlName="vl.presentation.RunRangeMap" Doc="false" />
  </Overloads>
  <Overloads DisplayName="SetCurrentController function">
    <Symbol Key="::vl::presentation::SetCurrentController(* INativeController)" UrlName="vl.presentation.SetCurrentController(^ INativeController)" Doc="true" />
  </Overloads>
  <Overloads DisplayName="SetTableParser function">
    <Symbol Key="::vl::presentation::SetTableParser`1(&amp; const WString,&amp; const WString,* function (&amp; const WString, Ptr&lt;Table&gt;, &amp; collections::List&lt;Ptr&lt;parsing::ParsingError&gt;&gt;, vint) : Ptr&lt;T&gt;)" UrlName="vl.presentation.SetTableParser`1(&amp; const WString,&amp; const WString,^ function (&amp; const WString, Ptr{Table}, &amp; collections.List{Ptr{parsing.ParsingError}}, vint) # Ptr{T})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Size struct">
    <Symbol Key="::vl::presentation::Size" UrlName="vl.presentation.Size" Doc="true" />
  </Overloads>
  <Overloads DisplayName="SplitBySemicolon function">
    <Symbol Key="::vl::presentation::SplitBySemicolon(&amp; const WString,&amp; collections::List&lt;WString&gt;)" UrlName="vl.presentation.SplitBySemicolon(&amp; const WString,&amp; collections.List{WString})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="TemplateProperty typedecl">
    <Symbol Key="::vl::presentation::TemplateProperty`1" UrlName="vl.presentation.TemplateProperty`1" Doc="false" />
  </Overloads>
  <Overloads DisplayName="TextPos struct">
    <Symbol Key="::vl::presentation::TextPos" UrlName="vl.presentation.TextPos" Doc="true" />
  </Overloads>
  <Overloads DisplayName="Workflow_ClearScriptPosition function">
    <Symbol Key="::vl::presentation::Workflow_ClearScriptPosition(&amp; GuiResourcePrecompileContext)" UrlName="vl.presentation.Workflow_ClearScriptPosition(&amp; GuiResourcePrecompileContext)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_CollectReferences function">
    <Symbol Key="::vl::presentation::Workflow_CollectReferences(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,&amp; GuiResourceError::List)" UrlName="vl.presentation.Workflow_CollectReferences(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,&amp; GuiResourceError.List)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_CreateModuleWithUsings function">
    <Symbol Key="::vl::presentation::Workflow_CreateModuleWithUsings(Ptr&lt;GuiInstanceContext&gt;,&amp; const WString)" UrlName="vl.presentation.Workflow_CreateModuleWithUsings(Ptr{GuiInstanceContext},&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_CreatePointerVariable function">
    <Symbol Key="::vl::presentation::Workflow_CreatePointerVariable(Ptr&lt;workflow::WfClassDeclaration&gt;,GlobalStringKey,* description::ITypeInfo)" UrlName="vl.presentation.Workflow_CreatePointerVariable(Ptr{workflow.WfClassDeclaration},GlobalStringKey,^ description.ITypeInfo)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_CreateVariablesForReferenceValues function">
    <Symbol Key="::vl::presentation::Workflow_CreateVariablesForReferenceValues(Ptr&lt;workflow::WfClassDeclaration&gt;,&amp; types::ResolvingResult)" UrlName="vl.presentation.Workflow_CreateVariablesForReferenceValues(Ptr{workflow.WfClassDeclaration},&amp; types.ResolvingResult)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GenerateBindings function">
    <Symbol Key="::vl::presentation::Workflow_GenerateBindings(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,Ptr&lt;workflow::WfBlockStatement&gt;,&amp; GuiResourceError::List)" UrlName="vl.presentation.Workflow_GenerateBindings(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,Ptr{workflow.WfBlockStatement},&amp; GuiResourceError.List)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GenerateCreating function">
    <Symbol Key="::vl::presentation::Workflow_GenerateCreating(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,Ptr&lt;workflow::WfBlockStatement&gt;,&amp; GuiResourceError::List)" UrlName="vl.presentation.Workflow_GenerateCreating(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,Ptr{workflow.WfBlockStatement},&amp; GuiResourceError.List)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GenerateEventHandler function">
    <Symbol Key="::vl::presentation::Workflow_GenerateEventHandler(&amp; GuiResourcePrecompileContext,* description::IEventInfo)" UrlName="vl.presentation.Workflow_GenerateEventHandler(&amp; GuiResourcePrecompileContext,^ description.IEventInfo)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GenerateInstanceClass function">
    <Symbol Key="::vl::presentation::Workflow_GenerateInstanceClass(&amp; GuiResourcePrecompileContext,&amp; const WString,&amp; types::ResolvingResult,&amp; GuiResourceError::List,vint)" UrlName="vl.presentation.Workflow_GenerateInstanceClass(&amp; GuiResourcePrecompileContext,&amp; const WString,&amp; types.ResolvingResult,&amp; GuiResourceError.List,vint)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GetPropertyTypes function">
    <Symbol Key="::vl::presentation::Workflow_GetPropertyTypes(&amp; WString,&amp; types::ResolvingResult,* IGuiInstanceLoader,IGuiInstanceLoader::TypeInfo,GlobalStringKey,Ptr&lt;GuiAttSetterRepr::SetterValue&gt;,&amp; collections::List&lt;types::PropertyResolving&gt;,&amp; GuiResourceError::List)" UrlName="vl.presentation.Workflow_GetPropertyTypes(&amp; WString,&amp; types.ResolvingResult,^ IGuiInstanceLoader,IGuiInstanceLoader.TypeInfo,GlobalStringKey,Ptr{GuiAttSetterRepr.SetterValue},&amp; collections.List{types.PropertyResolving},&amp; GuiResourceError.List)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GetScriptPosition function">
    <Symbol Key="::vl::presentation::Workflow_GetScriptPosition(&amp; GuiResourcePrecompileContext)" UrlName="vl.presentation.Workflow_GetScriptPosition(&amp; GuiResourcePrecompileContext)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GetSharedManager function">
    <Symbol Key="::vl::presentation::Workflow_GetSharedManager()" UrlName="vl.presentation.Workflow_GetSharedManager()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GetSuggestedParameterType function">
    <Symbol Key="::vl::presentation::Workflow_GetSuggestedParameterType(* reflection::description::ITypeDescriptor)" UrlName="vl.presentation.Workflow_GetSuggestedParameterType(^ reflection.description.ITypeDescriptor)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_GetUriProperty function">
    <Symbol Key="::vl::presentation::Workflow_GetUriProperty(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,* IGuiInstanceLoader,&amp; const IGuiInstanceLoader::PropertyInfo,Ptr&lt;GuiInstancePropertyInfo&gt;,&amp; const WString,&amp; const WString,GuiResourceTextPos,&amp; GuiResourceError::List)" UrlName="vl.presentation.Workflow_GetUriProperty(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,^ IGuiInstanceLoader,&amp; const IGuiInstanceLoader.PropertyInfo,Ptr{GuiInstancePropertyInfo},&amp; const WString,&amp; const WString,GuiResourceTextPos,&amp; GuiResourceError.List)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_InstallBindProperty function">
    <Symbol Key="::vl::presentation::Workflow_InstallBindProperty(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,GlobalStringKey,* description::IPropertyInfo,Ptr&lt;workflow::WfExpression&gt;)" UrlName="vl.presentation.Workflow_InstallBindProperty(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,GlobalStringKey,^ description.IPropertyInfo,Ptr{workflow.WfExpression})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_InstallClass function">
    <Symbol Key="::vl::presentation::Workflow_InstallClass(&amp; const WString,Ptr&lt;workflow::WfModule&gt;)" UrlName="vl.presentation.Workflow_InstallClass(&amp; const WString,Ptr{workflow.WfModule})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_InstallCtorClass function">
    <Symbol Key="::vl::presentation::Workflow_InstallCtorClass(&amp; types::ResolvingResult,Ptr&lt;workflow::WfModule&gt;)" UrlName="vl.presentation.Workflow_InstallCtorClass(&amp; types.ResolvingResult,Ptr{workflow.WfModule})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_InstallEvalEvent function">
    <Symbol Key="::vl::presentation::Workflow_InstallEvalEvent(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,GlobalStringKey,* description::IEventInfo,Ptr&lt;workflow::WfStatement&gt;)" UrlName="vl.presentation.Workflow_InstallEvalEvent(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,GlobalStringKey,^ description.IEventInfo,Ptr{workflow.WfStatement})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_InstallEvalProperty function">
    <Symbol Key="::vl::presentation::Workflow_InstallEvalProperty(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,GlobalStringKey,* IGuiInstanceLoader,&amp; const IGuiInstanceLoader::PropertyInfo,Ptr&lt;GuiInstancePropertyInfo&gt;,Ptr&lt;workflow::WfExpression&gt;,GuiResourceTextPos,&amp; GuiResourceError::List)" UrlName="vl.presentation.Workflow_InstallEvalProperty(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,GlobalStringKey,^ IGuiInstanceLoader,&amp; const IGuiInstanceLoader.PropertyInfo,Ptr{GuiInstancePropertyInfo},Ptr{workflow.WfExpression},GuiResourceTextPos,&amp; GuiResourceError.List)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_InstallEvent function">
    <Symbol Key="::vl::presentation::Workflow_InstallEvent(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,GlobalStringKey,* description::IEventInfo,&amp; const WString)" UrlName="vl.presentation.Workflow_InstallEvent(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,GlobalStringKey,^ description.IEventInfo,&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_InstallUriProperty function">
    <Symbol Key="::vl::presentation::Workflow_InstallUriProperty(&amp; GuiResourcePrecompileContext,&amp; types::ResolvingResult,GlobalStringKey,* IGuiInstanceLoader,&amp; const IGuiInstanceLoader::PropertyInfo,Ptr&lt;GuiInstancePropertyInfo&gt;,&amp; const WString,&amp; const WString,GuiResourceTextPos,&amp; GuiResourceError::List)" UrlName="vl.presentation.Workflow_InstallUriProperty(&amp; GuiResourcePrecompileContext,&amp; types.ResolvingResult,GlobalStringKey,^ IGuiInstanceLoader,&amp; const IGuiInstanceLoader.PropertyInfo,Ptr{GuiInstancePropertyInfo},&amp; const WString,&amp; const WString,GuiResourceTextPos,&amp; GuiResourceError.List)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_ModuleToString function">
    <Symbol Key="::vl::presentation::Workflow_ModuleToString(Ptr&lt;workflow::WfModule&gt;)" UrlName="vl.presentation.Workflow_ModuleToString(Ptr{workflow.WfModule})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_ParseCoProviderStatement function">
    <Symbol Key="::vl::presentation::Workflow_ParseCoProviderStatement(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections::List&lt;GuiResourceError&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_ParseCoProviderStatement(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections.List{GuiResourceError},parsing.ParsingTextPos)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_ParseExpression function">
    <Symbol Key="::vl::presentation::Workflow_ParseExpression(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections::List&lt;GuiResourceError&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_ParseExpression(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections.List{GuiResourceError},parsing.ParsingTextPos)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_ParseModule function">
    <Symbol Key="::vl::presentation::Workflow_ParseModule(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections::List&lt;GuiResourceError&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_ParseModule(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections.List{GuiResourceError},parsing.ParsingTextPos)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_ParseStatement function">
    <Symbol Key="::vl::presentation::Workflow_ParseStatement(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections::List&lt;GuiResourceError&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_ParseStatement(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections.List{GuiResourceError},parsing.ParsingTextPos)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_ParseTextValue function">
    <Symbol Key="::vl::presentation::Workflow_ParseTextValue(&amp; GuiResourcePrecompileContext,* description::ITypeDescriptor,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections::List&lt;GuiResourceError&gt;)" UrlName="vl.presentation.Workflow_ParseTextValue(&amp; GuiResourcePrecompileContext,^ description.ITypeDescriptor,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections.List{GuiResourceError})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_ParseType function">
    <Symbol Key="::vl::presentation::Workflow_ParseType(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections::List&lt;GuiResourceError&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_ParseType(&amp; GuiResourcePrecompileContext,GuiResourceLocation,&amp; const WString,GuiResourceTextPos,&amp; collections.List{GuiResourceError},parsing.ParsingTextPos)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_PrecompileInstanceContext function">
    <Symbol Key="::vl::presentation::Workflow_PrecompileInstanceContext(&amp; GuiResourcePrecompileContext,&amp; const WString,&amp; types::ResolvingResult,&amp; GuiResourceError::List)" UrlName="vl.presentation.Workflow_PrecompileInstanceContext(&amp; GuiResourcePrecompileContext,&amp; const WString,&amp; types.ResolvingResult,&amp; GuiResourceError.List)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_RecordScriptPosition function">
    <Symbol Key="::vl::presentation::Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr&lt;workflow::WfType&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr{workflow.WfType},parsing.ParsingTextPos)" Doc="false" />
    <Symbol Key="::vl::presentation::Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr&lt;workflow::WfExpression&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr{workflow.WfExpression},parsing.ParsingTextPos)" Doc="false" />
    <Symbol Key="::vl::presentation::Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr&lt;workflow::WfStatement&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr{workflow.WfStatement},parsing.ParsingTextPos)" Doc="false" />
    <Symbol Key="::vl::presentation::Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr&lt;workflow::WfDeclaration&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr{workflow.WfDeclaration},parsing.ParsingTextPos)" Doc="false" />
    <Symbol Key="::vl::presentation::Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr&lt;workflow::WfModule&gt;,parsing::ParsingTextPos)" UrlName="vl.presentation.Workflow_RecordScriptPosition(&amp; GuiResourcePrecompileContext,GuiResourceTextPos,Ptr{workflow.WfModule},parsing.ParsingTextPos)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="Workflow_TransferSharedManager function">
    <Symbol Key="::vl::presentation::Workflow_TransferSharedManager()" UrlName="vl.presentation.Workflow_TransferSharedManager()" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WritableItemProperty typedecl">
    <Symbol Key="::vl::presentation::WritableItemProperty`1" UrlName="vl.presentation.WritableItemProperty`1" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WriteBinaryResource function">
    <Symbol Key="::vl::presentation::WriteBinaryResource(Ptr&lt;GuiResource&gt;,bool,bool,&amp; const filesystem::FilePath)" UrlName="vl.presentation.WriteBinaryResource(Ptr{GuiResource},bool,bool,&amp; const filesystem.FilePath)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WriteCppCodesToFile function">
    <Symbol Key="::vl::presentation::WriteCppCodesToFile(Ptr&lt;GuiInstanceCompiledWorkflow&gt;,Ptr&lt;workflow::cppcodegen::WfCppInput&gt;,&amp; const filesystem::FilePath)" UrlName="vl.presentation.WriteCppCodesToFile(Ptr{GuiInstanceCompiledWorkflow},Ptr{workflow.cppcodegen.WfCppInput},&amp; const filesystem.FilePath)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WriteEmbeddedResource function">
    <Symbol Key="::vl::presentation::WriteEmbeddedResource(Ptr&lt;GuiResource&gt;,Ptr&lt;workflow::cppcodegen::WfCppInput&gt;,Ptr&lt;workflow::cppcodegen::WfCppOutput&gt;,bool,&amp; const filesystem::FilePath)" UrlName="vl.presentation.WriteEmbeddedResource(Ptr{GuiResource},Ptr{workflow.cppcodegen.WfCppInput},Ptr{workflow.cppcodegen.WfCppOutput},bool,&amp; const filesystem.FilePath)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WriteWorkflowScript function">
    <Symbol Key="::vl::presentation::WriteWorkflowScript(Ptr&lt;GuiResourceFolder&gt;,&amp; const filesystem::FilePath)" UrlName="vl.presentation.WriteWorkflowScript(Ptr{GuiResourceFolder},&amp; const filesystem.FilePath)" Doc="false" />
  </Overloads>
</Namespace>