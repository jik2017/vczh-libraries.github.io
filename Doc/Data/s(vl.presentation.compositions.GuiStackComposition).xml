<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.compositions.GuiStackComposition">
    <ClassDecl Access="Public" Name="GuiStackComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition" OverloadKey="::vl::presentation::compositions::GuiStackComposition" ClassType="Class">
      <Document>&lt;Document&gt;
  &lt;summary&gt;
Represents a stack composition.
&lt;/summary&gt;
&lt;/Document&gt;</Document>
      <Children>
        <TypedefDecl Access="Private" Name="ItemCompositionList" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::ItemCompositionList" OverloadKey="::vl::presentation::compositions::GuiStackComposition::ItemCompositionList">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::List" Name="List">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::List`2@s:vl.collections.List`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <DecorateTypeDecl Decoration="Pointer">
                  <Element>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackItemComposition" Name="GuiStackItemComposition">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiStackItemComposition@s:vl.presentation.compositions.GuiStackItemComposition" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
        <EnumDecl Access="Public" Name="Direction" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::Direction" OverloadKey="::vl::presentation::compositions::GuiStackComposition::Direction" EnumClass="False">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Stack item layout direction.&lt;/summary&gt;
&lt;/Document&gt;</Document>
          <Children>
            <EnumItemDecl Access="Public" Name="Horizontal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::Direction::Horizontal" OverloadKey="::vl::presentation::compositions::GuiStackComposition::Direction::Horizontal">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Stack items is layouted from left to right.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="Vertical" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::Direction::Vertical" OverloadKey="::vl::presentation::compositions::GuiStackComposition::Direction::Vertical">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Stack items is layouted from top to bottom.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="ReversedHorizontal" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::Direction::ReversedHorizontal" OverloadKey="::vl::presentation::compositions::GuiStackComposition::Direction::ReversedHorizontal">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Stack items is layouted from right to left.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
            <EnumItemDecl Access="Public" Name="ReversedVertical" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::Direction::ReversedVertical" OverloadKey="::vl::presentation::compositions::GuiStackComposition::Direction::ReversedVertical">
              <Document>&lt;Document&gt;
  &lt;summary&gt;Stack items is layouted from bottom to top.&lt;/summary&gt;
&lt;/Document&gt;</Document>
            </EnumItemDecl>
          </Children>
        </EnumDecl>
        <VarDecl Access="Protected" Name="direction" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::direction" OverloadKey="::vl::presentation::compositions::GuiStackComposition::direction" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition::Direction" Name="Direction">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiStackComposition::Direction@s:vl.presentation.compositions.GuiStackComposition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="stackItems" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::stackItems" OverloadKey="::vl::presentation::compositions::GuiStackComposition::stackItems" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition::ItemCompositionList" Name="ItemCompositionList">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiStackComposition::ItemCompositionList@s:vl.presentation.compositions.GuiStackComposition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="ensuringVisibleStackItem" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::ensuringVisibleStackItem" OverloadKey="::vl::presentation::compositions::GuiStackComposition::ensuringVisibleStackItem" Static="False">
          <Type>
            <DecorateTypeDecl Decoration="Pointer">
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackItemComposition" Name="GuiStackItemComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiStackItemComposition@s:vl.presentation.compositions.GuiStackItemComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
            </DecorateTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="padding" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::padding" OverloadKey="::vl::presentation::compositions::GuiStackComposition::padding" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="adjustment" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::adjustment" OverloadKey="::vl::presentation::compositions::GuiStackComposition::adjustment" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
              <ReferencingOverloadKeys>
                <Key Value="::vl::vint@s:vl.vint" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="extraMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::extraMargin" OverloadKey="::vl::presentation::compositions::GuiStackComposition::extraMargin" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="stackItemBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::stackItemBounds" OverloadKey="::vl::presentation::compositions::GuiStackComposition::stackItemBounds" Static="False">
          <Type>
            <GenericTypeDecl>
              <Element>
                <SubTypeDecl ReferencingNameKey="::vl::collections::Array" Name="Array">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::collections::Array`2@s:vl.collections.Array`2" />
                  </ReferencingOverloadKeys>
                  <Parent>
                    <RefTypeDecl ReferencingNameKey="::vl::collections" Name="collections">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::collections@ns:vl.collections" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Parent>
                </SubTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="stackItemTotalSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::stackItemTotalSize" OverloadKey="::vl::presentation::compositions::GuiStackComposition::stackItemTotalSize" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <VarDecl Access="Protected" Name="previousBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::previousBounds" OverloadKey="::vl::presentation::compositions::GuiStackComposition::previousBounds" Static="False">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </VarDecl>
        <FuncDecl Access="Protected" Name="UpdateStackItemBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::UpdateStackItemBounds" OverloadKey="::vl::presentation::compositions::GuiStackComposition::UpdateStackItemBounds()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="EnsureStackItemVisible" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::EnsureStackItemVisible" OverloadKey="::vl::presentation::compositions::GuiStackComposition::EnsureStackItemVisible()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnBoundsChanged" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::OnBoundsChanged" OverloadKey="::vl::presentation::compositions::GuiStackComposition::OnBoundsChanged(* GuiGraphicsComposition,&amp; GuiEventArgs)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="sender" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::OnBoundsChanged::sender" OverloadKey="::vl::presentation::compositions::GuiStackComposition::OnBoundsChanged(* GuiGraphicsComposition,&amp; GuiEventArgs)::sender" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="arguments" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::OnBoundsChanged::arguments" OverloadKey="::vl::presentation::compositions::GuiStackComposition::OnBoundsChanged(* GuiGraphicsComposition,&amp; GuiEventArgs)::arguments" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="LeftRef">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiEventArgs" Name="GuiEventArgs">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiEventArgs@s:vl.presentation.compositions.GuiEventArgs" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnChildInserted" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::OnChildInserted" OverloadKey="::vl::presentation::compositions::GuiStackComposition::OnChildInserted(* GuiGraphicsComposition)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::OnChildInserted::child" OverloadKey="::vl::presentation::compositions::GuiStackComposition::OnChildInserted(* GuiGraphicsComposition)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Protected" Name="OnChildRemoved" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::OnChildRemoved" OverloadKey="::vl::presentation::compositions::GuiStackComposition::OnChildRemoved(* GuiGraphicsComposition)" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="child" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::OnChildRemoved::child" OverloadKey="::vl::presentation::compositions::GuiStackComposition::OnChildRemoved(* GuiGraphicsComposition)::child" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiGraphicsComposition" Name="GuiGraphicsComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiGraphicsComposition@s:vl.presentation.compositions.GuiGraphicsComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GuiStackComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::GuiStackComposition" OverloadKey="::vl::presentation::compositions::GuiStackComposition::GuiStackComposition()" Virtual="Normal" Function="Constructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="~GuiStackComposition" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::~GuiStackComposition" OverloadKey="::vl::presentation::compositions::GuiStackComposition::~GuiStackComposition()" Virtual="Normal" Function="Destructor">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetStackItems" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::GetStackItems" OverloadKey="::vl::presentation::compositions::GuiStackComposition::GetStackItems()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get all stack items inside the stack composition.&lt;/summary&gt;
  &lt;returns&gt;All stack items inside the stack composition.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <DecorateTypeDecl Decoration="LeftRef">
                  <Element>
                    <DecorateTypeDecl Decoration="Const">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition::ItemCompositionList" Name="ItemCompositionList">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiStackComposition::ItemCompositionList@s:vl.presentation.compositions.GuiStackComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Element>
                </DecorateTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="InsertStackItem" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::InsertStackItem" OverloadKey="::vl::presentation::compositions::GuiStackComposition::InsertStackItem(vint,* GuiStackItemComposition)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Insert a stack item at a specified position.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="index"&gt;The position.&lt;/param&gt;
  &lt;param name="item"&gt;The statck item to insert.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::InsertStackItem::index" OverloadKey="::vl::presentation::compositions::GuiStackComposition::InsertStackItem(vint,* GuiStackItemComposition)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
                <VarDecl Access="Public" Name="item" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::InsertStackItem::item" OverloadKey="::vl::presentation::compositions::GuiStackComposition::InsertStackItem(vint,* GuiStackItemComposition)::item" Static="False">
                  <Type>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackItemComposition" Name="GuiStackItemComposition">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::compositions::GuiStackItemComposition@s:vl.presentation.compositions.GuiStackItemComposition" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetDirection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::GetDirection" OverloadKey="::vl::presentation::compositions::GuiStackComposition::GetDirection()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the stack item layout direction.&lt;/summary&gt;
  &lt;returns&gt;The stack item layout direction.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition::Direction" Name="Direction">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiStackComposition::Direction@s:vl.presentation.compositions.GuiStackComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetDirection" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::SetDirection" OverloadKey="::vl::presentation::compositions::GuiStackComposition::SetDirection(Direction)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the stack item layout direction.&lt;/summary&gt;
  &lt;param name="value"&gt;The stack item layout direction.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::SetDirection::value" OverloadKey="::vl::presentation::compositions::GuiStackComposition::SetDirection(Direction)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition::Direction" Name="Direction">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::compositions::GuiStackComposition::Direction@s:vl.presentation.compositions.GuiStackComposition" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetPadding" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::GetPadding" OverloadKey="::vl::presentation::compositions::GuiStackComposition::GetPadding()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the stack item padding.&lt;/summary&gt;
  &lt;returns&gt;The stack item padding.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::vint@s:vl.vint" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetPadding" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::SetPadding" OverloadKey="::vl::presentation::compositions::GuiStackComposition::SetPadding(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the stack item padding.&lt;/summary&gt;
  &lt;param name="value"&gt;The stack item padding.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::SetPadding::value" OverloadKey="::vl::presentation::compositions::GuiStackComposition::SetPadding(vint)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="ForceCalculateSizeImmediately" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::ForceCalculateSizeImmediately" OverloadKey="::vl::presentation::compositions::GuiStackComposition::ForceCalculateSizeImmediately()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetMinPreferredClientSize" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::GetMinPreferredClientSize" OverloadKey="::vl::presentation::compositions::GuiStackComposition::GetMinPreferredClientSize()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Size" Name="Size">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Size@s:vl.presentation.Size" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetBounds" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::GetBounds" OverloadKey="::vl::presentation::compositions::GuiStackComposition::GetBounds()" Virtual="Normal" Function="Function">
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Rect" Name="Rect">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Rect@s:vl.presentation.Rect" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="GetExtraMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::GetExtraMargin" OverloadKey="::vl::presentation::compositions::GuiStackComposition::GetExtraMargin()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Get the extra margin inside the stack composition.&lt;/summary&gt;
  &lt;returns&gt;The extra margin inside the stack composition.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="SetExtraMargin" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::SetExtraMargin" OverloadKey="::vl::presentation::compositions::GuiStackComposition::SetExtraMargin(Margin)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Set the extra margin inside the stack composition.&lt;/summary&gt;
  &lt;param name="value"&gt;The extra margin inside the stack composition.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="void" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="value" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::SetExtraMargin::value" OverloadKey="::vl::presentation::compositions::GuiStackComposition::SetExtraMargin(Margin)::value" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::presentation::Margin" Name="Margin">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::presentation::Margin@s:vl.presentation.Margin" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="IsStackItemClipped" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::IsStackItemClipped" OverloadKey="::vl::presentation::compositions::GuiStackComposition::IsStackItemClipped()" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Test is any stack item clipped in the stack direction.&lt;/summary&gt;
  &lt;returns&gt;Returns true if any stack item is clipped.&lt;/returns&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters />
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
        <FuncDecl Access="Public" Name="EnsureVisible" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::EnsureVisible" OverloadKey="::vl::presentation::compositions::GuiStackComposition::EnsureVisible(vint)" Virtual="Normal" Function="Function">
          <Document>&lt;Document&gt;
  &lt;summary&gt;Make an item visible as complete as possible.&lt;/summary&gt;
  &lt;returns&gt;Returns true if this operation succeeded.&lt;/returns&gt;
  &lt;param name="index"&gt;The index of the item.&lt;/param&gt;
&lt;/Document&gt;</Document>
          <Type>
            <FunctionTypeDecl CallingConvention="Default" Const="False">
              <ReturnType>
                <RefTypeDecl Name="bool" />
              </ReturnType>
              <Parameters>
                <VarDecl Access="Public" Name="index" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::compositions::GuiStackComposition::EnsureVisible::index" OverloadKey="::vl::presentation::compositions::GuiStackComposition::EnsureVisible(vint)::index" Static="False">
                  <Type>
                    <RefTypeDecl ReferencingNameKey="::vl::vint" Name="vint">
                      <ReferencingOverloadKeys>
                        <Key Value="::vl::vint@s:vl.vint" />
                      </ReferencingOverloadKeys>
                    </RefTypeDecl>
                  </Type>
                </VarDecl>
              </Parameters>
            </FunctionTypeDecl>
          </Type>
        </FuncDecl>
      </Children>
      <BaseTypes>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiBoundsComposition" Name="GuiBoundsComposition">
              <ReferencingOverloadKeys>
                <Key Value="::vl::presentation::compositions::GuiBoundsComposition@s:vl.presentation.compositions.GuiBoundsComposition" />
              </ReferencingOverloadKeys>
            </RefTypeDecl>
          </Type>
        </BaseTypeDecl>
        <BaseTypeDecl Access="Public" Tags="x86, Windows">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::reflection::Description" Name="Description">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::reflection::Description`1@s:vl.reflection.Description`1" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfClassInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfClassInstance}" />
                    <Key Value="::vl::reflection::Description`0&lt;workflow::typeimpl::WfInterfaceInstance&gt;@s:vl.reflection.Description`0{workflow.typeimpl.WfInterfaceInstance}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <RefTypeDecl ReferencingNameKey="::vl::presentation::compositions::GuiStackComposition" Name="GuiStackComposition">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::presentation::compositions::GuiStackComposition@s:vl.presentation.compositions.GuiStackComposition" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </BaseTypeDecl>
      </BaseTypes>
    </ClassDecl>
  </Symbols>
</OverloadingSymbols>