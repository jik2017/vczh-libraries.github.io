<?xml version="1.0" encoding="utf-8"?>
<Namespace DisplayName="::vl::workflow::cppcodegen">
  <Overloads DisplayName="CollectModule function">
    <Symbol Key="::vl::workflow::cppcodegen::CollectModule(* WfCppConfig,Ptr&lt;WfModule&gt;)" UrlName="vl.workflow.cppcodegen.CollectModule(^ WfCppConfig,Ptr{WfModule})" Doc="false" />
  </Overloads>
  <Overloads DisplayName="ConvertType function">
    <Symbol Key="::vl::workflow::cppcodegen::ConvertType(* WfCppConfig,&amp; stream::StreamWriter,* reflection::description::ITypeInfo,* reflection::description::ITypeInfo,&amp; const Func&lt;function () : void&gt;,bool)" UrlName="vl.workflow.cppcodegen.ConvertType(^ WfCppConfig,&amp; stream.StreamWriter,^ reflection.description.ITypeInfo,^ reflection.description.ITypeInfo,&amp; const Func{function () # void},bool)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="FunctionRecord class">
    <Symbol Key="::vl::workflow::cppcodegen::FunctionRecord" UrlName="vl.workflow.cppcodegen.FunctionRecord" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GenerateClassMemberDecl function">
    <Symbol Key="::vl::workflow::cppcodegen::GenerateClassMemberDecl(* WfCppConfig,&amp; stream::StreamWriter,&amp; const WString,Ptr&lt;WfDeclaration&gt;,&amp; const WString,bool)" UrlName="vl.workflow.cppcodegen.GenerateClassMemberDecl(^ WfCppConfig,&amp; stream.StreamWriter,&amp; const WString,Ptr{WfDeclaration},&amp; const WString,bool)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GenerateClassMemberImpl function">
    <Symbol Key="::vl::workflow::cppcodegen::GenerateClassMemberImpl(* WfCppConfig,&amp; stream::StreamWriter,* WfClassDeclaration,&amp; const WString,&amp; const WString,&amp; const WString,Ptr&lt;WfDeclaration&gt;,&amp; const WString)" UrlName="vl.workflow.cppcodegen.GenerateClassMemberImpl(^ WfCppConfig,&amp; stream.StreamWriter,^ WfClassDeclaration,&amp; const WString,&amp; const WString,&amp; const WString,Ptr{WfDeclaration},&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GenerateCppFiles function">
    <Symbol Key="::vl::workflow::cppcodegen::GenerateCppFiles(Ptr&lt;WfCppInput&gt;,* analyzer::WfLexicalScopeManager)" UrlName="vl.workflow.cppcodegen.GenerateCppFiles(Ptr{WfCppInput},^ analyzer.WfLexicalScopeManager)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GenerateExpression function">
    <Symbol Key="::vl::workflow::cppcodegen::GenerateExpression(* WfCppConfig,&amp; stream::StreamWriter,Ptr&lt;WfExpression&gt;,* reflection::description::ITypeInfo,bool)" UrlName="vl.workflow.cppcodegen.GenerateExpression(^ WfCppConfig,&amp; stream.StreamWriter,Ptr{WfExpression},^ reflection.description.ITypeInfo,bool)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="GenerateStatement function">
    <Symbol Key="::vl::workflow::cppcodegen::GenerateStatement(* WfCppConfig,Ptr&lt;FunctionRecord&gt;,&amp; stream::StreamWriter,Ptr&lt;WfStatement&gt;,&amp; const WString,&amp; const WString,* reflection::description::ITypeInfo)" UrlName="vl.workflow.cppcodegen.GenerateStatement(^ WfCppConfig,Ptr{FunctionRecord},&amp; stream.StreamWriter,Ptr{WfStatement},&amp; const WString,&amp; const WString,^ reflection.description.ITypeInfo)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="MergeCppFileContent function">
    <Symbol Key="::vl::workflow::cppcodegen::MergeCppFileContent(&amp; const WString,&amp; const WString)" UrlName="vl.workflow.cppcodegen.MergeCppFileContent(&amp; const WString,&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="MergeCppMultiPlatform function">
    <Symbol Key="::vl::workflow::cppcodegen::MergeCppMultiPlatform(&amp; const WString,&amp; const WString)" UrlName="vl.workflow.cppcodegen.MergeCppMultiPlatform(&amp; const WString,&amp; const WString)" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WfCppConfig class">
    <Symbol Key="::vl::workflow::cppcodegen::WfCppConfig" UrlName="vl.workflow.cppcodegen.WfCppConfig" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WfCppFileSwitch enum">
    <Symbol Key="::vl::workflow::cppcodegen::WfCppFileSwitch" UrlName="vl.workflow.cppcodegen.WfCppFileSwitch" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WfCppInput class">
    <Symbol Key="::vl::workflow::cppcodegen::WfCppInput" UrlName="vl.workflow.cppcodegen.WfCppInput" Doc="false" />
  </Overloads>
  <Overloads DisplayName="WfCppOutput class">
    <Symbol Key="::vl::workflow::cppcodegen::WfCppOutput" UrlName="vl.workflow.cppcodegen.WfCppOutput" Doc="false" />
  </Overloads>
</Namespace>