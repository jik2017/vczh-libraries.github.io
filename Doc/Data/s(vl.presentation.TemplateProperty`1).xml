<?xml version="1.0" encoding="utf-8"?>
<OverloadingSymbols>
  <Symbols Key="vl.presentation.TemplateProperty`1">
    <TemplateDecl Access="Public" Tags="x86, Windows">
      <TypeParameters>
        <TypeParameterDecl Access="Public" Name="T" Tags="x86, Windows" NameKey="::vl::presentation::T" OverloadKey="::vl::presentation::TemplateProperty`1::T" />
      </TypeParameters>
      <Specialization />
      <Element>
        <TypedefDecl Access="Public" Name="TemplateProperty" Tags="x64, Windows;x86, Windows" NameKey="::vl::presentation::TemplateProperty" OverloadKey="::vl::presentation::TemplateProperty`1">
          <Type>
            <GenericTypeDecl>
              <Element>
                <RefTypeDecl ReferencingNameKey="::vl::Func" Name="Func">
                  <ReferencingOverloadKeys>
                    <Key Value="::vl::Func`1@s:vl.Func`1" />
                    <Key Value="::vl::Func`2&lt;function (... TArgs) : R&gt;@s:vl.Func`2{function (... TArgs) # R}" />
                  </ReferencingOverloadKeys>
                </RefTypeDecl>
              </Element>
              <TypeArguments>
                <FunctionTypeDecl CallingConvention="Default" Const="False">
                  <ReturnType>
                    <DecorateTypeDecl Decoration="Pointer">
                      <Element>
                        <RefTypeDecl ReferencingNameKey="::vl::presentation::T" Name="T">
                          <ReferencingOverloadKeys>
                            <Key Value="::vl::presentation::TemplateProperty`1::T@s:vl.presentation.TemplateProperty`1" />
                          </ReferencingOverloadKeys>
                        </RefTypeDecl>
                      </Element>
                    </DecorateTypeDecl>
                  </ReturnType>
                  <Parameters>
                    <VarDecl Access="Public" Static="False">
                      <Type>
                        <DecorateTypeDecl Decoration="LeftRef">
                          <Element>
                            <DecorateTypeDecl Decoration="Const">
                              <Element>
                                <SubTypeDecl ReferencingNameKey="::vl::reflection::description::Value" Name="Value">
                                  <ReferencingOverloadKeys>
                                    <Key Value="::vl::reflection::description::Value@s:vl.reflection.description.Value" />
                                  </ReferencingOverloadKeys>
                                  <Parent>
                                    <SubTypeDecl ReferencingNameKey="::vl::reflection::description" Name="description">
                                      <ReferencingOverloadKeys>
                                        <Key Value="::vl::reflection::description@ns:vl.reflection.description" />
                                      </ReferencingOverloadKeys>
                                      <Parent>
                                        <RefTypeDecl ReferencingNameKey="::vl::reflection" Name="reflection">
                                          <ReferencingOverloadKeys>
                                            <Key Value="::vl::reflection@ns:vl.reflection" />
                                          </ReferencingOverloadKeys>
                                        </RefTypeDecl>
                                      </Parent>
                                    </SubTypeDecl>
                                  </Parent>
                                </SubTypeDecl>
                              </Element>
                            </DecorateTypeDecl>
                          </Element>
                        </DecorateTypeDecl>
                      </Type>
                    </VarDecl>
                  </Parameters>
                </FunctionTypeDecl>
              </TypeArguments>
            </GenericTypeDecl>
          </Type>
        </TypedefDecl>
      </Element>
    </TemplateDecl>
  </Symbols>
</OverloadingSymbols>